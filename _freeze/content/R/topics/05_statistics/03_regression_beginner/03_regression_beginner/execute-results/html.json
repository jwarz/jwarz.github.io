{
  "hash": "73b55c173b9825f1692cfe11610b36a5",
  "result": {
    "markdown": "---\ntitle: \"Introduction to Regression in R\"\nauthor: \"Joschka Schwarz\"\n---\n\n\n\n\nLinear regression and logistic regression are the two most widely used statistical models and act like master keys, unlocking the secrets hidden in datasets. In this course, you’ll gain the skills you need to fit simple linear and logistic regressions. Through hands-on exercises, you’ll explore the relationships between variables in real-world datasets, including motor insurance claims, Taiwan house prices, fish sizes, and more. By the end of this course, you’ll know how to make predictions from your data,  quantify model performance, and diagnose problems with model fit.\n\n# Simple Linear Regression\n\nYou’ll learn the basics of this popular statistical model, what regression is, and how linear and logistic regressions differ. You’ll then learn how to fit simple linear regression models with numeric and categorical explanatory variables, and how to describe the relationship between the response and explanatory variables using model coefficients.\n\n## A tale of two variables\n\nTheory. Coming soon ...\n\n\n**1. A tale of two variables**\n\nHi, I'm Richie. Welcome to the course. You'll be learning about relationships between pairs of variables. Let's start with a real example.\n\n**2. Swedish motor insurance data**\n\nThis dataset on Swedish motor insurance claims is as simple as it gets. Each row represents a region in Sweden, and the two variables are the number of claims made in that region, and the total payment made by the insurance company for those claims, in Swedish krona.\n\n**3. Descriptive statistics**\n\nThis course assumes you have experience of calculating descriptive statistics on variables in a data frame. For example, calculating the mean of each variable. There are many ways to do this in R; the code shown uses the dplyr package.The course also assumes you understand the correlation between two variables. Here, the correlation is zero-point-eight-eight, a strong positive correlation. That means that as the number of claims increases, the total payment typically increases as well.\n\n**4. What is regression?**\n\nRegression models are a class of statistical models that let you explore the relationship between a response variable and some explanatory variables.That is, given some explanatory variables, you can make predictions about the value of the response variable. In the insurance dataset, if you know the number of claims made in a region, you can predict the amount that the insurance company has to pay out.That lets you do thought experiments like asking how much the company would need to pay if the number of claims increased to two hundred.\n\n**5. Jargon**\n\nThe response variable, the one you want to make predictions on, is also known as the dependent variable. These two terms are completely interchangeable.Explanatory variables, used to explain how the predictions will change, are also known as independent variables. Again, these terms are interchangeable.\n\n**6. Linear regression and logistic regression**\n\nIn this course we're going to look at two types of regression. Linear regression is used when the response variable is numeric, like in the motor insurance dataset.Logistic regression is used when the response variable is logical. That is, it takes TRUE or FALSE values.We'll limit the scope further to only consider simple linear regression and simple logistic regression. This means you only have a single explanatory variable.\n\n**7. Visualizing pairs of variables**\n\nBefore you start running regression models, it's a good idea to visualize your dataset. To visualize the relationship between two numeric variables, you can use a scatter plot.The course assumes your data visualization skills are strong enough that you can understand the ggplot code written here. If not, try taking one of DataCamp's courses on ggplot before you begin this course.In the plot, you can see that the total payment increases as the number of claims increases. It would be nice to be able to describe this increase more precisely.\n\n**8. Adding a linear trend line**\n\nOne refinement we can make is to add a trend line to the scatter plot. A trend line means fitting a line that follows the data points. In ggplot, trend lines are added using geom_smooth().Setting the method argument to \"lm\", for \"linear model\" gives a trend line calculated with a linear regression. This means the trend line is a straight line that follows the data as closely as possible.By default, geom_smooth() also shows a standard error ribbon, which I've turned off by setting se to FALSE.The trend line is mostly quite close to the data points, so we can say that the linear regression is a reasonable fit.\n\n**9. Course flow**\n\nHere's the plan for the course. First, we'll visualize and fit linear regressions. Then we'll make predictions with them. Thirdly, we'll look at ways of quantifying whether or not the model is a good fit. In the final chapter, we'll run through this flow again using logistic regression models.\n\n**10. Let's practice!**\n\nLet's get started.\n\n\n## Which one is the response variable?\n\n<!--\nLO: Can identify which response and explantory variables.\n-->\nRegression lets you predict the values of a response variable from known values of explanatory variables. Which variable you use as the response variable depends on the question you are trying to answer, but in many datasets there will be an obvious choice for variables that would be interesting to predict. Over the next few exercises, you'll explore a Taiwan real estate dataset with 4 variables.\n\n|Variable                |Meaning                                                             |\n|:-----------------------|:-------------------------------------------------------------------|\n|`dist_to_mrt_station_m` |Distance to nearest MRT metro station, in meters.                   |\n|`n_convenience`         |No. of convenience stores in walking distance.                      |\n|`house_age_years`       |The age of the house, in years, in 3 groups.                        |\n|`price_twd_msq`         |House price per unit area, in New Taiwan dollars per meter squared. |\n\n> *Question*\n> ---\n> Type `View(taiwan_real_estate)` in the console to view the dataset, and decide which variable would make a good response variable.<br>\n> <br>\n> ⬜ `dist_to_mrt_station_m`<br>\n> ⬜ `n_convenience`<br>\n> ⬜ `house_age_years`<br>\n> ✅ `price_twd_msq`<br>\n\nRapid response! Predicting prices is a common business task, so house price makes a good response variable.\n\n## Visualizing two variables\n\n<!--\nLO: Can visualize the relationship between two numeric variables using a scatter plot with linear trend line.\n-->\nBefore you can run any statistical models, it's usually a good idea to visualize your dataset. Here, we'll look at the relationship between house price per area and the number of nearby convenience stores, using the Taiwan real estate dataset.\n\nOne challenge in this dataset is that the number of convenience stores contains integer data, causing points to overlap. To solve this, you will make the points transparent.\n\n`taiwan_real_estate` is available, `ggplot2` is loaded, and its black and white theme has been set.\n\n**Steps**\n\n1. Using `taiwan_real_estate`, draw a scatter plot of `price_twd_msq` (y-axis) versus `n_convenience` (x-axis).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load packages\nlibrary(fst)\nlibrary(tibble)\nlibrary(ggplot2)\n\n# Load data\ntaiwan_real_estate <- read_fst(\"data/taiwan_real_estate.fst\") |> as_tibble()\n\n# Draw a scatter plot of n_convenience vs. price_twd_msq\nggplot(taiwan_real_estate, aes(n_convenience, price_twd_msq)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n2. Update the plot to make the points 50% transparent by setting `alpha` to `0.5`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Make points 50% transparent\nggplot(taiwan_real_estate, aes(n_convenience, price_twd_msq)) +\n  geom_point(alpha = 0.5) \n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n3. Update the plot by adding a trend line, calculated using a linear regression. You can omit the confidence ribbon.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Add a linear trend line without a confidence ribbon\nggplot(taiwan_real_estate, aes(n_convenience, price_twd_msq)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nScholarly scatter plotting! Scatter plots are the standard way to visualize the relationship between two numeric variables, and ggplot makes adding linear trend lines easy.\n\n## Fitting a linear regression\n\nTheory. Coming soon ...\n\n\n**1. Fitting a linear regression**\n\nYou may have noticed that the linear regression trend lines in the scatter plots were straight lines. That's a defining feature of a linear regression.\n\n**2. Straight lines are defined by two things**\n\nStraight lines are completely defined by two properties. The intercept is the y value when x is zero. The slope is the steepness of the line, equal to the amount y increases if you increase x by one.The equation for a straight line is that the y value is the intercept plus the slope times the x value.\n\n**3. Estimating the intercept**\n\nHere's the trend line from the Swedish insurance dataset. Let's try to estimate the intercept.\n\n**4. Estimating the intercept**\n\nTo find the intercept, look at where the trend line intersects the y axis.\n\n**5. Estimating the intercept**\n\nIt's below half way to the fifty mark, so I'd guess it's about twenty.\n\n**6. Estimating the slope**\n\nTo estimate the slope, we need two points. To make the guessing easier, I've chosen points where the line is close to the gridlines.\n\n**7. Estimating the slope**\n\nFirst, we calculate the change in y values between the points. One y value is about four hundred and the other is about one hundred and fifty, so the difference is two hundred and fifty.\n\n**8. Estimating the slope**\n\nNow we do the same for the x axis. One point is at one hundred and ten, the other at forty. So the difference is seventy.\n\n**9. Estimating the slope**\n\nTo estimate the slope we divide one number by the other. Two hundred and fifty divided by seventy is about three point five, so that is our estimate for the slope.Let's run a linear regression to check our guess.\n\n**10. Running a model**\n\nTo run a linear regression model, you call the lm function with two arguments. The first argument is a formula. This is a type of variable used by many modeling functions. The response variable is written to the left of the tilde, and the explanatory variable is written to the right.The data argument takes the data frame containing the variables.When you print the resulting model, it tells you the code you used to create it, and two coefficients.These coefficients are the intercept and slope of the straight line. It seems our guesses were pretty close. The intercept is very close to our estimate of twenty. The slope, indicated here as n_claims, is three point four, slightly lower than what we guessed.\n\n**11. Interpreting the model coefficients**\n\nThat means that we expect the total payment to be twenty plus three point four times the number of claims. So for every additional claim, we expect the total payment to increase by three point four.\n\n**12. Let's practice!**\n\nTime to fit some models.\n\n## Estimate the intercept\n\n<!--\nLO: Can estimate the intercept of a straight line.\n\nNote: this exercise will be changed to an InputExercise once those become available.\n-->\nLinear regression models always fit a straight line to the data. Straight lines are defined by two properties: their intercept and their slope.\n\nHere, you can see a scatter plot of house price per area versus number of nearby convenience stores, using the Taiwan real estate dataset.\n\n> *Question*\n> ---\n> Click the plot, then estimate the intercept of the linear regression trend line.<br>\n> <br>\n> ⬜ 0<br>\n> ✅ 8.22<br>\n> ⬜ 16.21<br>\n\nInsightful intercept interpretation! The intercept is the y-value when x equals zero.\n\n## Estimate the slope\n\n<!--\nLO: Can estimate the slope of a straight line.\n\nNote: this exercise will be changed to an InputExercise once those become available.\n-->\nHere is the same scatter plot of house price per area versus number of nearby convenience stores, using the Taiwan real estate dataset.\n\nThis time, estimate the slope of the trend line. Click the line once, then double click as different position on the line, then read the slope value.\n\n> *Question*\n> ---\n> ???<br>\n> <br>\n> ✅ 0.80<br>\n> ⬜ 1<br>\n> ⬜ 8.22<br>\n\nSuper slope-estimation! The slope is the rate of change in the y direction divided by the rate of change in the x direction. \n\n## Linear regression with lm()\n\n<!--\nLO: Can run a linear regression using lm()\n-->\nWhile ggplot can display a linear regression trend line using `geom_smooth()`, it doesn't give you access to the intercept and slope as variables, or allow you to work with the model results as variables. That means that sometimes you'll need to run a linear regression yourself.\n\nTime to run your first model!\n\n`taiwan_real_estate` is available. *TWD* is an abbreviation for Taiwan dollars.\n\n**Steps**\n\n1. Run a linear regression with `price_twd_msq` as the response variable, `n_convenience` as the explanatory variable, and `taiwan_real_estate` as the dataset.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Run a linear regression of price_twd_msq vs. n_convenience\nlm(price_twd_msq ~ n_convenience, data = taiwan_real_estate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = price_twd_msq ~ n_convenience, data = taiwan_real_estate)\n#> \n#> Coefficients:\n#>   (Intercept)  n_convenience  \n#>        8.2242         0.7981\n```\n:::\n:::\n\n\n> *Question*\n> ---\n> The model had an `(Intercept)` coefficient of `8.2242`. What does this mean?<br>\n> <br>\n> ⬜ On average, houses had a price of 8.2242 TWD per square meter.<br>\n> ✅ On average, a house with zero convenience stores nearby had a price of 8.2242 TWD per square meter.<br>\n> ⬜ The minimum house price was 8.2242 TWD per square meter.<br>\n> ⬜ The minimum house price with zero convenience stores nearby was 8.2242 TWD per square meter.<br>\n> ⬜ The intercept tells you nothing about house prices.<br>\n\n> *Question*\n> ---\n> The model had an `n_convenience` coefficient of `0.7981`. What does this mean?<br>\n> <br>\n> ⬜ If you increase the number of nearby convenience stores by one, then the expected increase in house price is `0.7981` TWD per square meter.<br>\n> ⬜ If you increase the house price by `0.7981` TWD per square meter, then the expected increase in the number of nearby convenience stores is one.<br>\n> ⬜ If you increase the number of nearby convenience stores by `0.7981`, then the expected increase in house price is one TWD per square meter.<br>\n> ✅ If you increase the house price by one TWD per square meter, then the expected increase in the number of nearby convenience stores is `0.7981`.<br>\n> ⬜ The `n_convenience` coefficient tells you nothing about house prices.<br>\n\nLively linear regression modeling! The intercept is positive, so a house with no convenience stores nearby still has a positive price. The coefficient for convenience stores is also positive, so as the number of nearby convenience stores increases, so does the price of the house.\n\n## Categorical explanatory variables\n\nTheory. Coming soon ...\n\n\n**1. Categorical explanatory variables**\n\nSo far we looked at running a linear regression using a numeric explanatory variable. Now let's look at what happens with a categorical explanatory variable.\n\n**2. Fish dataset**\n\nLet's take a look at some data on the masses of fish sold at a fish market. Each row of data contains the species of a fish, and its mass. The mass will be the response variable.\n\n**3. Visualizing 1 numeric and 1 categorical variable**\n\nTo visualize the data, scatter plots aren't ideal because species is categorical. Instead, we can draw a histogram for each of the species.Because the dataset is fairly small I set the bins argument of geom_histogram() to just nine.To give a panel for each species, I used facet_wrap(). This takes the name of the variable to split on, wrapped in the vars() function.\n\n**4. Summary statistics: mean mass by species**\n\nLet's calculate some summary statistics. First we group by species then we summarize to calculate their mean masses.You can see that the mean mass of a bream is six hundred and eighteen grams. The mean mass for a perch is three hundred and eighty two grams, and so on.\n\n**5. Linear regression**\n\nLet's run a linear regression using mass as the response variable and species as the explanatory variable. The syntax is the same: you call lm(), passing a formula with the response variable on the left and the explanatory variable on the right, and setting the data argument to the data frame.This time we have four coefficients: an intercept, and one for three of the fish species.A coefficient for bream is missing, but the number for the intercept looks familiar. The intercept is the mean mass of the bream that you just calculated.You might wonder what the other coefficients are, and why perch has a negative coefficient, since fish masses can't be negative.The coefficients for each category are calculated relative to the intercept. If you subtract two hundred and thirty five point six from six hundred and seventeen point eight, you get three hundred and eighty two, which is the mean mass of a perch.This way of displaying results can be useful for models with multiple explanatory variables, but for simple linear regression, it's just confusing. Fortunately, we can fix it.\n\n**6. No intercept**\n\nBy changing the formula slightly to append \"plus zero\", we specify that all the coefficients should be given relative to zero. Equivalently, it means we are fitting a linear regression without an intercept term.Now these coefficients make more sense. They are all just the mean masses for each species.This is a reassuringly boring result. When you only have a single, categorical explanatory variable, the linear regression coefficients are the means of each category.\n\n**7. Let's practice!**\n\nTime for you to try it.\n\n## Visualizing numeric vs. categorical\n\n<!-- \nLO: Can visualize a numeric variable splitby a categorical variable using a faceted histogram.\n-->\nIf the explanatory variable is categorical, the scatter plot that you used before to visualize the data doesn't make sense. Instead, a good option is to draw a histogram for each category.\n\nThe Taiwan real estate dataset has a categorical variable in the form of the age of each house. The ages have been split into 3 groups: 0 to 15 years, 15 to 30 years, and 30 to 45 years.\n\n`taiwan_real_estate` is available and `ggplot2` is loaded.\n\n**Steps**\n\n1. Using `taiwan_real_estate`, plot a histogram of `price_twd_msq` with `10` bins.\n2. Facet the plot by `house_age_years` to give 3 panels.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Using taiwan_real_estate, plot price_twd_msq\nggplot(taiwan_real_estate, aes(price_twd_msq)) +\n  # Make it a histogram with 10 bins\n  geom_histogram(bins = 10) +\n  # Facet the plot so each house age group gets its own panel\n  facet_wrap(vars(house_age_years))\n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nHigh five for histograms! It appears that new houses are the most expensive on average, and the medium aged ones (15 to 30 years) are the cheapest.\n\n## Calculating means by category\n\n<!-- \nLO: Can calculate grouped means.\n-->\nA good way to explore categorical variables is to calculate summary statistics such as the mean for each category. Here, you'll look at grouped means for the house prices in the Taiwan real estate dataset.\n\n**Steps**\n\n1. Group `taiwan_real_estate` by `house_age_years`.\n2. Summarize to calculate the mean `price_twd_msq` for each group, naming the column `mean_by_group`.\n3. Assign the result to `summary_stats` and *look at the numbers*.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load package\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attache Paket: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Die folgenden Objekte sind maskiert von 'package:stats':\n#> \n#>     filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Die folgenden Objekte sind maskiert von 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nsummary_stats <- taiwan_real_estate %>% \n  # Group by house age\n  group_by(house_age_years) %>% \n  # Summarize to calculate the mean house price/area\n  summarize(mean_by_group = mean(price_twd_msq))\n\n# See the result\nsummary_stats\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"house_age_years\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"mean_by_group\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0 to 15\",\"2\":\"12.637471\"},{\"1\":\"15 to 30\",\"2\":\"9.876743\"},{\"1\":\"30 to 45\",\"2\":\"11.393264\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nStunning summary stat calculation! Make a mental note of the results, as they'll feature in the next exercise too.\n\n## lm() with a categorical explanatory variable\n\n<!-- \nLO: Can run a simple linear regression with a categorical explanatory variable. Understands that the model coefficients are the group means.\n-->\nLinear regressions also work with categorical explanatory variables. In this case, the code to run the model is the same, but the coefficients returned by the model are different. Here you'll run a linear regression on the Taiwan real estate dataset.\n\n`taiwan_real_estate` is available.\n\n**Steps**\n\n1. Run a linear regression with `price_twd_msq` as the response variable, `house_age_years` as the explanatory variable, and `taiwan_real_estate` as the dataset. Assign to `mdl_price_vs_age`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Run a linear regression of price_twd_msq vs. house_age_years\nmdl_price_vs_age <- lm(\n  price_twd_msq ~ house_age_years, \n  data = taiwan_real_estate\n)\n\n# See the result\nmdl_price_vs_age\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = price_twd_msq ~ house_age_years, data = taiwan_real_estate)\n#> \n#> Coefficients:\n#>       (Intercept)  house_age_years.L  house_age_years.Q  \n#>           11.3025            -0.8798             1.7462\n```\n:::\n:::\n\n\n2. Update the model formula so that no intercept is included in the model. Assign to `mdl_price_vs_age_no_intercept`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Update the model formula to remove the intercept\nmdl_price_vs_age_no_intercept <- lm(\n  price_twd_msq ~ house_age_years + 0, \n  data = taiwan_real_estate\n)\n\n# See the result\nmdl_price_vs_age_no_intercept\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = price_twd_msq ~ house_age_years + 0, data = taiwan_real_estate)\n#> \n#> Coefficients:\n#>  house_age_years0 to 15  house_age_years15 to 30  house_age_years30 to 45  \n#>                  12.637                    9.877                   11.393\n```\n:::\n:::\n\n\nClassy categorical linear regression! The coefficients of the model are just the means of each category you calculated previously.\n\n# 2. Predictions and model objects\n\nIn this chapter, you’ll discover how to use linear regression models to make predictions on Taiwanese house prices and Facebook advert clicks. You’ll also grow your regression skills as you get hands-on with model objects, understand the concept of \"regression to the mean\", and learn how to transform variables in a dataset.\n\n## Making predictions\n\nTheory. Coming soon ...\n\n\n**1. Making predictions**\n\nThe big benefit of running models rather than simply calculating descriptive statistics is that models let you make predictions.\n\n**2. The fish dataset: bream**\n\nHere's the fish dataset again. This time, we'll look only at the bream data. There's a new explanatory variable too: the length of each fish, which we'll use to predict the mass of the fish.\n\n**3. Plotting mass vs. length**\n\nHere's a scatter plot of mass versus length for the bream data, with a linear trend line.\n\n**4. Running the model**\n\nBefore we can make predictions, we need a model. As before, we call lm with a formula and the dataset. The response, mass in grams, goes on the left-hand side of the formula, and the explanatory variable, length in centimeters, goes on the right. We need to assign the result to a variable to reuse later on.\n\n**5. Data on explanatory values to predict**\n\nThe principle behind predicting is to ask questions of the form \"if I set the explanatory variables to these values, what value would the response variable have?\".That means that the next step is to choose some values for the explanatory variables. For this model, the only explanatory variable is the length of the fish. I've chosen a vector of lengths from twenty centimeters to forty centimeters.The explanatory variables need to be stored inside a data frame. Here, I'm using a tibble, which is a data frame variant that's easier to work with. I could also have used a standard data-dot-frame.\n\n**6. Call predict()**\n\nThe next step is to call predict, passing the model object and the data frame of explanatory variables.predict returns a vector of predictions, one for each row of the explanatory data.\n\n**7. Predicting inside a data frame**\n\nHaving a vector of predictions isn't that helpful for programming with. It's easier to work with if the predictions are in a data frame alongside the explanatory variables.I've started with the explanatory data, then used mutate to add a new column, named after the response variable, mass_g, and calculated it with the same predict code from the previous slide. The prediction data frame contains the explanatory variable and the predicted response.Now we can answer questions like \"how heavy would we expect a bream with length twenty five centimeters to be?\", even though the original dataset didn't include a bream of that exact length. Looking at the prediction data, you can see that the predicted mass is three hundred and twenty eight grams.\n\n**8. Showing predictions**\n\nLet's include the predictions we just made to the scatter plot. We add another geom_point layer, and set the data argument to the prediction data frame we just created.I've colored the points blue to distinguish them from the data points.Notice that the predictions lie exactly on the trend line.\n\n**9. Extrapolating**\n\nAll the fish were between twenty three and thirty eight centimeters, but the linear model allows us to make predictions outside that range. This is called extrapolating.Let's see what prediction we get for a ten centimeter bream. The code is the same as before, but with a length of ten in the explanatory data frame.Wow. The predicted mass is almost minus five hundred grams! This is obviously not physically possible, so the model performs poorly here. Extrapolation is sometimes appropriate, but can lead to misleading or ridiculous results. You need to understand the context of your data in order to determine whether it is sensible to extrapolate.\n\n**10. Let's practice!**\n\nI predict that you are about to make some predictions.\n\n## Predicting house prices\n\n<!--\nLO: Can make predictions from linear models using predict() and stroe them in a data frame.\n-->\nPerhaps the most useful feature of statistical models like linear regression is that you can make predictions. That is, you specify values for each of the explanatory variables, feed them to the model, and you get a prediction for the corresponding response variable. The code flow is as follows.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nexplanatory_data <- tibble(\n  explanatory_var = some_values\n)\nexplanatory_data %>%\n  mutate(\n    response_var = predict(model, explanatory_data)\n  )\n```\n:::\n\n\nHere, you'll make predictions for the house prices in the Taiwan real estate dataset.\n\n**Steps**\n\n1. Create a tibble of explanatory data, where the number of convenience stores, `n_convenience`, takes the integer values from zero to ten.\n2. Use the model `mdl_price_vs_conv` to make predictions from `explanatory_data`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Linear regression model of house price versus number of convenience stores\nmdl_price_vs_conv <- lm(formula = price_twd_msq ~ n_convenience, data = taiwan_real_estate)\n\n# Create a tibble with n_convenience column from zero to ten\nexplanatory_data <- tibble(\n  n_convenience = 0:10\n)\n\n# Use mdl_price_vs_conv to predict with explanatory_data\npredict(mdl_price_vs_conv, explanatory_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>         1         2         3         4         5         6         7         8 \n#>  8.224237  9.022317  9.820397 10.618477 11.416556 12.214636 13.012716 13.810795 \n#>         9        10        11 \n#> 14.608875 15.406955 16.205035\n```\n:::\n:::\n\n\n3. Create a tibble of predictions named `prediction_data`.\n\n    * Start with `explanatory_data`.\n    * Add an extra column, `price_twd_msq`, containing the predictions.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Edit this, so predictions are stored in prediction_data\nprediction_data <- explanatory_data %>% \n  mutate(\n    price_twd_msq = predict(mdl_price_vs_conv, explanatory_data)\n  )\n\n# See the result\nprediction_data\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"n_convenience\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"price_twd_msq\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"8.224237\"},{\"1\":\"1\",\"2\":\"9.022317\"},{\"1\":\"2\",\"2\":\"9.820397\"},{\"1\":\"3\",\"2\":\"10.618477\"},{\"1\":\"4\",\"2\":\"11.416556\"},{\"1\":\"5\",\"2\":\"12.214636\"},{\"1\":\"6\",\"2\":\"13.012716\"},{\"1\":\"7\",\"2\":\"13.810795\"},{\"1\":\"8\",\"2\":\"14.608875\"},{\"1\":\"9\",\"2\":\"15.406955\"},{\"1\":\"10\",\"2\":\"16.205035\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nPremium predicting! Having the predictions in a data frame will make it easier to visualize them.\n\n## Visualizing predictions\n\n<!--\nLO: Can annotate a scatter plot of response vs. explanatory variables with predictions.\n-->\nThe prediction data you calculated contains a column of explanatory variable values and a column of response variable values. That means you can plot it on the same scatter plot of response versus explanatory data values.\n\n`prediction_data` is available and `ggplot2` is loaded. The code for the scatter plot with linear trend line you drew in Chapter 1 is shown.\n\n**Steps**\n\n1. Extend the plotting code to include the point predictions in `prediction_data`. Color the points yellow.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Add to the plot\nggplot(taiwan_real_estate, aes(n_convenience, price_twd_msq)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  # Add a point layer of prediction data, colored yellow\n  geom_point(data = prediction_data, color = \"yellow\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nPerfect prediction plotting! Naturally, the predicted points lie on the trend line.\n\n## The limits of prediction\n\n<!--\nLO: Understand that predict() will let you make predictions about situations that are impossible in real-life.\n-->\nIn the last exercise you made predictions on some sensible, could-happen-in-real-life, situations. That is, the cases when the number of nearby convenience stores were between zero and ten. To test the limits of the model's ability to predict, try some impossible situations.\n\nUse the console to try predicting house prices from `mdl_price_vs_conv` when there are `-1` convenience stores. Do the same for `2.5` convenience stores. What happens in each case?\n\n`mdl_price_vs_conv` is available and `dplyr` is loaded.\n\n**Steps**\n\n1. Create some impossible explanatory data. Define a tibble with one column, `n_convenience`, set to minus one, assigning to `minus_one`. Create another with `n_convenience` set to two point five, assigning to `two_pt_five`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Define a tibble where n_convenience is -1\nminus_one <- tibble(n_convenience = -1)\n\n# Define a tibble where n_convenience is 2.5\ntwo_pt_five <- tibble(n_convenience = 2.5)\n```\n:::\n\n\n> *Question*\n> ---\n> Try making predictions on your two impossible cases. What happens?<br>\n> <br>\n> ⬜ The model throws an error because these cases are impossible in real life.<br>\n> ⬜ The model throws a warning because these cases are impossible in real life.<br>\n> ✅ The model successfully gives a prediction about cases that are impossible in real life.<br>\n> ⬜ The model throws an error for `-1` stores because it violates the assumptions of a linear regression. `2.5` stores gives a successful prediction.<br>\n> ⬜ The model throws an error for `2.5` stores because it violates the assumptions of a linear regression. `-1` stores gives a successful prediction.<br>\n\nLegendary limit detection! Linear models don't know what is possible or not in real life. That means that they can give you predictions that don't make any sense when applied to your data. You need to understand what your data means in order to determine whether a prediction is nonsense or not.\n\n## Working with model objects\n\nTheory. Coming soon ...\n\n\n**1. Working with model objects**\n\nThe model objects created by lm contain a lot of information. In this video, you'll see how to extract it.\n\n**2. coefficients()**\n\nHere's the model of mass versus length in the bream dataset. Printing it shows the code used to create it, and the coefficients. To use those coefficients in the rest of your analysis, you need to be able to extract them from the object. You do this with the coefficients function. It returns a named numeric vector of coefficients. The names are the names of the coefficients.\n\n**3. fitted()**\n\n\"Fitted values\" is jargon for predictions on the original dataset used to create the model. Access them with the fitted function.The result is a numeric vector of length thirty five, which is the number of rows in the bream dataset.The fitted function is essentially a shortcut for taking the explanatory variable columns from the dataset, then feeding them to the predict function.\n\n**4. residuals()**\n\n\"Residuals\" are a measure of inaccuracy in the model fit, and are accessed with the residuals function. Like fitted values, there is one residual for each row of the dataset.Each residual is the actual response value minus the predicted response value. In this case, the residuals are the masses of breams, minus the fitted values.You'll see more on how to use the fitted values and residuals to assess the quality of your model in Chapter 3.\n\n**5. summary()**\n\nThe summary function shows a more extended printout of the details of the model.Let's step through this piece by piece.\n\n**6. summary(): call**\n\nFirst, you see the code you used to create the model.\n\n**7. summary(): residuals**\n\nThen you see some summary statistics of the residuals. If the model is a good fit, the residuals should follow a normal distribution. Look at the median, and see if the number is close to zero. Then look at the first and third quartiles and see if they have about the same absolute value. That is, the number labeled 1Q is about minus the number labeled 3Q.You can get a more accurate sense of this by drawing plots, but this is a quick check.\n\n**8. summary(): coefficients**\n\nNext you see details of the coefficients. The numbers in the first column are the ones returned by the coefficients function. The numbers in the last column are the p-values, which refer to statistical significance. These are beyond the scope of this course, but you can learn about them in DataCamp's courses on inference.\n\n**9. summary(): model metrics**\n\nFinally, there are some metrics on the performance of the model. These will be discussed in the next chapter.\n\n**10. tidy()**\n\nWhile summary shows lots of information, it is designed to be read, not to be manipulated with code. In R, functions for programming with should return either a vector, like coefficients, fitted, and residuals did, or a data frame.The broom package provides functions that return data frames. This makes the model results easy to manipulate with dplyr, ggplot2, and other tidyverse packages.The tidy function returns the coefficient details in a data frame.\n\n**11. augment()**\n\naugment returns observation level results. You get one row for each row of the data frame used to create the model. On the left, you can see the mass and length variables that we used to create the model. Dot-fitted contains the fitted values, and dot-resid contains the residuals.\n\n**12. glance()**\n\nglance returns model-level results. These are the performance metrics that you saw near the bottom of the summary output, plus a few others.\n\n**13. Let's practice!**\n\nYour turn to extract some model elements.\n\n## Extracting model elements\n\n<!--\nLO: Can extract coefficients, fitted values, residuals, and a summary from a linear regression model.\n-->\nThe variable returned by `lm()` that contains the model object has many elements. In order to perform further analysis on the model results, you need to extract the useful bits of it. The model coefficients, the fitted values, and the residuals are perhaps the most important bits of the linear model object.\n\n**Steps**\n\n1. Print the coefficients of `mdl_price_vs_conv`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get the model coefficients of mdl_price_vs_conv\ncoefficients(mdl_price_vs_conv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>   (Intercept) n_convenience \n#>     8.2242375     0.7980797\n```\n:::\n:::\n\n\n2. Print the fitted values of `mdl_price_vs_conv`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get the fitted values of mdl_price_vs_conv\nfitted(mdl_price_vs_conv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>         1         2         3         4         5         6         7         8 \n#> 16.205035 15.406955 12.214636 12.214636 12.214636 10.618477 13.810795 13.012716 \n#>         9        10        11        12        13        14        15        16 \n#>  9.022317 10.618477  9.022317 15.406955 12.214636 11.416556 11.416556  9.820397 \n#>        17        18        19        20        21        22        23        24 \n#> 13.012716  9.022317 14.608875 13.810795 10.618477 13.810795  9.022317 13.810795 \n#>        25        26        27        28        29        30        31        32 \n#> 11.416556  9.820397 12.214636 12.214636 11.416556 12.214636  8.224237 13.810795 \n#>        33        34        35        36        37        38        39        40 \n#>  9.022317 13.012716 13.810795  8.224237  9.820397  9.022317 13.012716 12.214636 \n#>        41        42        43        44        45        46        47        48 \n#>  8.224237  8.224237 12.214636 13.012716 11.416556 14.608875 15.406955 10.618477 \n#>        49        50        51        52        53        54        55        56 \n#>  8.224237  9.022317 11.416556  9.022317 10.618477 12.214636 12.214636  8.224237 \n#>        57        58        59        60        61        62        63        64 \n#> 14.608875 13.810795  9.022317 12.214636  9.820397 13.012716 10.618477 11.416556 \n#>        65        66        67        68        69        70        71        72 \n#>  8.224237 14.608875 13.012716 12.214636 13.012716 12.214636 15.406955 10.618477 \n#>        73        74        75        76        77        78        79        80 \n#> 14.608875  8.224237 16.205035  9.022317 10.618477 10.618477  9.820397  9.022317 \n#>        81        82        83        84        85        86        87        88 \n#> 11.416556 13.012716 13.810795 10.618477 13.810795 15.406955  9.022317  8.224237 \n#>        89        90        91        92        93        94        95        96 \n#>  8.224237  8.224237  9.022317  8.224237 11.416556  8.224237 12.214636 12.214636 \n#>        97        98        99       100       101       102       103       104 \n#> 15.406955 10.618477 12.214636 15.406955 11.416556  9.022317 13.012716 13.012716 \n#>       105       106       107       108       109       110       111       112 \n#> 13.012716 13.012716 14.608875  9.022317  9.820397 10.618477 12.214636 13.810795 \n#>       113       114       115       116       117       118       119       120 \n#> 10.618477 13.012716 14.608875  9.820397  9.022317  8.224237 10.618477 12.214636 \n#>       121       122       123       124       125       126       127       128 \n#> 12.214636 12.214636 11.416556  8.224237 13.810795 13.012716 11.416556 12.214636 \n#>       129       130       131       132       133       134       135       136 \n#> 13.012716 13.810795 14.608875 10.618477 12.214636 14.608875 13.012716  8.224237 \n#>       137       138       139       140       141       142       143       144 \n#> 12.214636 13.012716  8.224237 12.214636 12.214636 10.618477 12.214636 12.214636 \n#>       145       146       147       148       149       150       151       152 \n#>  9.022317 12.214636  8.224237 14.608875  8.224237 14.608875 13.810795 15.406955 \n#>       153       154       155       156       157       158       159       160 \n#>  9.022317 13.012716  8.224237  8.224237  8.224237 11.416556 12.214636 11.416556 \n#>       161       162       163       164       165       166       167       168 \n#> 14.608875 10.618477  8.224237 12.214636  8.224237  9.022317 13.012716 14.608875 \n#>       169       170       171       172       173       174       175       176 \n#> 12.214636  9.022317  8.224237 12.214636 15.406955 11.416556 13.810795 10.618477 \n#>       177       178       179       180       181       182       183       184 \n#>  8.224237 15.406955 11.416556  9.022317  8.224237 14.608875 10.618477  8.224237 \n#>       185       186       187       188       189       190       191       192 \n#>  8.224237 10.618477 10.618477  8.224237 14.608875  8.224237 14.608875  9.820397 \n#>       193       194       195       196       197       198       199       200 \n#> 13.810795 12.214636  8.224237 12.214636  9.820397 14.608875 13.810795 14.608875 \n#>       201       202       203       204       205       206       207       208 \n#>  8.224237 12.214636 10.618477 12.214636  9.022317 10.618477 16.205035 10.618477 \n#>       209       210       211       212       213       214       215       216 \n#>  9.022317 14.608875 12.214636  9.022317  9.820397 15.406955 10.618477 14.608875 \n#>       217       218       219       220       221       222       223       224 \n#>  9.022317 13.012716 12.214636 14.608875 15.406955  8.224237 16.205035  8.224237 \n#>       225       226       227       228       229       230       231       232 \n#> 13.012716 13.012716  8.224237 14.608875  8.224237  8.224237 10.618477  8.224237 \n#>       233       234       235       236       237       238       239       240 \n#>  9.022317 15.406955 11.416556 13.810795 16.205035  8.224237  8.224237  8.224237 \n#>       241       242       243       244       245       246       247       248 \n#>  9.820397 13.810795 10.618477 14.608875 10.618477 12.214636 13.012716  8.224237 \n#>       249       250       251       252       253       254       255       256 \n#>  8.224237  9.022317 13.810795  8.224237 15.406955  9.820397 12.214636  9.022317 \n#>       257       258       259       260       261       262       263       264 \n#>  9.022317  9.022317 13.012716  8.224237 11.416556 10.618477 12.214636 10.618477 \n#>       265       266       267       268       269       270       271       272 \n#> 13.810795 11.416556 10.618477 12.214636 12.214636  8.224237  9.022317 14.608875 \n#>       273       274       275       276       277       278       279       280 \n#> 12.214636  9.022317 13.810795 13.810795 12.214636 10.618477 13.012716 10.618477 \n#>       281       282       283       284       285       286       287       288 \n#> 13.012716 15.406955  9.022317  9.820397 13.810795 10.618477 15.406955 12.214636 \n#>       289       290       291       292       293       294       295       296 \n#> 13.012716 12.214636  8.224237 13.810795 12.214636 13.810795 13.012716 10.618477 \n#>       297       298       299       300       301       302       303       304 \n#> 11.416556 11.416556  8.224237 16.205035 11.416556  8.224237 10.618477  8.224237 \n#>       305       306       307       308       309       310       311       312 \n#> 10.618477 12.214636  9.022317  8.224237 12.214636  8.224237  9.820397 11.416556 \n#>       313       314       315       316       317       318       319       320 \n#> 15.406955 12.214636 13.012716  9.820397 13.810795  9.820397 16.205035 12.214636 \n#>       321       322       323       324       325       326       327       328 \n#>  8.224237 11.416556  9.022317 13.012716  9.820397 14.608875 13.810795 10.618477 \n#>       329       330       331       332       333       334       335       336 \n#> 10.618477  8.224237  8.224237  8.224237  9.820397 12.214636 12.214636 13.012716 \n#>       337       338       339       340       341       342       343       344 \n#>  9.820397 12.214636 15.406955 12.214636  8.224237  9.820397 15.406955 14.608875 \n#>       345       346       347       348       349       350       351       352 \n#>  8.224237  8.224237  9.820397  9.022317 13.012716 12.214636 12.214636 10.618477 \n#>       353       354       355       356       357       358       359       360 \n#> 10.618477 10.618477  9.022317 12.214636  9.022317 15.406955 13.012716  8.224237 \n#>       361       362       363       364       365       366       367       368 \n#> 16.205035 14.608875 11.416556 16.205035 13.810795 11.416556  9.022317  9.820397 \n#>       369       370       371       372       373       374       375       376 \n#>  9.022317 10.618477 12.214636 12.214636 13.810795  9.022317 12.214636  8.224237 \n#>       377       378       379       380       381       382       383       384 \n#>  9.820397 14.608875 14.608875 13.012716 12.214636 15.406955  8.224237 11.416556 \n#>       385       386       387       388       389       390       391       392 \n#>  8.224237 16.205035  8.224237 10.618477 11.416556 14.608875 15.406955  9.022317 \n#>       393       394       395       396       397       398       399       400 \n#> 13.012716 11.416556  9.022317 11.416556  9.022317 11.416556  9.820397  9.022317 \n#>       401       402       403       404       405       406       407       408 \n#> 12.214636 10.618477  9.022317 15.406955 12.214636 13.012716 13.810795  8.224237 \n#>       409       410       411       412       413       414 \n#> 10.618477  8.224237 15.406955 13.810795 12.214636 15.406955\n```\n:::\n:::\n\n\n3. Print the residuals of `mdl_price_vs_conv`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get the residuals of mdl_price_vs_conv\nresiduals(mdl_price_vs_conv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>             1             2             3             4             5 \n#>  -4.737561094  -2.638422376   2.097012981   4.366301937   0.826211165 \n#>             6             7             8             9            10 \n#>  -0.905919870  -1.617149478   1.117390148  -3.333966186  -3.931638479 \n#>            11            12            13            14            15 \n#>   3.504157868   2.172470211  -0.323561906  -4.215346032  -1.038341493 \n#>            16            17            18            19            20 \n#>   5.459482085   8.197571691   2.293870425  -1.810085473   0.621882292 \n#>            21            22            23            24            25 \n#>  -1.753121081   1.801912549  -1.579049393   0.682396664   0.323231880 \n#>            26            27            28            29            30 \n#>  -1.650956644   4.789902542  -2.048221512   2.804321139   5.062217217 \n#>            31            32            33            34            35 \n#>  -1.537399329  -6.246498949   1.325640471   1.904076986   2.860914062 \n#>            36            37            38            39            40 \n#>   0.035974348  -2.891501273  -1.367249091   1.419962009   1.764183934 \n#>            41            42            43            44            45 \n#>  -3.413344866  -2.717429586  -1.715392466  -2.695015299   4.892066979 \n#>            46            47            48            49            50 \n#>  -3.020372916  -2.698936748   7.989692838  -4.169774518  -5.028368607 \n#>            51            52            53            54            55 \n#>   1.957119929  -2.759079650  -2.449036361  -0.444590650   3.428329168 \n#>            56            57            58            59            60 \n#>  -4.079002960  -1.931114217   2.376799085  -2.184193115   0.614410863 \n#>            61            62            63            64            65 \n#>  -3.375616251   6.109825851  -2.237236058   5.224896026  -0.569169374 \n#>            66            67            68            69            70 \n#>  -1.204941751   2.327677591   4.971445659  -2.059614391   0.493382118 \n#>            71            72            73            74            75 \n#>   2.444784886   1.726455319  -3.625516638  -2.172800236   0.254874610 \n#>            76            77            78            79            80 \n#>  -0.096447275   0.516167875  -2.872636966  -0.803755434  -1.004162858 \n#>            81            82            83            84            85 \n#>   0.777089672  -1.878071274   0.742911036  -5.262954666  -0.588405151 \n#>            86            87            88            89            90 \n#>  -0.036304373  -0.852876927  -2.687172400   6.299211866  -0.569169374 \n#>            91            92            93            94            95 \n#>   4.714445312   4.846866935  -4.820489753  -3.352830494   0.190810258 \n#>            96            97            98            99           100 \n#>   3.458586354   2.596070816  -0.149490218   3.216528866   3.413014841 \n#>           101           102           103           104           105 \n#>   0.141688764   0.932297051   3.447193476   0.814818287  -3.784273998 \n#>           106           107           108           109           110 \n#>   8.469886366  -0.357740541  -0.973905672   0.497303568  -2.025435755 \n#>           111           112           113           114           115 \n#>   3.398071982  -1.889464153  -3.629066618 -10.713169610   1.518204996 \n#>           116           117           118           119           120 \n#>   4.218937456  -5.330940467  -4.290803262  -1.359777662   5.818646869 \n#>           121           122           123           124           125 \n#>  -2.744136792   2.308813283  -1.582970843   5.542782214   3.556829342 \n#>           126           127           128           129           130 \n#>   1.692276683   7.615213726   4.426816309   5.353396199  -1.405349176 \n#>           131           132           133           134           135 \n#>  -3.262430405  -1.329520476  -0.868191255  -2.657286683  -0.244183226 \n#>           136           137           138           139           140 \n#>  -1.930742748   1.945727050   1.329190450   4.937638493   0.644668049 \n#>           141           142           143           144           145 \n#>   3.337557610  -1.874149825  -0.868191255  -0.081504417  -0.429276322 \n#>           146           147           148           149           150 \n#>   1.552383631   7.570013682  -1.537770798   5.421753470  -2.596772311 \n#>           151           152           153           154           155 \n#>   0.863939781  -1.881992724  -0.277990392  -0.637526645  -1.960999934 \n#>           156           157           158           159           160 \n#>  -3.504116424  -2.687172400  -0.644998074  -0.293304720  -0.100368725 \n#>           161           162           163           164           165 \n#>   2.879778370   1.363369086  -4.714403867   4.578102239   8.477729264 \n#>           166           167           168           169           170 \n#>   0.236381772   9.256573204  -1.477256426  -0.898448441  -1.911878440 \n#>           171           172           173           174           175 \n#>  -3.867202657   5.576589380   2.172470211  -0.796284005  -0.134547360 \n#>           176           177           178           179           180 \n#>   0.425396317  -2.414857725  -2.698936748  -0.312169027   3.867244101 \n#>           181           182           183           184           185 \n#>  -3.534373610   2.304891834  -3.477780687  -2.535886469  -1.628170887 \n#>           186           187           188           189           190 \n#>  -4.113181595  -2.842379780  -1.567656515  -1.204941751  -2.021514306 \n#>           191           192           193           194           195 \n#>  -1.810085473   1.616819453  -0.890977012   2.702156702   0.641118069 \n#>           196           197           198           199           200 \n#>  -1.745649652   1.253733220  -0.024911494  -1.980235711  -5.047604384 \n#>           201           202           203           204           205 \n#>  -0.508655002   1.673412376  -1.087462987   1.733926748  -0.973905672 \n#>           206           207           208           209           210 \n#>  -4.143438781  -2.891872743  -0.270518963  -1.094934416  -2.233686078 \n#>           211           212           213           214           215 \n#>   3.579615099   4.139558776  -0.410412015   2.142213025  -4.294724712 \n#>           216           217           218           219           220 \n#>  -0.055168680   2.989785705  -0.667783831   1.038011468  -2.445486381 \n#>           221           222           223           224           225 \n#>   8.284421800   3.424779189  -1.530299369   4.574552260   0.905589845 \n#>           226           227           228           229           230 \n#>   1.813305428  -4.351317634  -2.445486381   5.875611261  -2.475372097 \n#>           231           232           233           234           235 \n#>  -0.512576451  -3.776431099  -3.757566791  -5.603626612  -4.185088846 \n#>           236           237           238           239           240 \n#>  -1.919721339   2.524163566   3.576065119   4.060180096   0.762146813 \n#>           241           242           243           244           245 \n#>  -1.106327294  -1.284320431  -0.512576451  -0.024911494  -4.052667223 \n#>           246           247           248           249           250 \n#>   0.130295885  -0.728298203  -1.234827468  -1.476884957  -4.483739257 \n#>           251           252           253           254           255 \n#>  -4.733639645  -4.048745774   0.538582163  -1.983785691   3.458586354 \n#>           256           257           258           259           260 \n#>  -3.757566791  -1.004162858   4.260587520   6.140083037   0.489832139 \n#>           261           262           263           264           265 \n#>  -2.127600192  -3.235723199   3.821672587  -1.026948615  -1.526377920 \n#>           266           267           268           269           270 \n#>   0.111431578  -3.447523501   0.221067444  -0.081504417  -1.265084654 \n#>           271           272           273           274           275 \n#>  26.529876477  -6.590720874   0.039524327  -0.156961647  -1.405349176 \n#>           276           277           278           279           280 \n#>   1.227026014  -1.927192768  -2.237236058   0.300446123  -1.208491731 \n#>           281           282           283           284           285 \n#>   0.724046729  -1.851735538  -1.276477532  -2.709958157  -3.402323457 \n#>           286           287           288           289           290 \n#>   6.113747301   1.627840862  -2.260021815   2.418449149   1.249811771 \n#>           291           292           293           294           295 \n#>   2.970921397   2.649113759  -4.801625446  -0.951491384  -1.484727855 \n#>           296           297           298           299           300 \n#>  -4.022410037  -1.098855865  -2.793258286  -3.171287377  -2.256471835 \n#>           301           302           303           304           305 \n#>  -0.251654655   2.577577978  -3.598809432   3.394522003  -1.722863895 \n#>           306           307           308           309           310 \n#>   4.426816309   6.166790244  -0.750712491   3.821672587  -2.445114911 \n#>           311           312           313           314           315 \n#>  -2.346871924   1.351976207   8.193650241   0.735439607  -0.425726342 \n#>           316           317           318           319           320 \n#>  -1.560185086  -1.102777315   1.526047895  -1.136955950  -4.075452980 \n#>           321           322           323           324           325 \n#>  -2.596400842  -0.009597166   0.992811424  -0.153411668  -0.349897642 \n#>           326           327           328           329           330 \n#>  -3.080887289   4.978917088   0.485910689  -3.477780687  -2.414857725 \n#>           331           332           333           334           335 \n#>  -4.351317634  -3.504116424   2.161448802  -0.595876580  -5.315997609 \n#>           336           337           338           339           340 \n#>  -1.968842833   0.951161359  -2.865165537  -4.423596355   3.034985749 \n#>           341           342           343           344           345 \n#>   4.756095376   1.374761964   0.780639651  -0.509026472   4.241723213 \n#>           346           347           348           349           350 \n#>   3.243236072  -0.501183573  -5.633512328   3.235393173   2.006241423 \n#>           351           352           353           354           355 \n#>   0.584153677  -1.964921383  -2.842379780  -1.147977359   0.085095841 \n#>           356           357           358           359           360 \n#>   6.151475916   4.684188126  -1.821478352   0.633275170  -0.750712491 \n#>           361           362           363           364           365 \n#>  -1.953899974   4.543923604   0.686318113  -1.681585300  -3.795666876 \n#>           366           367           368           369           370 \n#>  -2.490686425  -1.518535021  -3.496644995   4.018530032  -3.719838176 \n#>           371           372           373           374           375 \n#>   0.523639305   3.428329168  -1.254063245   6.771933965   2.762671075 \n#>           376           377           378           379           380 \n#>  -1.023027165  -0.591955131   2.577206509  -3.292687591   8.076542946 \n#>           381           382           383           384           385 \n#>   3.912444146  -1.095305886   0.641118069   0.777089672  -4.321060448 \n#>           386           387           388           389           390 \n#>  -2.105185905   8.507986450  -2.872636966  -3.156344519   5.875239792 \n#>           391           392           393           394           395 \n#>  -3.727681075   0.448182074  -2.331929066   0.777089672  -1.548792207 \n#>           396           397           398           399           400 \n#>   1.442747765   0.629725191  -1.673742401  -2.861244087   2.263613239 \n#>           401           402           403           404           405 \n#>  -1.473334977  -2.237236058  -0.399019136  -3.394852028   0.251324630 \n#>           406           407           408           409           410 \n#>  -1.757042530  -1.556635106  -1.476884957  -2.116207314  -3.564630796 \n#>           411           412           413           414 \n#>  -0.278361861  -1.526377920   3.670386657   3.927387004\n```\n:::\n:::\n\n\n4. Print a summary of `mdl_price_vs_conv`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Print a summary of mdl_price_vs_conv\nsummary(mdl_price_vs_conv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = price_twd_msq ~ n_convenience, data = taiwan_real_estate)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -10.7132  -2.2213  -0.5409   1.8105  26.5299 \n#> \n#> Coefficients:\n#>               Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)    8.22424    0.28500   28.86   <2e-16 ***\n#> n_convenience  0.79808    0.05653   14.12   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 3.384 on 412 degrees of freedom\n#> Multiple R-squared:  0.326,\tAdjusted R-squared:  0.3244 \n#> F-statistic: 199.3 on 1 and 412 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\nMarvelous model manipulation! Working with individual pieces of the model is often more useful than working with the whole model object at once.\n\n## Manually predicting house prices\n\n<!--\nLO: Can calculate simple linear regression predictions manually.\n-->\nYou can manually calculate the predictions from the model coefficients. When making predictions in real life, it is better to use `predict()`, but doing this manually is helpful to reassure yourself that predictions aren't magic &ndash; they are simply arithmetic.\n\nIn fact, for a simple linear regression, the predicted value is just the intercept plus the slope times the explanatory variable.\n\n<img src=\"https://render.githubusercontent.com/render/math?math={\\color{red}response = intercept %2B slope * explanatory}\">\n\n`mdl_price_vs_conv` and `explanatory_data` are available, and `dplyr` is loaded.\n\n**Steps**\n\n1. Get the coefficients of `mdl_price_vs_conv`, assigning to `coeffs`.\n2. Get the intercept, which is the first element of `coeffs`, assigning to `intercept`.\n3. Get the slope, which is the second element of `coeffs`, assigning to `slope`.\n4. Manually predict `price_twd_msq` using the intercept, slope, and `n_convenience`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get the coefficients of mdl_price_vs_conv\ncoeffs <- coefficients(mdl_price_vs_conv)\n\n# Get the intercept\nintercept <- coeffs[1]\n\n# Get the slope\nslope <- coeffs[2]\n\nexplanatory_data %>% \n  mutate(\n    # Manually calculate the predictions\n    price_twd_msq = intercept + slope * n_convenience\n  )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"n_convenience\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"price_twd_msq\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"8.224237\"},{\"1\":\"1\",\"2\":\"9.022317\"},{\"1\":\"2\",\"2\":\"9.820397\"},{\"1\":\"3\",\"2\":\"10.618477\"},{\"1\":\"4\",\"2\":\"11.416556\"},{\"1\":\"5\",\"2\":\"12.214636\"},{\"1\":\"6\",\"2\":\"13.012716\"},{\"1\":\"7\",\"2\":\"13.810795\"},{\"1\":\"8\",\"2\":\"14.608875\"},{\"1\":\"9\",\"2\":\"15.406955\"},{\"1\":\"10\",\"2\":\"16.205035\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Compare to the results from predict()\npredict(mdl_price_vs_conv, explanatory_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>         1         2         3         4         5         6         7         8 \n#>  8.224237  9.022317  9.820397 10.618477 11.416556 12.214636 13.012716 13.810795 \n#>         9        10        11 \n#> 14.608875 15.406955 16.205035\n```\n:::\n:::\n\n\nMagic manual prediction! For simple linear regression, the prediction just involves one addition and one multiplication.\n\n## Using broom\n\n<!--\nLO: Can extract coefficient-/observation-/model-level data from a linear regression model object using broom.\n-->\nMany programming tasks are easier if you keep all your data inside data frames. This is particularly true if you are a tidyverse fan, where `dplyr` and `ggplot2` require you to use data frames. The `broom` package contains functions that decompose models into three data frames: one for the coefficient-level elements (the coefficients themselves, as well as p-values for each coefficient), the observation-level elements (like fitted values and residuals), and the model-level elements (mostly performance metrics).\n\nThe functions in `broom` are generic. That is, they work with many model types, not just linear regression model objects. They also work with logistic regression model objects (as you'll see in Chapter 4), and many other types of model.\n\n**Steps**\n\n1. Tidy the model to print the coefficient-level elements of `mdl_price_vs_conv`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load package\nlibrary(broom)\n\n# Get the coefficient-level elements of the model\ntidy(mdl_price_vs_conv)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"(Intercept)\",\"2\":\"8.2242375\",\"3\":\"0.28499836\",\"4\":\"28.85714\",\"5\":\"5.807884e-101\"},{\"1\":\"n_convenience\",\"2\":\"0.7980797\",\"3\":\"0.05652919\",\"4\":\"14.11801\",\"5\":\"3.413483e-37\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n2. Augment the model to print the observation-level elements of `mdl_price_vs_conv`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get the observation-level elements of the model\naugment(mdl_price_vs_conv)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"price_twd_msq\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n_convenience\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".fitted\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".resid\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".hat\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".sigma\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".cooksd\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".std.resid\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"11.467474\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"-4.737561094\",\"5\":\"0.012148997\",\"6\":\"3.379833\",\"7\":\"1.220128e-02\",\"8\":\"-1.408617832\"},{\"1\":\"12.768533\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-2.638422376\",\"5\":\"0.009131801\",\"6\":\"3.385478\",\"7\":\"2.827167e-03\",\"8\":\"-0.783286168\"},{\"1\":\"14.311649\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"2.097012981\",\"5\":\"0.002644427\",\"6\":\"3.386418\",\"7\":\"5.104721e-04\",\"8\":\"0.620526296\"},{\"1\":\"16.580938\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"4.366301937\",\"5\":\"0.002644427\",\"6\":\"3.381131\",\"7\":\"2.213081e-03\",\"8\":\"1.292030710\"},{\"1\":\"13.040847\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.826211165\",\"5\":\"0.002644427\",\"6\":\"3.387756\",\"7\":\"7.924135e-05\",\"8\":\"0.244483825\"},{\"1\":\"9.712557\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-0.905919870\",\"5\":\"0.002749584\",\"6\":\"3.387706\",\"7\":\"9.907779e-05\",\"8\":\"-0.268084530\"},{\"1\":\"12.193646\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.617149478\",\"5\":\"0.004771833\",\"6\":\"3.387058\",\"7\":\"5.501466e-04\",\"8\":\"-0.479041255\"},{\"1\":\"14.130106\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"1.117390148\",\"5\":\"0.003429060\",\"6\":\"3.387552\",\"7\":\"1.882376e-04\",\"8\":\"0.330776623\"},{\"1\":\"5.688351\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-3.333966186\",\"5\":\"0.005087304\",\"6\":\"3.383988\",\"7\":\"2.494470e-03\",\"8\":\"-0.987763071\"},{\"1\":\"6.686838\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-3.931638479\",\"5\":\"0.002749584\",\"6\":\"3.382431\",\"7\":\"1.866139e-03\",\"8\":\"-1.163470952\"},{\"1\":\"12.526475\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"3.504157868\",\"5\":\"0.005087304\",\"6\":\"3.383567\",\"7\":\"2.755645e-03\",\"8\":\"1.038186216\"},{\"1\":\"17.579425\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"2.172470211\",\"5\":\"0.009131801\",\"6\":\"3.386291\",\"7\":\"1.916772e-03\",\"8\":\"0.644955820\"},{\"1\":\"11.891074\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-0.323561906\",\"5\":\"0.002644427\",\"6\":\"3.387964\",\"7\":\"1.215303e-05\",\"8\":\"-0.095745078\"},{\"1\":\"7.201210\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-4.215346032\",\"5\":\"0.002417935\",\"6\":\"3.381600\",\"7\":\"1.885177e-03\",\"8\":\"-1.247219798\"},{\"1\":\"10.378215\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-1.038341493\",\"5\":\"0.002417935\",\"6\":\"3.387614\",\"7\":\"1.143842e-04\",\"8\":\"-0.307220346\"},{\"1\":\"15.279879\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"5.459482085\",\"5\":\"0.003639374\",\"6\":\"3.377243\",\"7\":\"4.771277e-03\",\"8\":\"1.616319632\"},{\"1\":\"21.210287\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"8.197571691\",\"5\":\"0.003429060\",\"6\":\"3.363702\",\"7\":\"1.013135e-02\",\"8\":\"2.426694998\"},{\"1\":\"11.316188\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"2.293870425\",\"5\":\"0.005087304\",\"6\":\"3.386102\",\"7\":\"1.180847e-03\",\"8\":\"0.679611121\"},{\"1\":\"12.798790\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-1.810085473\",\"5\":\"0.006672747\",\"6\":\"3.386817\",\"7\":\"9.675118e-04\",\"8\":\"-0.536706665\"},{\"1\":\"14.432678\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"0.621882292\",\"5\":\"0.004771833\",\"6\":\"3.387862\",\"7\":\"8.135691e-05\",\"8\":\"0.184217525\"},{\"1\":\"8.865356\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.753121081\",\"5\":\"0.002749584\",\"6\":\"3.386895\",\"7\":\"3.710399e-04\",\"8\":\"-0.518792728\"},{\"1\":\"15.612708\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"1.801912549\",\"5\":\"0.004771833\",\"6\":\"3.386830\",\"7\":\"6.830390e-04\",\"8\":\"0.533772827\"},{\"1\":\"7.443268\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-1.579049393\",\"5\":\"0.005087304\",\"6\":\"3.387102\",\"7\":\"5.595609e-04\",\"8\":\"-0.467829183\"},{\"1\":\"14.493192\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"0.682396664\",\"5\":\"0.004771833\",\"6\":\"3.387834\",\"7\":\"9.796070e-05\",\"8\":\"0.202143438\"},{\"1\":\"11.739788\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"0.323231880\",\"5\":\"0.002417935\",\"6\":\"3.387964\",\"7\":\"1.108445e-05\",\"8\":\"0.095636562\"},{\"1\":\"8.169440\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-1.650956644\",\"5\":\"0.003639374\",\"6\":\"3.387019\",\"7\":\"4.363179e-04\",\"8\":\"-0.488777799\"},{\"1\":\"17.004539\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"4.789902542\",\"5\":\"0.002644427\",\"6\":\"3.379731\",\"7\":\"2.663319e-03\",\"8\":\"1.417378200\"},{\"1\":\"10.166415\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-2.048221512\",\"5\":\"0.002644427\",\"6\":\"3.386491\",\"7\":\"4.869940e-04\",\"8\":\"-0.606088432\"},{\"1\":\"14.220877\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"2.804321139\",\"5\":\"0.002417935\",\"6\":\"3.385170\",\"7\":\"8.343362e-04\",\"8\":\"0.829731371\"},{\"1\":\"17.276853\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"5.062217217\",\"5\":\"0.002644427\",\"6\":\"3.378763\",\"7\":\"2.974756e-03\",\"8\":\"1.497958730\"},{\"1\":\"6.686838\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.537399329\",\"5\":\"0.007093375\",\"6\":\"3.387147\",\"7\":\"7.425875e-04\",\"8\":\"-0.455949311\"},{\"1\":\"7.564297\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-6.246498949\",\"5\":\"0.004771833\",\"6\":\"3.373894\",\"7\":\"8.208266e-03\",\"8\":\"-1.850373597\"},{\"1\":\"10.347958\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"1.325640471\",\"5\":\"0.005087304\",\"6\":\"3.387367\",\"7\":\"3.943732e-04\",\"8\":\"0.392751045\"},{\"1\":\"14.916793\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"1.904076986\",\"5\":\"0.003429060\",\"6\":\"3.386695\",\"7\":\"5.465952e-04\",\"8\":\"0.563656443\"},{\"1\":\"16.671710\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"2.860914062\",\"5\":\"0.004771833\",\"6\":\"3.385047\",\"7\":\"1.721820e-03\",\"8\":\"0.847476304\"},{\"1\":\"8.260212\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"0.035974348\",\"5\":\"0.007093375\",\"6\":\"3.388001\",\"7\":\"4.065932e-07\",\"8\":\"0.010668978\"},{\"1\":\"6.928896\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-2.891501273\",\"5\":\"0.003639374\",\"6\":\"3.384987\",\"7\":\"1.338377e-03\",\"8\":\"-0.856050116\"},{\"1\":\"7.655068\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-1.367249091\",\"5\":\"0.005087304\",\"6\":\"3.387327\",\"7\":\"4.195186e-04\",\"8\":\"-0.405078542\"},{\"1\":\"14.432678\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"1.419962009\",\"5\":\"0.003429060\",\"6\":\"3.387275\",\"7\":\"3.039837e-04\",\"8\":\"0.420345785\"},{\"1\":\"13.978820\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"1.764183934\",\"5\":\"0.002644427\",\"6\":\"3.386881\",\"7\":\"3.612913e-04\",\"8\":\"0.522038983\"},{\"1\":\"4.810893\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-3.413344866\",\"5\":\"0.007093375\",\"6\":\"3.383786\",\"7\":\"3.660451e-03\",\"8\":\"-1.012301886\"},{\"1\":\"5.506808\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.717429586\",\"5\":\"0.007093375\",\"6\":\"3.385330\",\"7\":\"2.320015e-03\",\"8\":\"-0.805913028\"},{\"1\":\"10.499244\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-1.715392466\",\"5\":\"0.002644427\",\"6\":\"3.386942\",\"7\":\"3.415834e-04\",\"8\":\"-0.507601118\"},{\"1\":\"10.317700\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-2.695015299\",\"5\":\"0.003429060\",\"6\":\"3.385384\",\"7\":\"1.095013e-03\",\"8\":\"-0.797794810\"},{\"1\":\"16.308623\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"4.892066979\",\"5\":\"0.002417935\",\"6\":\"3.379376\",\"7\":\"2.539045e-03\",\"8\":\"1.447445297\"},{\"1\":\"11.588502\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-3.020372916\",\"5\":\"0.006672747\",\"6\":\"3.384702\",\"7\":\"2.693886e-03\",\"8\":\"-0.895567806\"},{\"1\":\"12.708018\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-2.698936748\",\"5\":\"0.009131801\",\"6\":\"3.385361\",\"7\":\"2.958341e-03\",\"8\":\"-0.801251476\"},{\"1\":\"18.608169\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"7.989692838\",\"5\":\"0.002749584\",\"6\":\"3.364938\",\"7\":\"7.706495e-03\",\"8\":\"2.364351551\"},{\"1\":\"4.054463\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-4.169774518\",\"5\":\"0.007093375\",\"6\":\"3.381708\",\"7\":\"5.462600e-03\",\"8\":\"-1.236637602\"},{\"1\":\"3.993949\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-5.028368607\",\"5\":\"0.005087304\",\"6\":\"3.378864\",\"7\":\"5.674271e-03\",\"8\":\"-1.489768204\"},{\"1\":\"13.373676\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"1.957119929\",\"5\":\"0.002417935\",\"6\":\"3.386623\",\"7\":\"4.063689e-04\",\"8\":\"0.579064851\"},{\"1\":\"6.263238\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-2.759079650\",\"5\":\"0.005087304\",\"6\":\"3.385253\",\"7\":\"1.708380e-03\",\"8\":\"-0.817439901\"},{\"1\":\"8.169440\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.449036361\",\"5\":\"0.002749584\",\"6\":\"3.385841\",\"7\":\"7.240811e-04\",\"8\":\"-0.724731605\"},{\"1\":\"11.770045\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-0.444590650\",\"5\":\"0.002644427\",\"6\":\"3.387931\",\"7\":\"2.294512e-05\",\"8\":\"-0.131558647\"},{\"1\":\"15.642965\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.428329168\",\"5\":\"0.002644427\",\"6\":\"3.383767\",\"7\":\"1.364378e-03\",\"8\":\"1.014475552\"},{\"1\":\"4.145234\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-4.079002960\",\"5\":\"0.007093375\",\"6\":\"3.381979\",\"7\":\"5.227359e-03\",\"8\":\"-1.209717316\"},{\"1\":\"12.677761\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-1.931114217\",\"5\":\"0.006672747\",\"6\":\"3.386653\",\"7\":\"1.101220e-03\",\"8\":\"-0.572592779\"},{\"1\":\"16.187595\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"2.376799085\",\"5\":\"0.004771833\",\"6\":\"3.385963\",\"7\":\"1.188401e-03\",\"8\":\"0.704069001\"},{\"1\":\"6.838124\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-2.184193115\",\"5\":\"0.005087304\",\"6\":\"3.386279\",\"7\":\"1.070626e-03\",\"8\":\"-0.647116731\"},{\"1\":\"12.829047\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.614410863\",\"5\":\"0.002644427\",\"6\":\"3.387866\",\"7\":\"4.382153e-05\",\"8\":\"0.181810080\"},{\"1\":\"6.444781\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-3.375616251\",\"5\":\"0.003639374\",\"6\":\"3.383893\",\"7\":\"1.824055e-03\",\"8\":\"-0.999375899\"},{\"1\":\"19.122542\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"6.109825851\",\"5\":\"0.003429060\",\"6\":\"3.374525\",\"7\":\"5.628005e-03\",\"8\":\"1.808667785\"},{\"1\":\"8.381241\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.237236058\",\"5\":\"0.002749584\",\"6\":\"3.386199\",\"7\":\"6.042552e-04\",\"8\":\"-0.662054556\"},{\"1\":\"16.641452\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"5.224896026\",\"5\":\"0.002417935\",\"6\":\"3.378161\",\"7\":\"2.896282e-03\",\"8\":\"1.545921430\"},{\"1\":\"7.655068\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-0.569169374\",\"5\":\"0.007093375\",\"6\":\"3.387885\",\"7\":\"1.017788e-04\",\"8\":\"-0.168799595\"},{\"1\":\"13.403933\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-1.204941751\",\"5\":\"0.006672747\",\"6\":\"3.387477\",\"7\":\"4.287363e-04\",\"8\":\"-0.357276095\"},{\"1\":\"15.340393\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"2.327677591\",\"5\":\"0.003429060\",\"6\":\"3.386049\",\"7\":\"8.168502e-04\",\"8\":\"0.689053269\"},{\"1\":\"17.186082\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"4.971445659\",\"5\":\"0.002644427\",\"6\":\"3.379092\",\"7\":\"2.869030e-03\",\"8\":\"1.471098553\"},{\"1\":\"10.953101\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-2.059614391\",\"5\":\"0.003429060\",\"6\":\"3.386473\",\"7\":\"6.395413e-04\",\"8\":\"-0.609699571\"},{\"1\":\"12.708018\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.493382118\",\"5\":\"0.002644427\",\"6\":\"3.387914\",\"7\":\"2.825768e-05\",\"8\":\"0.145996511\"},{\"1\":\"17.851740\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"2.444784886\",\"5\":\"0.009131801\",\"6\":\"3.385835\",\"7\":\"2.427416e-03\",\"8\":\"0.725799706\"},{\"1\":\"12.344932\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"1.726455319\",\"5\":\"0.002749584\",\"6\":\"3.386928\",\"7\":\"3.598383e-04\",\"8\":\"0.510901657\"},{\"1\":\"10.983359\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-3.625516638\",\"5\":\"0.006672747\",\"6\":\"3.383247\",\"7\":\"3.881485e-03\",\"8\":\"-1.074998376\"},{\"1\":\"6.051437\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.172800236\",\"5\":\"0.007093375\",\"6\":\"3.386294\",\"7\":\"1.483248e-03\",\"8\":\"-0.644391312\"},{\"1\":\"16.459909\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"0.254874610\",\"5\":\"0.012148997\",\"6\":\"3.387978\",\"7\":\"3.531416e-05\",\"8\":\"0.075781803\"},{\"1\":\"8.925870\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-0.096447275\",\"5\":\"0.005087304\",\"6\":\"3.387998\",\"7\":\"2.087545e-06\",\"8\":\"-0.028574692\"},{\"1\":\"11.134644\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"0.516167875\",\"5\":\"0.002749584\",\"6\":\"3.387906\",\"7\":\"3.216464e-05\",\"8\":\"0.152747088\"},{\"1\":\"7.745840\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.872636966\",\"5\":\"0.002749584\",\"6\":\"3.385029\",\"7\":\"9.962268e-04\",\"8\":\"-0.850085704\"},{\"1\":\"9.016641\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-0.803755434\",\"5\":\"0.003639374\",\"6\":\"3.387769\",\"7\":\"1.034141e-04\",\"8\":\"-0.237957679\"},{\"1\":\"8.018154\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-1.004162858\",\"5\":\"0.005087304\",\"6\":\"3.387638\",\"7\":\"2.262894e-04\",\"8\":\"-0.297506013\"},{\"1\":\"12.193646\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"0.777089672\",\"5\":\"0.002417935\",\"6\":\"3.387784\",\"7\":\"6.406604e-05\",\"8\":\"0.229922198\"},{\"1\":\"11.134644\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-1.878071274\",\"5\":\"0.003429060\",\"6\":\"3.386731\",\"7\":\"5.317665e-04\",\"8\":\"-0.555958074\"},{\"1\":\"14.553707\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"0.742911036\",\"5\":\"0.004771833\",\"6\":\"3.387803\",\"7\":\"1.161052e-04\",\"8\":\"0.220069350\"},{\"1\":\"5.355522\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-5.262954666\",\"5\":\"0.002749584\",\"6\":\"3.378014\",\"7\":\"3.343921e-03\",\"8\":\"-1.557440978\"},{\"1\":\"13.222390\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-0.588405151\",\"5\":\"0.004771833\",\"6\":\"3.387877\",\"7\":\"7.283347e-05\",\"8\":\"-0.174300735\"},{\"1\":\"15.370651\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-0.036304373\",\"5\":\"0.009131801\",\"6\":\"3.388001\",\"7\":\"5.352796e-07\",\"8\":\"-0.010777923\"},{\"1\":\"8.169440\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-0.852876927\",\"5\":\"0.005087304\",\"6\":\"3.387739\",\"7\":\"1.632408e-04\",\"8\":\"-0.252684126\"},{\"1\":\"5.537065\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.687172400\",\"5\":\"0.007093375\",\"6\":\"3.385389\",\"7\":\"2.268639e-03\",\"8\":\"-0.796939599\"},{\"1\":\"14.523449\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"6.299211866\",\"5\":\"0.007093375\",\"6\":\"3.373621\",\"7\":\"1.246656e-02\",\"8\":\"1.868168704\"},{\"1\":\"7.655068\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-0.569169374\",\"5\":\"0.007093375\",\"6\":\"3.387885\",\"7\":\"1.017788e-04\",\"8\":\"-0.168799595\"},{\"1\":\"13.736762\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"4.714445312\",\"5\":\"0.005087304\",\"6\":\"3.379971\",\"7\":\"4.987893e-03\",\"8\":\"1.396761311\"},{\"1\":\"13.071104\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"4.846866935\",\"5\":\"0.007093375\",\"6\":\"3.379495\",\"7\":\"7.380681e-03\",\"8\":\"1.437444130\"},{\"1\":\"6.596067\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-4.820489753\",\"5\":\"0.002417935\",\"6\":\"3.379627\",\"7\":\"2.465290e-03\",\"8\":\"-1.426267312\"},{\"1\":\"4.871407\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-3.352830494\",\"5\":\"0.007093375\",\"6\":\"3.383934\",\"7\":\"3.531811e-03\",\"8\":\"-0.994355029\"},{\"1\":\"12.405446\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.190810258\",\"5\":\"0.002644427\",\"6\":\"3.387989\",\"7\":\"4.226425e-06\",\"8\":\"0.056462589\"},{\"1\":\"15.673222\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.458586354\",\"5\":\"0.002644427\",\"6\":\"3.383692\",\"7\":\"1.388568e-03\",\"8\":\"1.023428945\"},{\"1\":\"18.003026\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"2.596070816\",\"5\":\"0.009131801\",\"6\":\"3.385558\",\"7\":\"2.737133e-03\",\"8\":\"0.770712976\"},{\"1\":\"10.468986\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-0.149490218\",\"5\":\"0.002749584\",\"6\":\"3.387994\",\"7\":\"2.697878e-06\",\"8\":\"-0.044237925\"},{\"1\":\"15.431165\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.216528866\",\"5\":\"0.002644427\",\"6\":\"3.384275\",\"7\":\"1.201005e-03\",\"8\":\"0.951801807\"},{\"1\":\"18.819970\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"3.413014841\",\"5\":\"0.009131801\",\"6\":\"3.383778\",\"7\":\"4.730850e-03\",\"8\":\"1.013244635\"},{\"1\":\"11.558245\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"0.141688764\",\"5\":\"0.002417935\",\"6\":\"3.387994\",\"7\":\"2.129886e-06\",\"8\":\"0.041922307\"},{\"1\":\"9.954614\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"0.932297051\",\"5\":\"0.005087304\",\"6\":\"3.387688\",\"7\":\"1.950583e-04\",\"8\":\"0.276214139\"},{\"1\":\"16.459909\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"3.447193476\",\"5\":\"0.003429060\",\"6\":\"3.383717\",\"7\":\"1.791547e-03\",\"8\":\"1.020459165\"},{\"1\":\"13.827534\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"0.814818287\",\"5\":\"0.003429060\",\"6\":\"3.387762\",\"7\":\"1.000964e-04\",\"8\":\"0.241207462\"},{\"1\":\"9.228442\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-3.784273998\",\"5\":\"0.003429060\",\"6\":\"3.382838\",\"7\":\"2.159046e-03\",\"8\":\"-1.120243790\"},{\"1\":\"21.482602\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"8.469886366\",\"5\":\"0.003429060\",\"6\":\"3.362054\",\"7\":\"1.081563e-02\",\"8\":\"2.507307244\"},{\"1\":\"14.251135\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-0.357740541\",\"5\":\"0.006672747\",\"6\":\"3.387955\",\"7\":\"3.779153e-05\",\"8\":\"-0.106073296\"},{\"1\":\"8.048411\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-0.973905672\",\"5\":\"0.005087304\",\"6\":\"3.387659\",\"7\":\"2.128579e-04\",\"8\":\"-0.288541636\"},{\"1\":\"10.317700\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"0.497303568\",\"5\":\"0.003639374\",\"6\":\"3.387913\",\"7\":\"3.958903e-05\",\"8\":\"0.147230361\"},{\"1\":\"8.593041\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.025435755\",\"5\":\"0.002749584\",\"6\":\"3.386524\",\"7\":\"4.952605e-04\",\"8\":\"-0.599377506\"},{\"1\":\"15.612708\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.398071982\",\"5\":\"0.002644427\",\"6\":\"3.383842\",\"7\":\"1.340402e-03\",\"8\":\"1.005522160\"},{\"1\":\"11.921331\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.889464153\",\"5\":\"0.004771833\",\"6\":\"3.386713\",\"7\":\"7.510267e-04\",\"8\":\"-0.559707864\"},{\"1\":\"6.989410\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-3.629066618\",\"5\":\"0.002749584\",\"6\":\"3.383256\",\"7\":\"1.589962e-03\",\"8\":\"-1.073932310\"},{\"1\":\"2.299546\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-10.713169610\",\"5\":\"0.003429060\",\"6\":\"3.346393\",\"7\":\"1.730345e-02\",\"8\":\"-3.171377585\"},{\"1\":\"16.127080\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"1.518204996\",\"5\":\"0.006672747\",\"6\":\"3.387168\",\"7\":\"6.806423e-04\",\"8\":\"0.450161472\"},{\"1\":\"14.039334\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"4.218937456\",\"5\":\"0.003639374\",\"6\":\"3.381581\",\"7\":\"2.849298e-03\",\"8\":\"1.249047314\"},{\"1\":\"3.691377\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-5.330940467\",\"5\":\"0.005087304\",\"6\":\"3.377729\",\"7\":\"6.377692e-03\",\"8\":\"-1.579411978\"},{\"1\":\"3.933434\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-4.290803262\",\"5\":\"0.007093375\",\"6\":\"3.381337\",\"7\":\"5.784309e-03\",\"8\":\"-1.272531316\"},{\"1\":\"9.258699\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.359777662\",\"5\":\"0.002749584\",\"6\":\"3.387336\",\"7\":\"2.232197e-04\",\"8\":\"-0.402392493\"},{\"1\":\"18.033283\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"5.818646869\",\"5\":\"0.002644427\",\"6\":\"3.375790\",\"7\":\"3.930192e-03\",\"8\":\"1.721793534\"},{\"1\":\"9.470499\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-2.744136792\",\"5\":\"0.002644427\",\"6\":\"3.385289\",\"7\":\"8.741406e-04\",\"8\":\"-0.812016452\"},{\"1\":\"14.523449\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"2.308813283\",\"5\":\"0.002644427\",\"6\":\"3.386082\",\"7\":\"6.187958e-04\",\"8\":\"0.683200042\"},{\"1\":\"9.833585\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-1.582970843\",\"5\":\"0.002417935\",\"6\":\"3.387100\",\"7\":\"2.658468e-04\",\"8\":\"-0.468363109\"},{\"1\":\"13.767020\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"5.542782214\",\"5\":\"0.007093375\",\"6\":\"3.376873\",\"7\":\"9.652279e-03\",\"8\":\"1.643832988\"},{\"1\":\"17.367625\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"3.556829342\",\"5\":\"0.004771833\",\"6\":\"3.383434\",\"7\":\"2.661363e-03\",\"8\":\"1.053624303\"},{\"1\":\"14.704992\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"1.692276683\",\"5\":\"0.003429060\",\"6\":\"3.386970\",\"7\":\"4.317571e-04\",\"8\":\"0.500958030\"},{\"1\":\"19.031770\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"7.615213726\",\"5\":\"0.002417935\",\"6\":\"3.367063\",\"7\":\"6.152474e-03\",\"8\":\"2.253159112\"},{\"1\":\"16.641452\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"4.426816309\",\"5\":\"0.002644427\",\"6\":\"3.380939\",\"7\":\"2.274850e-03\",\"8\":\"1.309937494\"},{\"1\":\"18.366112\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"5.353396199\",\"5\":\"0.003429060\",\"6\":\"3.377660\",\"7\":\"4.320714e-03\",\"8\":\"1.584744882\"},{\"1\":\"12.405446\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.405349176\",\"5\":\"0.004771833\",\"6\":\"3.387289\",\"7\":\"4.154766e-04\",\"8\":\"-0.416300560\"},{\"1\":\"11.346445\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-3.262430405\",\"5\":\"0.006672747\",\"6\":\"3.384152\",\"7\":\"3.142973e-03\",\"8\":\"-0.967340034\"},{\"1\":\"9.288956\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.329520476\",\"5\":\"0.002749584\",\"6\":\"3.387365\",\"7\":\"2.133963e-04\",\"8\":\"-0.393438629\"},{\"1\":\"11.346445\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-0.868191255\",\"5\":\"0.002644427\",\"6\":\"3.387730\",\"7\":\"8.749849e-05\",\"8\":\"-0.256906137\"},{\"1\":\"11.951589\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-2.657286683\",\"5\":\"0.006672747\",\"6\":\"3.385448\",\"7\":\"2.085139e-03\",\"8\":\"-0.787909463\"},{\"1\":\"12.768533\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-0.244183226\",\"5\":\"0.003429060\",\"6\":\"3.387980\",\"7\":\"8.989353e-06\",\"8\":\"-0.072284603\"},{\"1\":\"6.293495\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.930742748\",\"5\":\"0.007093375\",\"6\":\"3.386653\",\"7\":\"1.171178e-03\",\"8\":\"-0.572603883\"},{\"1\":\"14.160363\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"1.945727050\",\"5\":\"0.002644427\",\"6\":\"3.386638\",\"7\":\"4.394744e-04\",\"8\":\"0.575759336\"},{\"1\":\"14.341906\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"1.329190450\",\"5\":\"0.003429060\",\"6\":\"3.387365\",\"7\":\"2.663614e-04\",\"8\":\"0.393475036\"},{\"1\":\"13.161876\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"4.937638493\",\"5\":\"0.007093375\",\"6\":\"3.379173\",\"7\":\"7.659719e-03\",\"8\":\"1.464364416\"},{\"1\":\"12.859304\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.644668049\",\"5\":\"0.002644427\",\"6\":\"3.387852\",\"7\":\"4.824386e-05\",\"8\":\"0.190763472\"},{\"1\":\"15.552194\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.337557610\",\"5\":\"0.002644427\",\"6\":\"3.383989\",\"7\":\"1.293086e-03\",\"8\":\"0.987615376\"},{\"1\":\"8.744327\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.874149825\",\"5\":\"0.002749584\",\"6\":\"3.386737\",\"7\":\"4.240386e-04\",\"8\":\"-0.554608185\"},{\"1\":\"11.346445\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-0.868191255\",\"5\":\"0.002644427\",\"6\":\"3.387730\",\"7\":\"8.749849e-05\",\"8\":\"-0.256906137\"},{\"1\":\"12.133132\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-0.081504417\",\"5\":\"0.002644427\",\"6\":\"3.387999\",\"7\":\"7.711379e-07\",\"8\":\"-0.024117940\"},{\"1\":\"8.593041\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-0.429276322\",\"5\":\"0.005087304\",\"6\":\"3.387935\",\"7\":\"4.135517e-05\",\"8\":\"-0.127182843\"},{\"1\":\"13.767020\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"1.552383631\",\"5\":\"0.002644427\",\"6\":\"3.387134\",\"7\":\"2.797486e-04\",\"8\":\"0.459365237\"},{\"1\":\"15.794251\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"7.570013682\",\"5\":\"0.007093375\",\"6\":\"3.367214\",\"7\":\"1.800394e-02\",\"8\":\"2.245052706\"},{\"1\":\"13.071104\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-1.537770798\",\"5\":\"0.006672747\",\"6\":\"3.387147\",\"7\":\"6.982989e-04\",\"8\":\"-0.455962908\"},{\"1\":\"13.645991\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"5.421753470\",\"5\":\"0.007093375\",\"6\":\"3.377354\",\"7\":\"9.235359e-03\",\"8\":\"1.607939274\"},{\"1\":\"12.012103\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-2.596772311\",\"5\":\"0.006672747\",\"6\":\"3.385563\",\"7\":\"1.991250e-03\",\"8\":\"-0.769966406\"},{\"1\":\"14.674735\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"0.863939781\",\"5\":\"0.004771833\",\"6\":\"3.387732\",\"7\":\"1.570164e-04\",\"8\":\"0.255921176\"},{\"1\":\"13.524962\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-1.881992724\",\"5\":\"0.009131801\",\"6\":\"3.386718\",\"7\":\"1.438463e-03\",\"8\":\"-0.558719818\"},{\"1\":\"8.744327\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-0.277990392\",\"5\":\"0.005087304\",\"6\":\"3.387974\",\"7\":\"1.734265e-05\",\"8\":\"-0.082360956\"},{\"1\":\"12.375189\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-0.637526645\",\"5\":\"0.003429060\",\"6\":\"3.387855\",\"7\":\"6.127643e-05\",\"8\":\"-0.188724512\"},{\"1\":\"6.263238\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.960999934\",\"5\":\"0.007093375\",\"6\":\"3.386611\",\"7\":\"1.208174e-03\",\"8\":\"-0.581577312\"},{\"1\":\"4.720121\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-3.504116424\",\"5\":\"0.007093375\",\"6\":\"3.383558\",\"7\":\"3.857725e-03\",\"8\":\"-1.039222172\"},{\"1\":\"5.537065\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.687172400\",\"5\":\"0.007093375\",\"6\":\"3.385389\",\"7\":\"2.268639e-03\",\"8\":\"-0.796939599\"},{\"1\":\"10.771558\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-0.644998074\",\"5\":\"0.002417935\",\"6\":\"3.387852\",\"7\":\"4.413696e-05\",\"8\":\"-0.190839462\"},{\"1\":\"11.921331\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-0.293304720\",\"5\":\"0.002644427\",\"6\":\"3.387971\",\"7\":\"9.986375e-06\",\"8\":\"-0.086791686\"},{\"1\":\"11.316188\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-0.100368725\",\"5\":\"0.002417935\",\"6\":\"3.387998\",\"7\":\"1.068765e-06\",\"8\":\"-0.029696699\"},{\"1\":\"17.488654\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"2.879778370\",\"5\":\"0.006672747\",\"6\":\"3.385002\",\"7\":\"2.448929e-03\",\"8\":\"0.853880255\"},{\"1\":\"11.981846\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"1.363369086\",\"5\":\"0.002749584\",\"6\":\"3.387332\",\"7\":\"2.244004e-04\",\"8\":\"0.403455286\"},{\"1\":\"3.509834\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-4.714403867\",\"5\":\"0.007093375\",\"6\":\"3.379954\",\"7\":\"6.982771e-03\",\"8\":\"-1.398159317\"},{\"1\":\"16.792738\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"4.578102239\",\"5\":\"0.002644427\",\"6\":\"3.380447\",\"7\":\"2.432992e-03\",\"8\":\"1.354704455\"},{\"1\":\"16.701967\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"8.477729264\",\"5\":\"0.007093375\",\"6\":\"3.361909\",\"7\":\"2.258049e-02\",\"8\":\"2.514255565\"},{\"1\":\"9.258699\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"0.236381772\",\"5\":\"0.005087304\",\"6\":\"3.387982\",\"7\":\"1.253961e-05\",\"8\":\"0.070033459\"},{\"1\":\"22.269289\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"9.256573204\",\"5\":\"0.003429060\",\"6\":\"3.356987\",\"7\":\"1.291806e-02\",\"8\":\"2.740187063\"},{\"1\":\"13.131619\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-1.477256426\",\"5\":\"0.006672747\",\"6\":\"3.387213\",\"7\":\"6.444213e-04\",\"8\":\"-0.438019851\"},{\"1\":\"11.316188\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-0.898448441\",\"5\":\"0.002644427\",\"6\":\"3.387711\",\"7\":\"9.370356e-05\",\"8\":\"-0.265859529\"},{\"1\":\"7.110439\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-1.911878440\",\"5\":\"0.005087304\",\"6\":\"3.386682\",\"7\":\"8.203071e-04\",\"8\":\"-0.566437334\"},{\"1\":\"4.357035\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-3.867202657\",\"5\":\"0.007093375\",\"6\":\"3.382589\",\"7\":\"4.698596e-03\",\"8\":\"-1.146903316\"},{\"1\":\"17.791225\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"5.576589380\",\"5\":\"0.002644427\",\"6\":\"3.376787\",\"7\":\"3.609999e-03\",\"8\":\"1.650166397\"},{\"1\":\"17.579425\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"2.172470211\",\"5\":\"0.009131801\",\"6\":\"3.386291\",\"7\":\"1.916772e-03\",\"8\":\"0.644955820\"},{\"1\":\"10.620272\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-0.796284005\",\"5\":\"0.002417935\",\"6\":\"3.387773\",\"7\":\"6.727003e-05\",\"8\":\"-0.235601340\"},{\"1\":\"13.676248\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-0.134547360\",\"5\":\"0.004771833\",\"6\":\"3.387995\",\"7\":\"3.808276e-06\",\"8\":\"-0.039856388\"},{\"1\":\"11.043873\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"0.425396317\",\"5\":\"0.002749584\",\"6\":\"3.387937\",\"7\":\"2.184662e-05\",\"8\":\"0.125885496\"},{\"1\":\"5.809380\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.414857725\",\"5\":\"0.007093375\",\"6\":\"3.385892\",\"7\":\"1.832134e-03\",\"8\":\"-0.716178741\"},{\"1\":\"12.708018\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-2.698936748\",\"5\":\"0.009131801\",\"6\":\"3.385361\",\"7\":\"2.958341e-03\",\"8\":\"-0.801251476\"},{\"1\":\"11.104387\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-0.312169027\",\"5\":\"0.002417935\",\"6\":\"3.387967\",\"7\":\"1.033868e-05\",\"8\":\"-0.092363329\"},{\"1\":\"12.889561\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"3.867244101\",\"5\":\"0.005087304\",\"6\":\"3.382600\",\"7\":\"3.356287e-03\",\"8\":\"1.145758744\"},{\"1\":\"4.689864\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-3.534373610\",\"5\":\"0.007093375\",\"6\":\"3.383481\",\"7\":\"3.924634e-03\",\"8\":\"-1.048195601\"},{\"1\":\"16.913767\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"2.304891834\",\"5\":\"0.006672747\",\"6\":\"3.386081\",\"7\":\"1.568770e-03\",\"8\":\"0.683421213\"},{\"1\":\"7.140696\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-3.477780687\",\"5\":\"0.002749584\",\"6\":\"3.383644\",\"7\":\"1.460162e-03\",\"8\":\"-1.029162989\"},{\"1\":\"5.688351\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.535886469\",\"5\":\"0.007093375\",\"6\":\"3.385675\",\"7\":\"2.020384e-03\",\"8\":\"-0.752072456\"},{\"1\":\"6.596067\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.628170887\",\"5\":\"0.007093375\",\"6\":\"3.387043\",\"7\":\"8.328642e-04\",\"8\":\"-0.482869597\"},{\"1\":\"6.505295\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-4.113181595\",\"5\":\"0.002749584\",\"6\":\"3.381905\",\"7\":\"2.042455e-03\",\"8\":\"-1.217194137\"},{\"1\":\"7.776097\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.842379780\",\"5\":\"0.002749584\",\"6\":\"3.385091\",\"7\":\"9.753511e-04\",\"8\":\"-0.841131840\"},{\"1\":\"6.656581\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.567656515\",\"5\":\"0.007093375\",\"6\":\"3.387113\",\"7\":\"7.721045e-04\",\"8\":\"-0.464922740\"},{\"1\":\"13.403933\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-1.204941751\",\"5\":\"0.006672747\",\"6\":\"3.387477\",\"7\":\"4.287363e-04\",\"8\":\"-0.357276095\"},{\"1\":\"6.202723\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.021514306\",\"5\":\"0.007093375\",\"6\":\"3.386524\",\"7\":\"1.283890e-03\",\"8\":\"-0.599524169\"},{\"1\":\"12.798790\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-1.810085473\",\"5\":\"0.006672747\",\"6\":\"3.386817\",\"7\":\"9.675118e-04\",\"8\":\"-0.536706665\"},{\"1\":\"11.437216\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"1.616819453\",\"5\":\"0.003639374\",\"6\":\"3.387059\",\"7\":\"4.184608e-04\",\"8\":\"0.478671233\"},{\"1\":\"12.919818\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-0.890977012\",\"5\":\"0.004771833\",\"6\":\"3.387715\",\"7\":\"1.669979e-04\",\"8\":\"-0.263930300\"},{\"1\":\"14.916793\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"2.702156702\",\"5\":\"0.002644427\",\"6\":\"3.385372\",\"7\":\"8.475998e-04\",\"8\":\"0.799594140\"},{\"1\":\"8.865356\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"0.641118069\",\"5\":\"0.007093375\",\"6\":\"3.387853\",\"7\":\"1.291369e-04\",\"8\":\"0.190137550\"},{\"1\":\"10.468986\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-1.745649652\",\"5\":\"0.002644427\",\"6\":\"3.386904\",\"7\":\"3.537398e-04\",\"8\":\"-0.516554510\"},{\"1\":\"11.074130\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"1.253733220\",\"5\":\"0.003639374\",\"6\":\"3.387435\",\"7\":\"2.516182e-04\",\"8\":\"0.371176896\"},{\"1\":\"14.583964\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-0.024911494\",\"5\":\"0.006672747\",\"6\":\"3.388001\",\"7\":\"1.832558e-07\",\"8\":\"-0.007386483\"},{\"1\":\"11.830560\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.980235711\",\"5\":\"0.004771833\",\"6\":\"3.386587\",\"7\":\"8.249201e-04\",\"8\":\"-0.586596733\"},{\"1\":\"9.561271\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-5.047604384\",\"5\":\"0.006672747\",\"6\":\"3.378779\",\"7\":\"7.523653e-03\",\"8\":\"-1.496660216\"},{\"1\":\"7.715582\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-0.508655002\",\"5\":\"0.007093375\",\"6\":\"3.387908\",\"7\":\"8.128696e-05\",\"8\":\"-0.150852738\"},{\"1\":\"13.888048\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"1.673412376\",\"5\":\"0.002644427\",\"6\":\"3.386993\",\"7\":\"3.250691e-04\",\"8\":\"0.495178806\"},{\"1\":\"9.531014\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.087462987\",\"5\":\"0.002749584\",\"6\":\"3.387576\",\"7\":\"1.427663e-04\",\"8\":\"-0.321807715\"},{\"1\":\"13.948563\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"1.733926748\",\"5\":\"0.002644427\",\"6\":\"3.386919\",\"7\":\"3.490047e-04\",\"8\":\"0.513085590\"},{\"1\":\"8.048411\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-0.973905672\",\"5\":\"0.005087304\",\"6\":\"3.387659\",\"7\":\"2.128579e-04\",\"8\":\"-0.288541636\"},{\"1\":\"6.475038\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-4.143438781\",\"5\":\"0.002749584\",\"6\":\"3.381814\",\"7\":\"2.072615e-03\",\"8\":\"-1.226148002\"},{\"1\":\"13.313162\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"-2.891872743\",\"5\":\"0.012148997\",\"6\":\"3.384960\",\"7\":\"4.546258e-03\",\"8\":\"-0.859839785\"},{\"1\":\"10.347958\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-0.270518963\",\"5\":\"0.002749584\",\"6\":\"3.387975\",\"7\":\"8.834707e-06\",\"8\":\"-0.080053382\"},{\"1\":\"7.927383\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-1.094934416\",\"5\":\"0.005087304\",\"6\":\"3.387569\",\"7\":\"2.690495e-04\",\"8\":\"-0.324399145\"},{\"1\":\"12.375189\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-2.233686078\",\"5\":\"0.006672747\",\"6\":\"3.386198\",\"7\":\"1.473338e-03\",\"8\":\"-0.662308064\"},{\"1\":\"15.794251\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.579615099\",\"5\":\"0.002644427\",\"6\":\"3.383385\",\"7\":\"1.487450e-03\",\"8\":\"1.059242513\"},{\"1\":\"13.161876\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"4.139558776\",\"5\":\"0.005087304\",\"6\":\"3.381811\",\"7\":\"3.845599e-03\",\"8\":\"1.226438140\"},{\"1\":\"9.409985\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-0.410412015\",\"5\":\"0.003639374\",\"6\":\"3.387941\",\"7\":\"2.696323e-05\",\"8\":\"-0.121505481\"},{\"1\":\"17.549168\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"2.142213025\",\"5\":\"0.009131801\",\"6\":\"3.386338\",\"7\":\"1.863752e-03\",\"8\":\"0.635973166\"},{\"1\":\"6.323752\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-4.294724712\",\"5\":\"0.002749584\",\"6\":\"3.381354\",\"7\":\"2.226729e-03\",\"8\":\"-1.270917323\"},{\"1\":\"14.553707\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-0.055168680\",\"5\":\"0.006672747\",\"6\":\"3.388001\",\"7\":\"8.987591e-07\",\"8\":\"-0.016358011\"},{\"1\":\"12.012103\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"2.989785705\",\"5\":\"0.005087304\",\"6\":\"3.384774\",\"7\":\"2.006024e-03\",\"8\":\"0.885791800\"},{\"1\":\"12.344932\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-0.667783831\",\"5\":\"0.003429060\",\"6\":\"3.387841\",\"7\":\"6.723085e-05\",\"8\":\"-0.197681429\"},{\"1\":\"13.252648\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"1.038011468\",\"5\":\"0.002644427\",\"6\":\"3.387614\",\"7\":\"1.250760e-04\",\"8\":\"0.307157570\"},{\"1\":\"12.163389\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-2.445486381\",\"5\":\"0.006672747\",\"6\":\"3.385839\",\"7\":\"1.765992e-03\",\"8\":\"-0.725108764\"},{\"1\":\"23.691377\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"8.284421800\",\"5\":\"0.009131801\",\"6\":\"3.363039\",\"7\":\"2.787323e-02\",\"8\":\"2.459451931\"},{\"1\":\"11.649017\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"3.424779189\",\"5\":\"0.007093375\",\"6\":\"3.383757\",\"7\":\"3.685016e-03\",\"8\":\"1.015692984\"},{\"1\":\"14.674735\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"-1.530299369\",\"5\":\"0.012148997\",\"6\":\"3.387150\",\"7\":\"1.273059e-03\",\"8\":\"-0.455003521\"},{\"1\":\"12.798790\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"4.574552260\",\"5\":\"0.007093375\",\"6\":\"3.380425\",\"7\":\"6.574632e-03\",\"8\":\"1.356683272\"},{\"1\":\"13.918306\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"0.905589845\",\"5\":\"0.003429060\",\"6\":\"3.387706\",\"7\":\"1.236403e-04\",\"8\":\"0.268078210\"},{\"1\":\"14.826021\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"1.813305428\",\"5\":\"0.003429060\",\"6\":\"3.386817\",\"7\":\"4.957226e-04\",\"8\":\"0.536785694\"},{\"1\":\"3.872920\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-4.351317634\",\"5\":\"0.007093375\",\"6\":\"3.381147\",\"7\":\"5.948614e-03\",\"8\":\"-1.290478174\"},{\"1\":\"12.163389\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-2.445486381\",\"5\":\"0.006672747\",\"6\":\"3.385839\",\"7\":\"1.765992e-03\",\"8\":\"-0.725108764\"},{\"1\":\"14.099849\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"5.875611261\",\"5\":\"0.007093375\",\"6\":\"3.375494\",\"7\":\"1.084627e-02\",\"8\":\"1.742540703\"},{\"1\":\"5.748865\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.475372097\",\"5\":\"0.007093375\",\"6\":\"3.385785\",\"7\":\"1.925109e-03\",\"8\":\"-0.734125599\"},{\"1\":\"10.105900\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-0.512576451\",\"5\":\"0.002749584\",\"6\":\"3.387907\",\"7\":\"3.171860e-05\",\"8\":\"-0.151684295\"},{\"1\":\"4.447806\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-3.776431099\",\"5\":\"0.007093375\",\"6\":\"3.382840\",\"7\":\"4.480612e-03\",\"8\":\"-1.119983030\"},{\"1\":\"5.264750\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-3.757566791\",\"5\":\"0.005087304\",\"6\":\"3.382902\",\"7\":\"3.168614e-03\",\"8\":\"-1.113264354\"},{\"1\":\"9.803328\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-5.603626612\",\"5\":\"0.009131801\",\"6\":\"3.376603\",\"7\":\"1.275267e-02\",\"8\":\"-1.663586261\"},{\"1\":\"7.231467\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-4.185088846\",\"5\":\"0.002417935\",\"6\":\"3.381691\",\"7\":\"1.858211e-03\",\"8\":\"-1.238267422\"},{\"1\":\"11.891074\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.919721339\",\"5\":\"0.004771833\",\"6\":\"3.386672\",\"7\":\"7.752727e-04\",\"8\":\"-0.568670820\"},{\"1\":\"18.729198\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"2.524163566\",\"5\":\"0.012148997\",\"6\":\"3.385685\",\"7\":\"3.463623e-03\",\"8\":\"0.750508909\"},{\"1\":\"11.800303\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"3.576065119\",\"5\":\"0.007093375\",\"6\":\"3.383374\",\"7\":\"4.017770e-03\",\"8\":\"1.060560127\"},{\"1\":\"12.284418\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"4.060180096\",\"5\":\"0.007093375\",\"6\":\"3.382035\",\"7\":\"5.179226e-03\",\"8\":\"1.204134985\"},{\"1\":\"8.986384\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"0.762146813\",\"5\":\"0.007093375\",\"6\":\"3.387792\",\"7\":\"1.824952e-04\",\"8\":\"0.226031265\"},{\"1\":\"8.714070\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-1.106327294\",\"5\":\"0.003639374\",\"6\":\"3.387561\",\"7\":\"1.959291e-04\",\"8\":\"-0.327536293\"},{\"1\":\"12.526475\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.284320431\",\"5\":\"0.004771833\",\"6\":\"3.387406\",\"7\":\"3.469963e-04\",\"8\":\"-0.380448734\"},{\"1\":\"10.105900\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-0.512576451\",\"5\":\"0.002749584\",\"6\":\"3.387907\",\"7\":\"3.171860e-05\",\"8\":\"-0.151684295\"},{\"1\":\"14.583964\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-0.024911494\",\"5\":\"0.006672747\",\"6\":\"3.388001\",\"7\":\"1.832558e-07\",\"8\":\"-0.007386483\"},{\"1\":\"6.565809\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-4.052667223\",\"5\":\"0.002749584\",\"6\":\"3.382083\",\"7\":\"1.982799e-03\",\"8\":\"-1.199286409\"},{\"1\":\"12.344932\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.130295885\",\"5\":\"0.002644427\",\"6\":\"3.387996\",\"7\":\"1.970748e-06\",\"8\":\"0.038555805\"},{\"1\":\"12.284418\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-0.728298203\",\"5\":\"0.003429060\",\"6\":\"3.387811\",\"7\":\"7.996782e-05\",\"8\":\"-0.215595261\"},{\"1\":\"6.989410\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.234827468\",\"5\":\"0.007093375\",\"6\":\"3.387450\",\"7\":\"4.790566e-04\",\"8\":\"-0.366215025\"},{\"1\":\"6.747352\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.476884957\",\"5\":\"0.007093375\",\"6\":\"3.387213\",\"7\":\"6.852792e-04\",\"8\":\"-0.438002454\"},{\"1\":\"4.538578\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-4.483739257\",\"5\":\"0.005087304\",\"6\":\"3.380738\",\"7\":\"4.511662e-03\",\"8\":\"-1.328409411\"},{\"1\":\"9.077156\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-4.733639645\",\"5\":\"0.004771833\",\"6\":\"3.379908\",\"7\":\"4.713771e-03\",\"8\":\"-1.402225773\"},{\"1\":\"4.175492\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-4.048745774\",\"5\":\"0.007093375\",\"6\":\"3.382068\",\"7\":\"5.150095e-03\",\"8\":\"-1.200743887\"},{\"1\":\"15.945537\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"0.538582163\",\"5\":\"0.009131801\",\"6\":\"3.387897\",\"7\":\"1.178058e-04\",\"8\":\"0.159892503\"},{\"1\":\"7.836611\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-1.983785691\",\"5\":\"0.003639374\",\"6\":\"3.386583\",\"7\":\"6.299720e-04\",\"8\":\"-0.587314274\"},{\"1\":\"15.673222\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.458586354\",\"5\":\"0.002644427\",\"6\":\"3.383692\",\"7\":\"1.388568e-03\",\"8\":\"1.023428945\"},{\"1\":\"5.264750\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-3.757566791\",\"5\":\"0.005087304\",\"6\":\"3.382902\",\"7\":\"3.168614e-03\",\"8\":\"-1.113264354\"},{\"1\":\"8.018154\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-1.004162858\",\"5\":\"0.005087304\",\"6\":\"3.387638\",\"7\":\"2.262894e-04\",\"8\":\"-0.297506013\"},{\"1\":\"13.282905\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"4.260587520\",\"5\":\"0.005087304\",\"6\":\"3.381444\",\"7\":\"4.073755e-03\",\"8\":\"1.262295650\"},{\"1\":\"19.152799\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"6.140083037\",\"5\":\"0.003429060\",\"6\":\"3.374390\",\"7\":\"5.683885e-03\",\"8\":\"1.817624701\"},{\"1\":\"8.714070\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"0.489832139\",\"5\":\"0.007093375\",\"6\":\"3.387915\",\"7\":\"7.538220e-05\",\"8\":\"0.145270407\"},{\"1\":\"9.288956\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-2.127600192\",\"5\":\"0.002417935\",\"6\":\"3.386372\",\"7\":\"4.802481e-04\",\"8\":\"-0.629505872\"},{\"1\":\"7.382753\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-3.235723199\",\"5\":\"0.002749584\",\"6\":\"3.384230\",\"7\":\"1.263978e-03\",\"8\":\"-0.957532075\"},{\"1\":\"16.036309\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.821672587\",\"5\":\"0.002644427\",\"6\":\"3.382739\",\"7\":\"1.695418e-03\",\"8\":\"1.130869651\"},{\"1\":\"9.591528\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.026948615\",\"5\":\"0.002749584\",\"6\":\"3.387622\",\"7\":\"1.273193e-04\",\"8\":\"-0.303899987\"},{\"1\":\"12.284418\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.526377920\",\"5\":\"0.004771833\",\"6\":\"3.387161\",\"7\":\"4.901198e-04\",\"8\":\"-0.452152386\"},{\"1\":\"11.527988\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"0.111431578\",\"5\":\"0.002417935\",\"6\":\"3.387997\",\"7\":\"1.317353e-06\",\"8\":\"0.032969932\"},{\"1\":\"7.170953\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-3.447523501\",\"5\":\"0.002749584\",\"6\":\"3.383719\",\"7\":\"1.434866e-03\",\"8\":\"-1.020209125\"},{\"1\":\"12.435703\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.221067444\",\"5\":\"0.002644427\",\"6\":\"3.387984\",\"7\":\"5.673086e-06\",\"8\":\"0.065415981\"},{\"1\":\"12.133132\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-0.081504417\",\"5\":\"0.002644427\",\"6\":\"3.387999\",\"7\":\"7.711379e-07\",\"8\":\"-0.024117940\"},{\"1\":\"6.959153\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.265084654\",\"5\":\"0.007093375\",\"6\":\"3.387423\",\"7\":\"5.028210e-04\",\"8\":\"-0.375188453\"},{\"1\":\"35.552194\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"26.529876477\",\"5\":\"0.005087304\",\"6\":\"3.123669\",\"7\":\"1.579524e-01\",\"8\":\"7.860077398\"},{\"1\":\"8.018154\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-6.590720874\",\"5\":\"0.006672747\",\"6\":\"3.372263\",\"7\":\"1.282697e-02\",\"8\":\"-1.954208170\"},{\"1\":\"12.254160\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.039524327\",\"5\":\"0.002644427\",\"6\":\"3.388001\",\"7\":\"1.813421e-07\",\"8\":\"0.011695628\"},{\"1\":\"8.865356\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-0.156961647\",\"5\":\"0.005087304\",\"6\":\"3.387993\",\"7\":\"5.528954e-06\",\"8\":\"-0.046503447\"},{\"1\":\"12.405446\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.405349176\",\"5\":\"0.004771833\",\"6\":\"3.387289\",\"7\":\"4.154766e-04\",\"8\":\"-0.416300560\"},{\"1\":\"15.037821\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"1.227026014\",\"5\":\"0.004771833\",\"6\":\"3.387458\",\"7\":\"3.167274e-04\",\"8\":\"0.363476654\"},{\"1\":\"10.287443\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-1.927192768\",\"5\":\"0.002644427\",\"6\":\"3.386664\",\"7\":\"4.311417e-04\",\"8\":\"-0.570274863\"},{\"1\":\"8.381241\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.237236058\",\"5\":\"0.002749584\",\"6\":\"3.386199\",\"7\":\"6.042552e-04\",\"8\":\"-0.662054556\"},{\"1\":\"13.313162\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"0.300446123\",\"5\":\"0.003429060\",\"6\":\"3.387969\",\"7\":\"1.360912e-05\",\"8\":\"0.088939888\"},{\"1\":\"9.409985\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.208491731\",\"5\":\"0.002749584\",\"6\":\"3.387476\",\"7\":\"1.763129e-04\",\"8\":\"-0.357623172\"},{\"1\":\"13.736762\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"0.724046729\",\"5\":\"0.003429060\",\"6\":\"3.387813\",\"7\":\"7.903692e-05\",\"8\":\"0.214336714\"},{\"1\":\"13.555219\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-1.851735538\",\"5\":\"0.009131801\",\"6\":\"3.386759\",\"7\":\"1.392582e-03\",\"8\":\"-0.549737164\"},{\"1\":\"7.745840\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-1.276477532\",\"5\":\"0.005087304\",\"6\":\"3.387414\",\"7\":\"3.656640e-04\",\"8\":\"-0.378185410\"},{\"1\":\"7.110439\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-2.709958157\",\"5\":\"0.003639374\",\"6\":\"3.385354\",\"7\":\"1.175593e-03\",\"8\":\"-0.802302948\"},{\"1\":\"10.408472\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-3.402323457\",\"5\":\"0.004771833\",\"6\":\"3.383823\",\"7\":\"2.435170e-03\",\"8\":\"-1.007855688\"},{\"1\":\"16.732224\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"6.113747301\",\"5\":\"0.002749584\",\"6\":\"3.374516\",\"7\":\"4.512443e-03\",\"8\":\"1.809211969\"},{\"1\":\"17.034796\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"1.627840862\",\"5\":\"0.009131801\",\"6\":\"3.387041\",\"7\":\"1.076185e-03\",\"8\":\"0.483268048\"},{\"1\":\"9.954614\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-2.260021815\",\"5\":\"0.002644427\",\"6\":\"3.386162\",\"7\":\"5.929185e-04\",\"8\":\"-0.668762177\"},{\"1\":\"15.431165\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"2.418449149\",\"5\":\"0.003429060\",\"6\":\"3.385894\",\"7\":\"8.818013e-04\",\"8\":\"0.715924017\"},{\"1\":\"13.464448\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"1.249811771\",\"5\":\"0.002644427\",\"6\":\"3.387439\",\"7\":\"1.813255e-04\",\"8\":\"0.369831315\"},{\"1\":\"11.195159\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"2.970921397\",\"5\":\"0.007093375\",\"6\":\"3.384808\",\"7\":\"2.773043e-03\",\"8\":\"0.881091555\"},{\"1\":\"16.459909\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"2.649113759\",\"5\":\"0.004771833\",\"6\":\"3.385469\",\"7\":\"1.476316e-03\",\"8\":\"0.784735609\"},{\"1\":\"7.413011\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-4.801625446\",\"5\":\"0.002644427\",\"6\":\"3.379691\",\"7\":\"2.676371e-03\",\"8\":\"-1.420847120\"},{\"1\":\"12.859304\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-0.951491384\",\"5\":\"0.004771833\",\"6\":\"3.387675\",\"7\":\"1.904530e-04\",\"8\":\"-0.281856213\"},{\"1\":\"11.527988\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-1.484727855\",\"5\":\"0.003429060\",\"6\":\"3.387207\",\"7\":\"3.323460e-04\",\"8\":\"-0.439518164\"},{\"1\":\"6.596067\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-4.022410037\",\"5\":\"0.002749584\",\"6\":\"3.382171\",\"7\":\"1.953302e-03\",\"8\":\"-1.190332545\"},{\"1\":\"10.317700\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-1.098855865\",\"5\":\"0.002417935\",\"6\":\"3.387567\",\"7\":\"1.281053e-04\",\"8\":\"-0.325125098\"},{\"1\":\"8.623298\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-2.793258286\",\"5\":\"0.002417935\",\"6\":\"3.385192\",\"7\":\"8.277664e-04\",\"8\":\"-0.826458138\"},{\"1\":\"5.052950\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-3.171287377\",\"5\":\"0.007093375\",\"6\":\"3.384363\",\"7\":\"3.159697e-03\",\"8\":\"-0.940514457\"},{\"1\":\"13.948563\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"-2.256471835\",\"5\":\"0.012148997\",\"6\":\"3.386150\",\"7\":\"2.767933e-03\",\"8\":\"-0.670916195\"},{\"1\":\"11.164902\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-0.251654655\",\"5\":\"0.002417935\",\"6\":\"3.387979\",\"7\":\"6.718859e-06\",\"8\":\"-0.074458577\"},{\"1\":\"10.801815\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"2.577577978\",\"5\":\"0.007093375\",\"6\":\"3.385598\",\"7\":\"2.087362e-03\",\"8\":\"0.764436982\"},{\"1\":\"7.019667\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-3.598809432\",\"5\":\"0.002749584\",\"6\":\"3.383335\",\"7\":\"1.563560e-03\",\"8\":\"-1.064978446\"},{\"1\":\"11.618759\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"3.394522003\",\"5\":\"0.007093375\",\"6\":\"3.383832\",\"7\":\"3.620191e-03\",\"8\":\"1.006719555\"},{\"1\":\"8.895613\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.722863895\",\"5\":\"0.002749584\",\"6\":\"3.386933\",\"7\":\"3.583428e-04\",\"8\":\"-0.509838864\"},{\"1\":\"16.641452\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"4.426816309\",\"5\":\"0.002644427\",\"6\":\"3.380939\",\"7\":\"2.274850e-03\",\"8\":\"1.309937494\"},{\"1\":\"15.189107\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"6.166790244\",\"5\":\"0.005087304\",\"6\":\"3.374249\",\"7\":\"8.534425e-03\",\"8\":\"1.827051425\"},{\"1\":\"7.473525\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-0.750712491\",\"5\":\"0.007093375\",\"6\":\"3.387798\",\"7\":\"1.770604e-04\",\"8\":\"-0.222640167\"},{\"1\":\"16.036309\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.821672587\",\"5\":\"0.002644427\",\"6\":\"3.382739\",\"7\":\"1.695418e-03\",\"8\":\"1.130869651\"},{\"1\":\"5.779123\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.445114911\",\"5\":\"0.007093375\",\"6\":\"3.385839\",\"7\":\"1.878334e-03\",\"8\":\"-0.725152170\"},{\"1\":\"7.473525\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-2.346871924\",\"5\":\"0.003639374\",\"6\":\"3.386016\",\"7\":\"8.816790e-04\",\"8\":\"-0.694808611\"},{\"1\":\"12.768533\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"1.351976207\",\"5\":\"0.002417935\",\"6\":\"3.387344\",\"7\":\"1.939205e-04\",\"8\":\"0.400017336\"},{\"1\":\"23.600605\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"8.193650241\",\"5\":\"0.009131801\",\"6\":\"3.363585\",\"7\":\"2.726577e-02\",\"8\":\"2.432503969\"},{\"1\":\"12.950076\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.735439607\",\"5\":\"0.002644427\",\"6\":\"3.387807\",\"7\":\"6.278614e-05\",\"8\":\"0.217623648\"},{\"1\":\"12.586989\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-0.425726342\",\"5\":\"0.003429060\",\"6\":\"3.387936\",\"7\":\"2.732485e-05\",\"8\":\"-0.126026100\"},{\"1\":\"8.260212\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-1.560185086\",\"5\":\"0.003639374\",\"6\":\"3.387124\",\"7\":\"3.896583e-04\",\"8\":\"-0.461904214\"},{\"1\":\"12.708018\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.102777315\",\"5\":\"0.004771833\",\"6\":\"3.387563\",\"7\":\"2.558313e-04\",\"8\":\"-0.326670995\"},{\"1\":\"11.346445\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"1.526047895\",\"5\":\"0.003639374\",\"6\":\"3.387162\",\"7\":\"3.727932e-04\",\"8\":\"0.451797649\"},{\"1\":\"15.068079\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"-1.136955950\",\"5\":\"0.012148997\",\"6\":\"3.387532\",\"7\":\"7.027211e-04\",\"8\":\"-0.338050823\"},{\"1\":\"8.139183\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-4.075452980\",\"5\":\"0.002644427\",\"6\":\"3.382017\",\"7\":\"1.928064e-03\",\"8\":\"-1.205965708\"},{\"1\":\"5.627837\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.596400842\",\"5\":\"0.007093375\",\"6\":\"3.385563\",\"7\":\"2.117960e-03\",\"8\":\"-0.770019313\"},{\"1\":\"11.406959\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-0.009597166\",\"5\":\"0.002417935\",\"6\":\"3.388002\",\"7\":\"9.771735e-09\",\"8\":\"-0.002839571\"},{\"1\":\"10.015129\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"0.992811424\",\"5\":\"0.005087304\",\"6\":\"3.387646\",\"7\":\"2.212022e-04\",\"8\":\"0.294142894\"},{\"1\":\"12.859304\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-0.153411668\",\"5\":\"0.003429060\",\"6\":\"3.387993\",\"7\":\"3.548245e-06\",\"8\":\"-0.045413854\"},{\"1\":\"9.470499\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-0.349897642\",\"5\":\"0.003639374\",\"6\":\"3.387958\",\"7\":\"1.959809e-05\",\"8\":\"-0.103589758\"},{\"1\":\"11.527988\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-3.080887289\",\"5\":\"0.006672747\",\"6\":\"3.384569\",\"7\":\"2.802914e-03\",\"8\":\"-0.913510863\"},{\"1\":\"18.789713\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"4.978917088\",\"5\":\"0.004771833\",\"6\":\"3.379046\",\"7\":\"5.214923e-03\",\"8\":\"1.474883258\"},{\"1\":\"11.104387\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"0.485910689\",\"5\":\"0.002749584\",\"6\":\"3.387917\",\"7\":\"2.850425e-05\",\"8\":\"0.143793224\"},{\"1\":\"7.140696\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-3.477780687\",\"5\":\"0.002749584\",\"6\":\"3.383644\",\"7\":\"1.460162e-03\",\"8\":\"-1.029162989\"},{\"1\":\"5.809380\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-2.414857725\",\"5\":\"0.007093375\",\"6\":\"3.385892\",\"7\":\"1.832134e-03\",\"8\":\"-0.716178741\"},{\"1\":\"3.872920\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-4.351317634\",\"5\":\"0.007093375\",\"6\":\"3.381147\",\"7\":\"5.948614e-03\",\"8\":\"-1.290478174\"},{\"1\":\"4.720121\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-3.504116424\",\"5\":\"0.007093375\",\"6\":\"3.383558\",\"7\":\"3.857725e-03\",\"8\":\"-1.039222172\"},{\"1\":\"11.981846\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"2.161448802\",\"5\":\"0.003639374\",\"6\":\"3.386318\",\"7\":\"7.478623e-04\",\"8\":\"0.639912739\"},{\"1\":\"11.618759\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-0.595876580\",\"5\":\"0.002644427\",\"6\":\"3.387874\",\"7\":\"4.121757e-05\",\"8\":\"-0.176325607\"},{\"1\":\"6.898638\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-5.315997609\",\"5\":\"0.002644427\",\"6\":\"3.377812\",\"7\":\"3.280495e-03\",\"8\":\"-1.573054787\"},{\"1\":\"11.043873\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-1.968842833\",\"5\":\"0.003429060\",\"6\":\"3.386605\",\"7\":\"5.844117e-04\",\"8\":\"-0.582828822\"},{\"1\":\"10.771558\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"0.951161359\",\"5\":\"0.003639374\",\"6\":\"3.387676\",\"7\":\"1.448239e-04\",\"8\":\"0.281598282\"},{\"1\":\"9.349470\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-2.865165537\",\"5\":\"0.002644427\",\"6\":\"3.385045\",\"7\":\"9.529480e-04\",\"8\":\"-0.847830021\"},{\"1\":\"10.983359\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-4.423596355\",\"5\":\"0.009131801\",\"6\":\"3.380903\",\"7\":\"7.947194e-03\",\"8\":\"-1.313262755\"},{\"1\":\"15.249622\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.034985749\",\"5\":\"0.002644427\",\"6\":\"3.384684\",\"7\":\"1.069259e-03\",\"8\":\"0.898081454\"},{\"1\":\"12.980333\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"4.756095376\",\"5\":\"0.007093375\",\"6\":\"3.379811\",\"7\":\"7.106821e-03\",\"8\":\"1.410523844\"},{\"1\":\"11.195159\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"1.374761964\",\"5\":\"0.003639374\",\"6\":\"3.387320\",\"7\":\"3.025427e-04\",\"8\":\"0.407008342\"},{\"1\":\"16.187595\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"0.780639651\",\"5\":\"0.009131801\",\"6\":\"3.387781\",\"7\":\"2.474936e-04\",\"8\":\"0.231753735\"},{\"1\":\"14.099849\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-0.509026472\",\"5\":\"0.006672747\",\"6\":\"3.387908\",\"7\":\"7.651364e-05\",\"8\":\"-0.150930939\"},{\"1\":\"12.465961\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"4.241723213\",\"5\":\"0.007093375\",\"6\":\"3.381489\",\"7\":\"5.652739e-03\",\"8\":\"1.257975557\"},{\"1\":\"11.467474\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"3.243236072\",\"5\":\"0.007093375\",\"6\":\"3.384196\",\"7\":\"3.304695e-03\",\"8\":\"0.961852412\"},{\"1\":\"9.319213\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-0.501183573\",\"5\":\"0.003639374\",\"6\":\"3.387911\",\"7\":\"4.020919e-05\",\"8\":\"-0.148379065\"},{\"1\":\"3.388805\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-5.633512328\",\"5\":\"0.005087304\",\"6\":\"3.376528\",\"7\":\"7.122204e-03\",\"8\":\"-1.669055752\"},{\"1\":\"16.248109\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"3.235393173\",\"5\":\"0.003429060\",\"6\":\"3.384228\",\"7\":\"1.578160e-03\",\"8\":\"0.957760753\"},{\"1\":\"14.220877\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"2.006241423\",\"5\":\"0.002644427\",\"6\":\"3.386552\",\"7\":\"4.672358e-04\",\"8\":\"0.593666120\"},{\"1\":\"12.798790\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.584153677\",\"5\":\"0.002644427\",\"6\":\"3.387879\",\"7\":\"3.961175e-05\",\"8\":\"0.172856688\"},{\"1\":\"8.653555\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.964921383\",\"5\":\"0.002749584\",\"6\":\"3.386611\",\"7\":\"4.661086e-04\",\"8\":\"-0.581469778\"},{\"1\":\"7.776097\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.842379780\",\"5\":\"0.002749584\",\"6\":\"3.385091\",\"7\":\"9.753511e-04\",\"8\":\"-0.841131840\"},{\"1\":\"9.470499\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-1.147977359\",\"5\":\"0.002749584\",\"6\":\"3.387527\",\"7\":\"1.590975e-04\",\"8\":\"-0.339715444\"},{\"1\":\"9.107413\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"0.085095841\",\"5\":\"0.005087304\",\"6\":\"3.387999\",\"7\":\"1.625072e-06\",\"8\":\"0.025211572\"},{\"1\":\"18.366112\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"6.151475916\",\"5\":\"0.002644427\",\"6\":\"3.374351\",\"7\":\"4.392668e-03\",\"8\":\"1.820280848\"},{\"1\":\"13.706505\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"4.684188126\",\"5\":\"0.005087304\",\"6\":\"3.380073\",\"7\":\"4.924074e-03\",\"8\":\"1.387796933\"},{\"1\":\"13.585477\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-1.821478352\",\"5\":\"0.009131801\",\"6\":\"3.386799\",\"7\":\"1.347444e-03\",\"8\":\"-0.540754510\"},{\"1\":\"13.645991\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"0.633275170\",\"5\":\"0.003429060\",\"6\":\"3.387857\",\"7\":\"6.046189e-05\",\"8\":\"0.187465965\"},{\"1\":\"7.473525\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-0.750712491\",\"5\":\"0.007093375\",\"6\":\"3.387798\",\"7\":\"1.770604e-04\",\"8\":\"-0.222640167\"},{\"1\":\"14.251135\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"-1.953899974\",\"5\":\"0.012148997\",\"6\":\"3.386614\",\"7\":\"2.075393e-03\",\"8\":\"-0.580952581\"},{\"1\":\"19.152799\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"4.543923604\",\"5\":\"0.006672747\",\"6\":\"3.380530\",\"7\":\"6.097056e-03\",\"8\":\"1.347314323\"},{\"1\":\"12.102874\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"0.686318113\",\"5\":\"0.002417935\",\"6\":\"3.387832\",\"7\":\"4.997313e-05\",\"8\":\"0.203065070\"},{\"1\":\"14.523449\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"-1.681585300\",\"5\":\"0.012148997\",\"6\":\"3.386974\",\"7\":\"1.537211e-03\",\"8\":\"-0.499985328\"},{\"1\":\"10.015129\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-3.795666876\",\"5\":\"0.004771833\",\"6\":\"3.382800\",\"7\":\"3.030779e-03\",\"8\":\"-1.124374122\"},{\"1\":\"8.925870\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-2.490686425\",\"5\":\"0.002417935\",\"6\":\"3.385768\",\"7\":\"6.581482e-04\",\"8\":\"-0.736934381\"},{\"1\":\"7.503782\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-1.518535021\",\"5\":\"0.005087304\",\"6\":\"3.387169\",\"7\":\"5.174942e-04\",\"8\":\"-0.449900429\"},{\"1\":\"6.323752\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-3.496644995\",\"5\":\"0.003639374\",\"6\":\"3.383593\",\"7\":\"1.957198e-03\",\"8\":\"-1.035207344\"},{\"1\":\"13.040847\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"4.018530032\",\"5\":\"0.005087304\",\"6\":\"3.382168\",\"7\":\"3.624018e-03\",\"8\":\"1.190580631\"},{\"1\":\"6.898638\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-3.719838176\",\"5\":\"0.002749584\",\"6\":\"3.383016\",\"7\":\"1.670494e-03\",\"8\":\"-1.100793903\"},{\"1\":\"12.738275\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.523639305\",\"5\":\"0.002644427\",\"6\":\"3.387903\",\"7\":\"3.182982e-05\",\"8\":\"0.154949903\"},{\"1\":\"15.642965\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.428329168\",\"5\":\"0.002644427\",\"6\":\"3.383767\",\"7\":\"1.364378e-03\",\"8\":\"1.014475552\"},{\"1\":\"12.556732\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.254063245\",\"5\":\"0.004771833\",\"6\":\"3.387434\",\"7\":\"3.308392e-04\",\"8\":\"-0.371485777\"},{\"1\":\"15.794251\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"6.771933965\",\"5\":\"0.005087304\",\"6\":\"3.371410\",\"7\":\"1.029156e-02\",\"8\":\"2.006338972\"},{\"1\":\"14.977307\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"2.762671075\",\"5\":\"0.002644427\",\"6\":\"3.385253\",\"7\":\"8.859886e-04\",\"8\":\"0.817500924\"},{\"1\":\"7.201210\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.023027165\",\"5\":\"0.007093375\",\"6\":\"3.387623\",\"7\":\"3.288127e-04\",\"8\":\"-0.303401024\"},{\"1\":\"9.228442\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-0.591955131\",\"5\":\"0.003639374\",\"6\":\"3.387875\",\"7\":\"5.609308e-05\",\"8\":\"-0.175252649\"},{\"1\":\"17.186082\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"2.577206509\",\"5\":\"0.006672747\",\"6\":\"3.385600\",\"7\":\"1.961357e-03\",\"8\":\"0.764164970\"},{\"1\":\"11.316188\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"-3.292687591\",\"5\":\"0.006672747\",\"6\":\"3.384080\",\"7\":\"3.201542e-03\",\"8\":\"-0.976311562\"},{\"1\":\"21.089259\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"8.076542946\",\"5\":\"0.003429060\",\"6\":\"3.364416\",\"7\":\"9.834399e-03\",\"8\":\"2.390867334\"},{\"1\":\"16.127080\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.912444146\",\"5\":\"0.002644427\",\"6\":\"3.382486\",\"7\":\"1.776913e-03\",\"8\":\"1.157729827\"},{\"1\":\"14.311649\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-1.095305886\",\"5\":\"0.009131801\",\"6\":\"3.387567\",\"7\":\"4.872296e-04\",\"8\":\"-0.325170813\"},{\"1\":\"8.865356\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"0.641118069\",\"5\":\"0.007093375\",\"6\":\"3.387853\",\"7\":\"1.291369e-04\",\"8\":\"0.190137550\"},{\"1\":\"12.193646\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"0.777089672\",\"5\":\"0.002417935\",\"6\":\"3.387784\",\"7\":\"6.406604e-05\",\"8\":\"0.229922198\"},{\"1\":\"3.903177\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-4.321060448\",\"5\":\"0.007093375\",\"6\":\"3.381243\",\"7\":\"5.866174e-03\",\"8\":\"-1.281504745\"},{\"1\":\"14.099849\",\"2\":\"10\",\"3\":\"16.205035\",\"4\":\"-2.105185905\",\"5\":\"0.012148997\",\"6\":\"3.386390\",\"7\":\"2.409221e-03\",\"8\":\"-0.625934388\"},{\"1\":\"16.732224\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"8.507986450\",\"5\":\"0.007093375\",\"6\":\"3.361722\",\"7\":\"2.274196e-02\",\"8\":\"2.523228994\"},{\"1\":\"7.745840\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.872636966\",\"5\":\"0.002749584\",\"6\":\"3.385029\",\"7\":\"9.962268e-04\",\"8\":\"-0.850085704\"},{\"1\":\"8.260212\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-3.156344519\",\"5\":\"0.002417935\",\"6\":\"3.384414\",\"7\":\"1.056950e-03\",\"8\":\"-0.933886647\"},{\"1\":\"20.484115\",\"2\":\"8\",\"3\":\"14.608875\",\"4\":\"5.875239792\",\"5\":\"0.006672747\",\"6\":\"3.375501\",\"7\":\"1.019317e-02\",\"8\":\"1.742061578\"},{\"1\":\"11.679274\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-3.727681075\",\"5\":\"0.009131801\",\"6\":\"3.382962\",\"7\":\"5.643394e-03\",\"8\":\"-1.106661713\"},{\"1\":\"9.470499\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"0.448182074\",\"5\":\"0.005087304\",\"6\":\"3.387929\",\"7\":\"4.507802e-05\",\"8\":\"0.132784101\"},{\"1\":\"10.680787\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-2.331929066\",\"5\":\"0.003429060\",\"6\":\"3.386042\",\"7\":\"8.198369e-04\",\"8\":\"-0.690311816\"},{\"1\":\"12.193646\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"0.777089672\",\"5\":\"0.002417935\",\"6\":\"3.387784\",\"7\":\"6.406604e-05\",\"8\":\"0.229922198\"},{\"1\":\"7.473525\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-1.548792207\",\"5\":\"0.005087304\",\"6\":\"3.387136\",\"7\":\"5.383221e-04\",\"8\":\"-0.458864806\"},{\"1\":\"12.859304\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"1.442747765\",\"5\":\"0.002417935\",\"6\":\"3.387252\",\"7\":\"2.208342e-04\",\"8\":\"0.426874464\"},{\"1\":\"9.652042\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"0.629725191\",\"5\":\"0.005087304\",\"6\":\"3.387859\",\"7\":\"8.899345e-05\",\"8\":\"0.186570365\"},{\"1\":\"9.742814\",\"2\":\"4\",\"3\":\"11.416556\",\"4\":\"-1.673742401\",\"5\":\"0.002417935\",\"6\":\"3.386993\",\"7\":\"2.972096e-04\",\"8\":\"-0.495220236\"},{\"1\":\"6.959153\",\"2\":\"2\",\"3\":\"9.820397\",\"4\":\"-2.861244087\",\"5\":\"0.003639374\",\"6\":\"3.385050\",\"7\":\"1.310514e-03\",\"8\":\"-0.847092255\"},{\"1\":\"11.285930\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"2.263613239\",\"5\":\"0.005087304\",\"6\":\"3.386152\",\"7\":\"1.149901e-03\",\"8\":\"0.670646743\"},{\"1\":\"10.741301\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"-1.473334977\",\"5\":\"0.002644427\",\"6\":\"3.387220\",\"7\":\"2.519839e-04\",\"8\":\"-0.435973981\"},{\"1\":\"8.381241\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.237236058\",\"5\":\"0.002749584\",\"6\":\"3.386199\",\"7\":\"6.042552e-04\",\"8\":\"-0.662054556\"},{\"1\":\"8.623298\",\"2\":\"1\",\"3\":\"9.022317\",\"4\":\"-0.399019136\",\"5\":\"0.005087304\",\"6\":\"3.387944\",\"7\":\"3.573085e-05\",\"8\":\"-0.118218466\"},{\"1\":\"12.012103\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-3.394852028\",\"5\":\"0.009131801\",\"6\":\"3.383823\",\"7\":\"4.680632e-03\",\"8\":\"-1.007852518\"},{\"1\":\"12.465961\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"0.251324630\",\"5\":\"0.002644427\",\"6\":\"3.387979\",\"7\":\"7.332294e-06\",\"8\":\"0.074369374\"},{\"1\":\"11.255673\",\"2\":\"6\",\"3\":\"13.012716\",\"4\":\"-1.757042530\",\"5\":\"0.003429060\",\"6\":\"3.386889\",\"7\":\"4.654375e-04\",\"8\":\"-0.520130409\"},{\"1\":\"12.254160\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.556635106\",\"5\":\"0.004771833\",\"6\":\"3.387127\",\"7\":\"5.097435e-04\",\"8\":\"-0.461115342\"},{\"1\":\"6.747352\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-1.476884957\",\"5\":\"0.007093375\",\"6\":\"3.387213\",\"7\":\"6.852792e-04\",\"8\":\"-0.438002454\"},{\"1\":\"8.502269\",\"2\":\"3\",\"3\":\"10.618477\",\"4\":\"-2.116207314\",\"5\":\"0.002749584\",\"6\":\"3.386389\",\"7\":\"5.406462e-04\",\"8\":\"-0.626239099\"},{\"1\":\"4.659607\",\"2\":\"0\",\"3\":\"8.224237\",\"4\":\"-3.564630796\",\"5\":\"0.007093375\",\"6\":\"3.383403\",\"7\":\"3.992118e-03\",\"8\":\"-1.057169029\"},{\"1\":\"15.128593\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"-0.278361861\",\"5\":\"0.009131801\",\"6\":\"3.387974\",\"7\":\"3.146895e-05\",\"8\":\"-0.082639155\"},{\"1\":\"12.284418\",\"2\":\"7\",\"3\":\"13.810795\",\"4\":\"-1.526377920\",\"5\":\"0.004771833\",\"6\":\"3.387161\",\"7\":\"4.901198e-04\",\"8\":\"-0.452152386\"},{\"1\":\"15.885023\",\"2\":\"5\",\"3\":\"12.214636\",\"4\":\"3.670386657\",\"5\":\"0.002644427\",\"6\":\"3.383148\",\"7\":\"1.563844e-03\",\"8\":\"1.086102690\"},{\"1\":\"19.334342\",\"2\":\"9\",\"3\":\"15.406955\",\"4\":\"3.927387004\",\"5\":\"0.009131801\",\"6\":\"3.382408\",\"7\":\"6.264267e-03\",\"8\":\"1.165949753\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n3. Glance at the model to print the model-level elements of `mdl_price_vs_conv`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get the model-level elements of the model\nglance(mdl_price_vs_conv)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"r.squared\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"adj.r.squared\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sigma\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"df\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"logLik\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"AIC\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"BIC\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"deviance\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"df.residual\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"nobs\"],\"name\":[12],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.3260466\",\"2\":\"0.3244108\",\"3\":\"3.383888\",\"4\":\"199.3182\",\"5\":\"3.413483e-37\",\"6\":\"1\",\"7\":\"-1091.115\",\"8\":\"2188.229\",\"9\":\"2200.307\",\"10\":\"4717.686\",\"11\":\"412\",\"12\":\"414\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nTerrific model tidying! `broom` lets you convert model objects to data frames for easier programming.\n\n## Regression to the mean\n\nTheory. Coming soon ...\n\n\n**1. Regression to the mean**\n\nLet's take a short break from thinking about regression modeling, to a related concept called \"regression to the mean\". Regression to the mean is a property of the data, not a type of model, but linear regression can be used to quantify its effect.\n\n**2. The concept**\n\nYou already saw that each response value in your dataset is equal to the sum of a fitted value, that is, the prediction by the model, and a residual, which is how much the model missed by.Loosely speaking, these two values are the parts of the response that you've explained why it has that value, and the parts you couldn't explain with your model.There are two possibilities for why you have a residual. Firstly, it could just be because your model isn't great. Particularly in the case of simple linear regression where you only have one explanatory variable, there is often room for improvement. However, it usually isn't possible or desirable to have a perfect model because the world contains a lot of randomness, and your model shouldn't capture that.In particular, extreme responses are often due to randomness or luck. That means that extremes don't persist over time, because eventually the luck runs out.This is the concept of regression to the mean. Eventually, extreme cases will look more like average cases.\n\n**3. Pearson's father son dataset**\n\nHere's a classic dataset on the heights of fathers and their sons, collected by Karl Pearson, the statistician who the Pearson correlation coefficient is named after.The dataset consists of over a thousand pairs of heights, and was collected as part of nineteenth century scientific work on biological inheritance. It lets us answer the question, \"do tall fathers have tall sons?\", and \"do short fathers have short sons?\".\n\n**4. Scatter plot**\n\nHere's a scatter plot of the sons' heights versus the fathers' heights. I've added a line where the sons and fathers heights are equal, using geom_abline. The color and size arguments are used to help it stand out.I also used coord_fixed, so that one centimeter on the x-axis appears the same as one centimeter on the y-axis.If sons always had the same height as their fathers, all the points would lie on this green line.\n\n**5. Adding a regression line**\n\nLet's add a linear regression line to the plot. You can see that the regression line isn't as steep as the first line.On the left of the plot, the blue line is above the green line, suggesting that for very short fathers, their sons are taller than them on average.On the far right of the plot, the blue line is below the green line, suggesting that for very tall fathers, their sons are shorter than them on average.\n\n**6. Running a regression**\n\nRunning a model quantifies the predictions of how much taller or shorter the sons will be.Here, the sons' heights are the response variable, and the fathers' heights are the explanatory variable.\n\n**7. Making predictions**\n\nNow we can make predictions. Consider the case of a really tall father, at one hundred and ninety centimeters. At least, that was really tall in the late nineteenth century. The predicted height of the son is one hundred and eighty three centimeters. Tall, but but quite as tall as his dad.Similarly, the prediction for a one hundred and fifty centimeter father is one hundred and sixty three centimeters. Short, but not quite as short as his dad.In both cases, the extreme value became less extreme in the next generation.\n\n**8. Let's practice!**\n\nTime to apply regression to the mean to sports and finance.\n\n## Home run!\n\n<!--\nLO: Understands regression to the mean, and its application to sports.\n-->\nRegression to the mean is an important concept in many areas, including sports. \n\nHere you can see a dataset of baseball batting data in 2017 and 2018. Each point represents a player, and more home runs is better. A naive prediction might be that the performance in 2018 would be that it is the same as the performance in 2017. That is, a linear regression would lie on the \"y equals x\" line.\n\n> *Question*\n> ---\n> Explore the plot and make predictions. What does regression to the mean say about the number of home runs in 2018 for a player who was very successful in 2017?<br>\n> ⬜ Someone who hit 40 home runs in 2017 is predicted to hit the same number of home runs the next year because regression to the mean states that performance is consistent over time.<br>\n> ⬜ If someone hit 40 home runs in 2017, we can't predict the number of home runs the next year because regression to the mean states that extremely high values are unpredictable.<br>\n> ✅ Someone who hit 40 home runs in 2017 is predicted to hit 10 fewer home runs the next year because regression to the mean states that, on average, extremely high values are not sustained.<br>\n> ⬜ Someone who hit 40 home runs in 2017 is predicted to hit 10 more home runs the next year because regression to the mean states that, on average, extremely high values are amplified over time.<br>\n\nMagnificent regression to the mean! Due to regression to the mean, it's common that one player or team that does really well one year, doesn't do as well the next. Likewise players or teams that perform very badly one year do better the next year.\n\n## Plotting consecutive portfolio returns\n\n<!--\nLO: Understands regression to the mean, and its application to investing.\n-->\nRegression to the mean is also an important concept in investing. Here you'll look at the annual returns from investing in companies in the Standard and Poor 500 index (S&amp;P 500), in 2018 and 2019.\n\nThe `sp500_yearly_returns` dataset contains three columns:\n\n|variable    |meaning                                               |\n|:-----------|:-----------------------------------------------------|\n|symbol      |Stock ticker symbol uniquely identifying the company. |\n|return_2018 |A measure of investment performance in 2018.          |\n|return_2019 |A measure of investment performance in 2019.          |\n\nA positive number for the return means the investment increased in value; negative means it lost value.\n\nJust as with baseball home runs, a naive prediction might be that the investment performance stays the same from year to year, lying on the \"y equals x\" line.\n\n`sp500_yearly_returns` is available and `ggplot2` is loaded.\n\n**Steps**\n\n1. Using `sp500_yearly_returns`, draw a scatter plot of `return_2019` vs. `return_2018`. \n2. Add an \"A-B line\", colored `\"green\"`, with size `1`.\n3. Add a smooth trend line made with the linear regression method, and no standard error ribbon.\n4. Fix the coordinates so distances along the x and y axes appear the same.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load data\nsp500_yearly_returns <- readRDS(\"data/sp500_yearly_returns.rds\")\n\n# Using sp500_yearly_returns, plot return_2019 vs. return_2018\nggplot(sp500_yearly_returns, aes(return_2018, return_2019)) +\n  # Make it a scatter plot\n  geom_point() +\n  # Add a line at y = x, colored green, size 1\n  geom_abline(color = \"green\", size = 1) +\n  # Add a linear regression trend line, no std. error ribbon\n  geom_smooth(method = \"lm\", se = FALSE) +\n  # Fix the coordinate ratio\n  coord_fixed()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-24-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nSuper scatter plotting! The regression trend line looks very different to the y equals x line. As the financial advisors say, \"Past performance is no guarantee of future results.\"\n\n## Modeling consecutive returns\n\n<!--\nLO: Can quantify regression to the mean using linear regression.\n-->\nLet's quantify the relationship between returns in 2019 and 2018 by running a linear regression and making predictions. By looking at companies with extremely high or extremely low returns in 2018, we can see if their performance was similar in 2019.\n\n**Steps**\n\n1. Run a linear regression on `return_2019` versus `return_2018` using `sp500_yearly_returns`. Assign to `mdl_returns`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Run a linear regression on return_2019 vs. return_2018\n# using sp500_yearly_returns\nmdl_returns <- lm(\n  return_2019 ~ return_2018, \n  data = sp500_yearly_returns\n)\n\n# See the result\nmdl_returns\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = return_2019 ~ return_2018, data = sp500_yearly_returns)\n#> \n#> Coefficients:\n#> (Intercept)  return_2018  \n#>     0.31127      0.04691\n```\n:::\n:::\n\n\n2. Create a data frame (or tibble) named `explanatory_data`. Give it one column with 2018 returns set to a vector containing `-1`, `0`, and `1`.\n3. Use `mdl_returns` to predict with `explanatory_data`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# From previous step\nmdl_returns <- lm(\n  return_2019 ~ return_2018, \n  data = sp500_yearly_returns\n)\n\n# Create a data frame with return_2018 at -1, 0, and 1 \nexplanatory_data <- tibble(\n  return_2018 = c(-1, 0, 1)\n)\n\n# Use mdl_returns to predict with explanatory_data\npredict(mdl_returns, explanatory_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>         1         2         3 \n#> 0.2643603 0.3112714 0.3581826\n```\n:::\n:::\n\n\nIncredible investment predictions! Investments that gained a lot in value in 2018 on average gained only a small amount in 2019. Similarly, investments that lost a lot of value in 2018 on average also gained a small amount in 2019.\n\n## Transforming variables\n\nTheory. Coming soon ...\n\n\n**1. Transforming variables**\n\nSometimes, the relationship between the explanatory variable and the response variable may not be a straight line. To fit a linear regression model, you need to transform the explanatory variable or the response variable, or both of them.\n\n**2. Perch dataset**\n\nConsider the perch in the the fish dataset.\n\n**3. It's not a linear relationship**\n\nThe upward curve in the mass versus length data prevents us drawing a straight line that follows it closely.\n\n**4. Bream vs. perch**\n\nTo understand why the bream had a strong linear relationship between mass and length, but the perch don't, you need to understand your data. I'm not a fish expert, but looking at the picture of the bream on the left, it has a very narrow body. I guess that as bream get bigger, they mostly just get longer and not wider.By contrast, the perch on the right has a round body, so I guess that as it grows, it gets fatter and taller as well as longer. Since the perches are growing in three directions at once, maybe the length cubed will give a better fit.\n\n**5. Plotting mass vs. length cubed**\n\nHere's an update to the previous plot. The only change is that the x-axis is now length to the power three. The data points fit the line much better, so we're ready to run a model.\n\n**6. Modeling mass vs. length cubed**\n\nTo model a variable raised to the power of something, there is a slight change to the way the formula is written.The caret symbol has a special meaning inside model formulas. To tell lm that you want exponentiation, you need to wrap that term inside the I function. The I function is sometimes pronounced \"as is\".Otherwise, everything is the same, with the response variable on the left and the explanatory variable on the right.\n\n**7. Predicting mass vs. length cubed**\n\nYou create the explanatory data frame in the same way as usual. Notice that you specify the lengths, not the lengths cubed. R takes care of the transformation automatically.The code for adding predictions is the same mutate and predict combination you've seen before.\n\n**8. Plotting mass vs. length cubed**\n\nThe predictions have been added to the plot of mass versus length cubed as blue points. As you might expect, they follow the line drawn by ggplot.It gets more interesting on the original x-axis. Notice how the blue points curve upwards to follow the data. Your linear model has non-linear predictions, after the transformation is undone.\n\n**9. Facebook advertising dataset**\n\nLet's try one more example using a Facebook advertising dataset. The flow of online advertising is that you pay money to Facebook, who show your advert to Facebook users. If a person sees the advert, it's called an impression. Then some people who see the advert will click on it.\n\n**10. Plot is cramped**\n\nLet's look at impressions versus spend. If we draw the standard plot, the majority of the points are crammed into the bottom-left of the plot, making it difficult to assess whether there is a good fit or not.\n\n**11. Square root vs square root**\n\nBy transforming both the variables with square roots, the data are more spread out throughout the plot, and the points follow the line fairly closely. Square roots are a common transformation when your data has a right-skewed distribution.\n\n**12. Modeling and predicting**\n\nRunning the model and creating the explanatory dataset are the same as usual. You don't need to wrap the square root term in the model formula in I; that's only needed for exponentiation.Prediction requires an extra step. Because we took the square root of the response variable (not just the explanatory variable), the predict function will predict the square root of the number of impressions.That means that we have to undo the square root by squaring the predicted responses. Undoing the transformation of the response is called backtransformation.\n\n**13. Let's practice!**\n\nTime to transform some variables.\n\n## Transforming the explanatory variable\n\n<!--\nLO: Can fit a linear regression with a transformed explanatory variable and make predictions.\n-->\nIf there is no straight line relationship between the response variable and the explanatory variable, it is sometimes possible to create one by transforming one or both of the variables. Here, you'll look at transforming the explanatory variable.\n\nYou'll take another look at the Taiwan real estate dataset, this time using the distance to the nearest MRT (metro) station as the explanatory variable. You'll use code to make every commuter's dream come true: shortening the distance to the metro station by taking the square root. Take that, geography!\n\n**Steps**\n\n1. *Run the code provided, and look at the plot.*\n2. Edit the plot so the x aesthetic is square root transformed.\n3. *Look at the new plot. Notice how the numbers on the x-axis have changed. This is a different line to what was shown before. Do the points track the line more closely?*\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Run the code to see the plot\n# Edit so x-axis is square root of dist_to_mrt_m\nggplot(taiwan_real_estate, aes(sqrt(dist_to_mrt_m), price_twd_msq)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-27-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n4. Run a linear regression of `price_twd_msq` versus the square root of `dist_to_mrt_m` using `taiwan_real_estate`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Run a linear regression of price_twd_msq vs. \n# square root of dist_to_mrt_m using taiwan_real_estate\nmdl_price_vs_dist <- lm(\n  price_twd_msq ~ sqrt(dist_to_mrt_m), \n  data = taiwan_real_estate\n)\n\n# See the result\nmdl_price_vs_dist\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = price_twd_msq ~ sqrt(dist_to_mrt_m), data = taiwan_real_estate)\n#> \n#> Coefficients:\n#>         (Intercept)  sqrt(dist_to_mrt_m)  \n#>             16.7098              -0.1828\n```\n:::\n:::\n\n\n5. Create a data frame of prediction data named `prediction_data`. Start with `explanatory_data`, and add a column named after the response variable. Predict values using `mdl_price_vs_dist` and `explanatory_data`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# From previous step\nmdl_price_vs_dist <- lm(\n  price_twd_msq ~ sqrt(dist_to_mrt_m), \n  data = taiwan_real_estate\n)\n\n# Use this explanatory data\nexplanatory_data <- tibble(\n  dist_to_mrt_m = seq(0, 80, 10) ^ 2\n)\n\n# Use mdl_price_vs_dist to predict explanatory_data\nprediction_data <- explanatory_data %>% \n  mutate(\n    price_twd_msq = predict(mdl_price_vs_dist, explanatory_data)\n  )\n\n# See the result\nprediction_data\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"dist_to_mrt_m\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"price_twd_msq\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"16.709799\"},{\"1\":\"100\",\"2\":\"14.881370\"},{\"1\":\"400\",\"2\":\"13.052942\"},{\"1\":\"900\",\"2\":\"11.224513\"},{\"1\":\"1600\",\"2\":\"9.396085\"},{\"1\":\"2500\",\"2\":\"7.567656\"},{\"1\":\"3600\",\"2\":\"5.739227\"},{\"1\":\"4900\",\"2\":\"3.910799\"},{\"1\":\"6400\",\"2\":\"2.082370\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n6. Edit the plot to add a layer of points from `prediction_data`, colored `\"green\"`, size `5`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# From previous steps\nmdl_price_vs_dist <- lm(\n  price_twd_msq ~ sqrt(dist_to_mrt_m), \n  data = taiwan_real_estate\n)\nexplanatory_data <- tibble(\n  dist_to_mrt_m = seq(0, 80, 10) ^ 2\n)\nprediction_data <- explanatory_data %>% \n  mutate(\n    price_twd_msq = predict(mdl_price_vs_dist, explanatory_data)\n  )\n\nggplot(taiwan_real_estate, aes(sqrt(dist_to_mrt_m), price_twd_msq)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  # Add points from prediction_data, colored green, size 5\n  geom_point(data = prediction_data, color = \"green\", size = 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-30-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nYou transform like a robot in disguise! By transforming the explanatory variable, the relationship with the response variable became linear, and so a linear regression became an appropriate model.\n\n## Transforming the response variable too\n\n<!--\nLO: Can fit a model with a transformed response variable, and use backtransformation to make predictions.\n-->\nThe response variable can be transformed too, but this means you need an extra step at the end to undo that transformation. That is, you \"back transform\" the predictions.\n\nIn the video, you saw the first step of the digital advertising workflow: spending money to buy ads, and counting how many people see them (the \"impressions\"). The next step is determining how many people click on the advert after seeing it.\n\n`ad_conversion` is available and `ggplot2` and `tibble` are loaded.\n\n**Steps**\n\n1. *Run the code provided, and look at the plot.*\n2. Edit the plot so the x and y aesthetics are transformed by raising them to the power `0.25`.\n3. *Look at the new plot. Do the points track the line more closely?*\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load data\nad_conversion <- read_fst(\"data/ad_conversion.fst\")\n\n# Run the code to see the plot\n# Edit to raise x, y aesthetics to power 0.25\nggplot(ad_conversion, aes(n_impressions ^ 0.25, n_clicks ^ 0.25)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-31-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n4. Run a linear regression of `n_clicks` to the power `0.25` versus `n_impressions` to the power `0.25` using `ad_conversion`. *Each variable in the formula needs to be specified \"as is\", using `I()`.*\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Run a linear regression of n_clicks to the power 0.25 vs. \n# n_impressions to the power 0.25 using ad_conversion\nmdl_click_vs_impression <- lm(\n  I(n_clicks ^ 0.25) ~ I(n_impressions ^ 0.25),\n  data = ad_conversion\n)\n```\n:::\n\n\n5. Complete the code for the prediction data. Use `mdl_click_vs_impression` to predict `n_clicks` to the power `0.25` from `explanatory_data`.\n6. Back transform by raising `n_clicks_025` to the power `4` to get `n_clicks`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# From previous step\nmdl_click_vs_impression <- lm(\n  I(n_clicks ^ 0.25) ~ I(n_impressions ^ 0.25),\n  data = ad_conversion\n)\n\n# Use this explanatory data\nexplanatory_data <- tibble(\n  n_impressions = seq(0, 3e6, 5e5)\n)\n\nprediction_data <- explanatory_data %>% \n  mutate(\n    # Use mdl_click_vs_impression to predict n_clicks ^ 0.25\n    n_clicks_025 = predict(mdl_click_vs_impression, explanatory_data),\n    # Back transform to get n_clicks\n    n_clicks = n_clicks_025 ^ 4\n  )\n```\n:::\n\n\n7. Edit the plot to add a layer of points from `prediction_data`, colored `\"green\"`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# From previous steps\nmdl_click_vs_impression <- lm(\n  I(n_clicks ^ 0.25) ~ I(n_impressions ^ 0.25),\n  data = ad_conversion\n)\nexplanatory_data <- tibble(\n  n_impressions = seq(0, 3e6, 5e5)\n)\nprediction_data <- explanatory_data %>% \n  mutate(\n    n_clicks_025 = predict(mdl_click_vs_impression, explanatory_data),\n    n_clicks = n_clicks_025 ^ 4\n  )\n\nggplot(ad_conversion, aes(n_impressions ^ 0.25, n_clicks ^ 0.25)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  # Add points from prediction_data, colored green\n  geom_point(data = prediction_data, color = \"green\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-34-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nTwo-way transform! When the response variable is transformed you need to back transform the predictions.\n\n# 3. Assessing model fit\n\nIn this chapter, you’ll learn how to ask questions of your model to assess fit. You’ll learn how to quantify how well a linear regression model fits, diagnose model problems using visualizations, and understand the leverage and influence of each observation used to create the model.\n\n## Quantifying model fit\n\nTheory. Coming soon ...\n\n\n**1. Quantifying model fit**\n\nIt's usually important to know whether or not predictions from your model are nonsense. In this chapter, we'll look at ways of quantifying how good your model is.\n\n**2. Bream and perch models**\n\nPreviously, you ran models on mass versus length for bream and perch. By simply looking at these scatter plots, you can get a sense that there is a linear relationship between mass and length for bream but not for perch. It would be useful to quantify how strong that linear relationship is.\n\n**3. Coefficient of determination**\n\nThe first metric we'll discuss is the coefficient of determination. This is sometimes called \"r-squared\". For boring historical reasons, it's written with a lower case r for simple linear regression, and an upper case R when you have more than one explanatory variable.It is defined as the proportion of the variance in the response variable that is predictable from the explanatory variable. We'll get to a human-readable explanation shortly.A score of one means you have a perfect fit, and a score of zero means your model is no better than randomness.What constitutes a good score depends on your dataset. A score of zero-point five on a psychological experiment may be exceptionally high because humans are inherently hard to predict, but in other cases a score of zero-point nine may be considered a poor fit.\n\n**4. summary()**\n\nsummary shows several performance metrics at the end of its output. The coefficient of determination is written in the second to last line, and titled \"Multiple R-squared\". Its value about zero-point-eight-eight.\n\n**5. glance()**\n\nSince summary isn't easy to program with, a better way to extract the metric is to use glance from broom. Calling glance on the model returns several model metrics in a tibble.Then you can use dplyr's pull function to pull out the r-squared value.\n\n**6. It's just correlation squared**\n\nFor simple linear regression, the interpretation of the coefficient of determination is straightforward. It is simply the correlation between the explanatory and response variables, squared.\n\n**7. Residual standard error (RSE)**\n\nThe second metric we'll look at is the residual standard error, or RSE.Recall that each residual is the difference between a predicted value and an observed value. The RSE is, very roughly speaking, a measure of the typical size of the residuals. That is, how much the predictions are typically wrong by.It has the same unit as the response variable. In the fish models, the response unit is grams.\n\n**8. summary() again**\n\nsummary also displays the RSE. It is shown in the third to last line, titled \"residual standard error\". The value for the bream model is about seventy four.\n\n**9. glance() again**\n\nAs with the coefficient of determination, to get the RSE as a variable, it's best to use glance. Here, RSE is named sigma.\n\n**10. Calculating RSE: residuals squared**\n\nTo calculate the RSE yourself, it's slightly more complicated. First, you take the square of each residual.\n\n**11. Calculating RSE: sum of residuals squared**\n\nThen you take the sum of these residuals squared.\n\n**12. Calculating RSE: degrees of freedom**\n\nThen you calculate the degrees of freedom of the residuals. This is the number of observations minus the number of model coefficients.\n\n**13. Calculating RSE: square root of ratio**\n\nFinally, you take the square root of the ratio of those two numbers. Reassuringly, the value is still seventy four.\n\n**14. Interpreting RSE**\n\nYou saw that the RSE for the bream model was seventy four. That means that the difference between predicted bream masses and observed bream masses is typically about seventy four grams.\n\n**15. Root-mean-square error (RMSE)**\n\nAnother related metric is the root-mean-square error. This is calculated in the same way, except you don't subtract the number of coefficients in the second to last step. It performs the same task as residual standard error, namely quantifying how inaccurate the model predictions are, but is worse for comparisons between models. You need to be aware that RMSE exists, but typically you should use RSE instead.\n\n**16. Let's practice!**\n\nLet's make some metrics.\n\n## Coefficient of determination\n\n<!-- \nLO: Understands and can calculate the coefficient of determination (r-squared) of a linear regression model.\n-->\nThe coefficient of determination is a measure of how well the linear regression line fits the observed values. For simple linear regression, it is equal to the square of the correlation between the explanatory and response variables.\n\nHere, you'll take another look at the second stage of the advertising pipeline: modeling the click response to impressions. Two models are available: `mdl_click_vs_impression_orig` models `n_clicks` versus `n_impressions`. `mdl_click_vs_impression_trans` is the transformed model you saw in Chapter 2. It models `n_clicks ^ 0.25` versus `n_impressions ^ 0.25`.\n\n**Steps**\n\n1. Print a summary of `mdl_click_vs_impression_orig`. Do the same for `mdl_click_vs_impression_trans`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Models\nmdl_click_vs_impression_orig  <- lm(formula = n_clicks ~ n_impressions, data = ad_conversion)\nmdl_click_vs_impression_trans <- lm(formula = I(n_clicks^0.25) ~ I(n_impressions^0.25), data = ad_conversion)\n\n# Print a summary of mdl_click_vs_impression_orig\nsummary(mdl_click_vs_impression_orig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = n_clicks ~ n_impressions, data = ad_conversion)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -186.099   -5.392   -1.422    2.070  119.876 \n#> \n#> Coefficients:\n#>                Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)   1.683e+00  7.888e-01   2.133   0.0331 *  \n#> n_impressions 1.718e-04  1.960e-06  87.654   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 19.91 on 934 degrees of freedom\n#> Multiple R-squared:  0.8916,\tAdjusted R-squared:  0.8915 \n#> F-statistic:  7683 on 1 and 934 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\n# Print a summary of mdl_click_vs_impression_trans\nsummary(mdl_click_vs_impression_trans)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = I(n_clicks^0.25) ~ I(n_impressions^0.25), data = ad_conversion)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -0.57061 -0.13229  0.00582  0.14494  0.46888 \n#> \n#> Coefficients:\n#>                        Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)           0.0717479  0.0172019   4.171 3.32e-05 ***\n#> I(n_impressions^0.25) 0.1115330  0.0008844 126.108  < 2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.1969 on 934 degrees of freedom\n#> Multiple R-squared:  0.9445,\tAdjusted R-squared:  0.9445 \n#> F-statistic: 1.59e+04 on 1 and 934 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n2. Get the coefficient of determination for `mdl_click_vs_impression_orig` by glancing at the model, then pulling the `r.squared` value. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get coeff of determination for mdl_click_vs_impression_orig\nmdl_click_vs_impression_orig %>% \n  # Get the model-level details\n  glance() %>% \n  # Pull out r.squared\n  pull(r.squared)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.8916135\n```\n:::\n:::\n\n\n3. Do the same for `mdl_click_vs_impression_trans`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Do the same for the transformed model\nmdl_click_vs_impression_trans %>% \n  glance() %>% \n  pull(r.squared)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.9445273\n```\n:::\n:::\n\n\n> *Question*\n> ---\n> `mdl_click_vs_impression_orig` has a coefficient of determination of `0.89`. Which statement about the model is true?<br>\n> <br>\n> ⬜ The number of clicks explains 89% of the variability in the number of impressions.<br>\n> ✅ The number of impressions explains 89% of the variability in the number of clicks.<br>\n> ⬜ The model is correct 89% of the time.<br>\n> ⬜ The correlation between the number of impressions and the number of clicks is `0.89`.<br>\n\n> *Question*\n> ---\n> Which model does the coefficient of determination suggest gives a better fit?<br>\n> <br>\n> ⬜ The original model, `mdl_click_vs_impression_orig`.<br>\n> ✅ The transformed model, `mdl_click_vs_impression_trans`.<br>\n> ⬜ Both models are equally good.<br>\n> ⬜ Coefficient of determination doesn't measure the goodness of fit of a regression model.<br>\n\nCool coefficient of determination calculating! The transformed model has a higher coefficient of determination that the original model, suggesting that it gives a better fit to the data.\n\n## Residual standard error\n\n<!-- \nLO: Understand and can calculate the residual standard error of a linear regression model.\n-->\nResidual standard error (RSE) is a measure of the typical size of the residuals. Equivalently, it's a measure of how badly wrong you can expect predictions to be. Smaller numbers are better, with zero being a perfect fit to the data.\n\nAgain, you'll look at the models from the advertising pipeline, `mdl_click_vs_impression_orig` and `mdl_click_vs_impression_trans`. `broom` is loaded.\n\n**Steps**\n\n1. Get the residual standard error for `mdl_click_vs_impression_orig` by glancing at the model, then pulling the `sigma` value. \n2. Do the same for `mdl_click_vs_impression_trans`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get RSE for mdl_click_vs_impression_orig\nmdl_click_vs_impression_orig %>% \n  # Get the model-level details\n  glance() %>% \n  # Pull out sigma\n  pull(sigma)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 19.90584\n```\n:::\n\n```{.r .cell-code}\n# Do the same for the transformed model\nmdl_click_vs_impression_trans %>% \n  glance() %>% \n  pull(sigma)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.1969064\n```\n:::\n:::\n\n\n> *Question*\n> ---\n> `mdl_click_vs_impression_orig` has an RSE of `20`. Which statement is true?<br>\n> <br>\n> ⬜ The model explains `20%` of the variability in the number of clicks.<br>\n> ⬜ `20%` of the residuals are typically greater than the observed values.<br>\n> ✅ The typical difference between observed number of clicks and predicted number of clicks is `20`.<br>\n> ⬜ The typical difference between observed number of impressions and predicted number of impressions is `20`.<br>\n> ⬜ The model predicts that you get one click for every `20` observed impressions.<br>\n\n> *Question*\n> ---\n> Which model does the RSE suggest gives more accurate predictions?<br>\n> <br>\n> ⬜ The original model, `mdl_click_vs_impression_orig`.<br>\n> ✅ The transformed model, `mdl_click_vs_impression_trans`.<br>\n> ⬜ Both models are equally good.<br>\n> ⬜ RSE doesn't measure the accuracy of a regression model.<br>\n\nRapid RSE wrangling! RSE is a measure of accuracy for regression models. It even works on other other statistical model types like regression trees, so you can compare accuracy across different classes of models.\n\n## Visualizing model fit\n\nTheory. Coming soon ...\n\n\n**1. Visualizing model fit**\n\nThere are several plots that can quantify the performance of a model. We'll look at these plots and their interpretation first, then the code to draw them.\n\n**2. Hoped for properties of residuals**\n\nIf a linear regression model is a good fit, then the residuals are approximately normally distributed, with mean zero.\n\n**3. Bream and perch again**\n\nEarlier we ran models on the bream and perch datasets. From looking at the scatter plots with linear trend lines, it appeared that the bream model was a reasonable fit, but the perch model wasn't because the observed masses increased faster than linearly with the lengths.\n\n**4. Residuals vs. fitted values**\n\nThe first diagnostic plot is of residuals versus fitted values. The blue line is a LOESS trend line, which is a smooth curve following the data. These aren't good for making predictions with, but are useful for visualizing trends.If residuals met the assumption that they are normally distributed with mean zero, then the trend line should closely follow the y equals zero line on the plot. For the bream dataset, this is true.By contrast, the perch model doesn't meet the assumption. The residuals are above zero when the fitted value is small or big, and below zero in the middle.\n\n**5. Q-Q plot**\n\nThe second plot type is called a Q-Q plot. It shows whether or not the residuals follow a normal distribution.On the x-axis, the points are quantiles from the normal distribution. On the y-axis, you get the standardized residuals, which are the residuals divided by their standard deviation.It sounds technical, but interpreting this plot is easy. If the points track along the straight line, they are normally distributed. If not, they aren't.Here, most of the bream points follow the line closely. Two points at each extreme don't follow the line. These are labelled 14 and 30, which correspond to the row of the bream dataset where the bad residuals occur.The perch dataset doesn't track the line as closely. In particular, you can see on the right hand side of the plot that the residuals are larger than expected. That means the model is a particularly poor fit for the longer lengths of perch.\n\n**6. Scale-location**\n\nThe third plot shows the square root of the standardized residuals versus the fitted values. It's often called a scale-location plot, because that's easier to say.Where the first plot showed whether or not the residuals go positive or negative as the fitted values change, this plot shows whether the size of the residuals gets bigger or smaller.The residuals for the bream dataset get a little bigger as the fitted values increase, but it's not a huge change.Again, the plot of the perch model has a trend line that goes up and down all over the place, indicating a poor fit.\n\n**7. autoplot()**\n\nDrawing the plots is straightforward. Load the ggplot2 and ggfortify packages, then call autoplot, passing the model object.The only tricky part is the which argument. That tells you which of the plots to draw. Unfortunately, they have numbers instead of descriptive names, so you have to read the documentation to remember which number corresponds to which plot. Fortunately, the argument is vectorized so you can draw all the plots at once.\n\n**8. autoplot() with the perch model**\n\nHere's an example with the perch model. which is set to one to three, so all the plots are drawn. nrow and ncol determine the layout of the plots.\n\n**9. 'Autoplots, roll out!' -Plotimus Prime**\n\nAutoplots, roll out!\n\n## Residuals vs. fitted values\n\n<!-- \nLO: Can interpret a linear regression model diagnostic plot of residuals versus fitted values.\n-->\nHere you can see diagnostic plots of residuals versus fitted values for two models on advertising conversion.\n\nOriginal model (`n_clicks` versus `n_impressions`)\n\n<img src=\"https://assets.datacamp.com/production/repositories/5759/datasets/f5fc98eed14d0a2dba36dd3927e986110399e564/scatter-residuals-vs-fitted-ad-conversion-orig.png\" alt=\"scatter-residuals-vs-fitted-ad-conversion-orig.png\">\n\nTransformed model (`n_clicks ^ 0.25` versus `n_impressions ^ 0.25`)\n\n<img src=\"https://assets.datacamp.com/production/repositories/5759/datasets/a3817e52fb4ca961e7a6e866b0b27334c17aecb9/scatter-residuals-vs-fitted-ad-conversion-trans.png\" alt=\"scatter-residuals-vs-fitted-ad-conversion-trans.png\">\n\n> *Question*\n> ---\n> *Look at the numbers on the y-axis scales, and how well the trend lines follow the \\\\(y = 0\\\\) line.* Which statement is true?<br>\n> <br>\n> ⬜ The residuals track the \"y equals 0\" line more closely in the original model compared to the transformed model, indicating that the original model is a better fit for the data.<br>\n> ⬜ The residuals track the \"y equals 0\" line more closely in the transformed model compared to the original model, indicating that the original model is a better fit for the data.<br>\n> ⬜ The residuals track the \"y equals 0\" line more closely in the original model compared to the transformed model, indicating that the transformed model is a better fit for the data.<br>\n> ✅ The residuals track the \"y equals 0\" line more closely in the transformed model compared to the original model, indicating that the transformed model is a better fit for the data.<br>\n\nDapper diagnosis! In a good model, the residuals should have a trend line close to zero.\n\n## Q-Q plot of residuals\n\n<!-- \nLO: Can interpret a linear regression model diagnostic Q-Q plot.\n-->\nHere are normal Q-Q plots of the previous two models.\n\nOriginal model (`n_clicks` versus `n_impressions`)\n\n<img src=\"https://assets.datacamp.com/production/repositories/5759/datasets/773ef06d61ae50bb0709bb7843d291b6cb9131c6/qq-ad-conversion-orig.png\" alt=\"qq-ad-conversion-orig.png\">\n\nTransformed model (`n_clicks ^ 0.25` versus `n_impressions ^ 0.25`)\n\n<img src=\"https://assets.datacamp.com/production/repositories/5759/datasets/b73c44b4b5ae95bf0afc129f2c1c1a2c1b3843e2/qq-ad-conversion-trans.png\" alt=\"qq-ad-conversion-trans.png\">\n\n> *Question*\n> ---\n> *Look at how well the points track the \"normality\" line.* Which statement is true?<br>\n> <br>\n> ⬜ The residuals track the \"normality\" line more closely in the original model compared to the transformed model, indicating that the original model is a better fit for the data.<br>\n> ⬜ The residuals track the \"normality\" line more closely in the transformed model compared to the original model, indicating that the original model is a better fit for the data.<br>\n> ⬜ The residuals track the \"normality\" line more closely in the original model compared to the transformed model, indicating that the transformed model is a better fit for the data.<br>\n> ✅ The residuals track the \"normality\" line more closely in the transformed model compared to the original model, indicating that the transformed model is a better fit for the data.<br>\n\nYou have Q-Q juju! If the residuals from the model are normally distributed, then the points will track the line on the Q-Q plot. In this case, neither model is perfect, but the transformed model is closer.\n\n## Scale-location\n\n<!-- \nLO:  Can interpret a linear regression model diagnostic scale-location plot.\n-->\nHere are normal scale-location plots of the previous two models. That is, they show the size of residuals versus fitted values.\n\nOriginal model (`n_clicks` versus `n_impressions`)\n\n<img src=\"https://assets.datacamp.com/production/repositories/5759/datasets/7b0e44a146b149489d232bd9a20db0f360ff1ed6/scale-location-ad-conversion-orig.png\" alt=\"scale-location-ad-conversion-orig.png\">\n\nTransformed model (`n_clicks ^ 0.25` versus `n_impressions ^ 0.25`)\n\n<img src=\"https://assets.datacamp.com/production/repositories/5759/datasets/33704b5086bdf4cd0263a7c56dd1c112f8f09bb4/scale-location-ad-conversion-trans.png\" alt=\"scale-location-ad-conversion-trans.png\">\n\n> *Question*\n> ---\n> *Look at the numbers on the y-axis and the slope of the trend line.* Which statement is true?<br>\n> <br>\n> ⬜ The size of the standardized residuals is more consistent in the original model compared to the transformed model, indicating that the original model is a better fit for the data.<br>\n> ⬜ The size of the standardized residuals is more consistent in the transformed model compared to the original model, indicating that the original model is a better fit for the data.<br>\n> ⬜ The size of the standardized residuals is more consistent in the original model compared to the transformed model, indicating that the transformed model is a better fit for the data.<br>\n> ✅ The size of the standardized residuals is more consistent in the transformed model compared to the original model, indicating that the transformed model is a better fit for the data.<br>\n\nSkillful scale-location analysis! In a good model, the size of the residuals shouldn't change much as the fitted values change.\n\n## Drawing diagnostic plots\n\n<!-- \nLO: Can draw linear regression model diagnostic plots using autoplot().\n-->\nIt's time for you to draw these diagnostic plots yourself. Let's go back to the Taiwan real estate dataset and the model of house prices versus number of convenience stores.\n\nRecall that `autoplot()` lets you specify which diagnostic plots you are interested in.\n\n* `1` residuals vs. fitted values\n* `2` Q-Q plot\n* `3` scale-location\n`mdl_price_vs_conv` is available, and `ggplot2` and `ggfortify` are loaded.\n\n**Steps**\n\n1. Plot the three diagnostic plots (numbered `1` to `3`) for `mdl_price_vs_conv`. Use a layout of three rows and one column.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load package\nlibrary(ggfortify)\n\n# Plot the three diagnostics for mdl_price_vs_conv\nautoplot(mdl_price_vs_conv, which = 1:3, \n                            nrow  = 3, \n                            ncol  = 1)\n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-39-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nAwesome autoplotting! These three diagnostic plots are excellent for sanity-checking the quality of your models.\n\n## Outliers, leverage, and influence\n\nTheory. Coming soon ...\n\n**1. Outliers, leverage, and influence**\n\nSometimes, datasets contains weird values. Here, we'll look at how to spot the weird values, and the consequences they have for your regression models.\n\n**2. Roach dataset**\n\nLet's look at another part of the fish dataset, this time filtering for the roaches.\n\n**3. Which points are outliers?**\n\nHere's the standard plot of mass versus length. The technical term for an unusual data point is an outlier. So which of these points constitutes an outlier?\n\n**4. Extreme explanatory values**\n\nThe first kind of outlier is when you have explanatory variables that are extreme. In the simple linear regression case, it's easy to find and visualize them. There is one really short roach and one really long roach that I've colored cyan here.\n\n**5. Response values away from the regression line**\n\nThe other property of outliers is when the point lies a long way from the model predictions. Here, there's a roach with mass zero, which seems biologically unlikely. It's shown as a triangle.\n\n**6. Leverage**\n\nLeverage quantifies how extreme your explanatory variable values are. That is, it measures the first type of outlier we discussed. With one explanatory variable, you can find the values by filtering, but with many explanatory variables, the mathematics is more complicated. To calculate leverage, you need a model object. For historical reasons, the leverage function is called hatvalues. Like the fitted values and residuals functions, it returns a numeric vector with as many values as there are observations.\n\n**7. The .hat column**\n\naugment, from the broom package, will also calculate leverage. The values are stored in the dot-hat column.\n\n**8. Highly leveraged roaches**\n\nLet's find the values with high leverage. After augmenting, we select the columns of interest: the mass, the length, and dot-hat, renamed here as \"leverage\". Then we arrange the rows by descending leverage values and get the head. The top two are the same observations we identified earlier. The really long roach and the really short roach.\n\n**9. Influence**\n\nA related concept to leverage is influence. This is a type of \"leave one out\" metric. That is, it measures how much the model would change if you reran it without that data point. I like to think of it as the torque of the point. The amount of turning force, or torque, when using a wrench is equal to the linear force times the length of the wrench. In a similar way, the influence of each observation is based on the size of the residuals and the leverage. It isn't a straightforward multiplication; instead we use a metric called Cook's distance.\n\n**10. Cook's distance**\n\nThe calculations for Cook's distance require some linear algebra, but the important thing to know is that it is based on the size of the residuals and the leverage, and that a bigger number denotes more influence for the observation. The cooks-dot-distance function returns the values as a vector.\n\n**11. The .cooksd column**\n\nHere's the output from augment again. Cook's Distance is contained in the dot-cooksd column.\n\n**12. Most influential roaches**\n\nUsing the same approach, we can find the most influential roaches. We augment, then select the columns of interest, then arrange to get the top values. Here, you can see the two points that were highly leveraged, and the fish with zero mass that gave it a large residual.\n\n**13. Removing the most influential roach**\n\nTo see how influence works, let's remove the most influential roach. This is the one with the shortest length, at twelve-point-nine centimeters. We draw the usual plot, but add another regression line using the dataset without that short fish. The slope of the line has completely changed just by having one less data point.\n\n**14. autoplot()**\n\nautoplot also lets you draw diagnostic plots of leverage and influence, by setting the which argument to 4, 5, or 6. I find these plots less helpful for diagnosis than the previous three we looked at, other than seeing the labels of the most influential observations.\n\n**15. Let's practice!**\n\nLet's get under the influence. \n\n## Leverage\n\n<!--\nLO: Understands leverage in the context of linear regression models.\n-->\nLeverage measures how unusual or extreme the explanatory variables are for each observation. Very roughly, a high leverage means that the explanatory variable has values that are different to other points in the dataset. In the case of simple linear regression, where there is only one explanatory value, this typically means values with a very high or very low explanatory value.\n\nHere, you'll look at highly leveraged values in the model of house price versus the square root of distance from the nearest MRT station in the Taiwan real estate dataset.\n\nGuess which observations you think will have a high leverage, then move the slider to find out.\n\n> *Question*\n> ---\n> Which statement is true?<br>\n> <br>\n> ⬜ Observations with a large distance to the nearest MRT station have the highest leverage, because these points are furthest away from the linear regression trend line.<br>\n> ⬜ Observations with a large distance to the nearest MRT station have the highest leverage, because leverage is proportional to the explanatory variable.<br>\n> ✅ Observations with a large distance to the nearest MRT station have the highest leverage, because most of the observations have a short distance, so long distances are more extreme.<br>\n> ⬜ Observations with a high price have the highest leverage, because most of the observations have a low price, so high prices are most extreme.<br>\n\nLovely leveraging! Highly leveraged points are the ones with explanatory variables that are furthest away from the others.\n\n## Influence\n\n<!--\nLO: Understands influence on the context of linear regression models.\n-->\n*Influence* measures how much a model would change if each observation was left out of the model calculations, one at a time. That is, it measures how different the prediction line would look if you ran a linear regression on all data points except that point, compared to running a linear regression on the whole dataset.\n\nThe standard metric for influence is *Cook's distance*, which calculates influence based on the size of the residual and the leverage of the point.\n\nHere you can see the same model as last time: house price versus the square root of distance from the nearest MRT station in the Taiwan real estate dataset.\n\nGuess which observations you think will have a high influence, then move the slider to find out.\n\n> *Question*\n> ---\n> Which statement is true?<br>\n> <br>\n> ✅ Observations with predictions far away from the trend line have high influence, because they have large residuals and are far away from other observations.<br>\n> ⬜ Observations with high prices have high influence, because influence is proportional to the response variable.<br>\n> ⬜ Observations with predictions far away from the trend line have high influence, because the slope of the trend is negative.<br>\n> ⬜ Observations with predictions far away from the trend line have high influence, because that increases the leverage of those points.<br>\n\nImpressive influence interpretation! The majority of the influential houses were those with prices that were much higher than the model predicted (and one with a price that was much lower).\n\n## Extracting leverage and influence\n\n<!--\nLO: Can calculate and visualize observations with high leverage and influence.\n-->\nIn the last few exercises you explored which observations had the highest leverage and influence. Now you'll extract those values from an augmented version of the model, and visualize them.\n\n**Steps**\n\n1. Augment `mdl_price_vs_dist`, then arrange observations by descending influence (`.hat`), and get the head of the results.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmdl_price_vs_dist %>% \n  # Augment the model\n  augment() %>% \n  # Arrange rows by descending leverage\n  arrange(desc(.hat)) %>% \n  # Get the head of the dataset\n  head()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"price_twd_msq\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sqrt(dist_to_mrt_m)\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".fitted\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".hat\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".sigma\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".cooksd\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".std.resid\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"3.388805\",\"2\":\"80.54825\",\"3\":\"1.982126\",\"4\":\"0.02666524\",\"5\":\"2.820143\",\"6\":\"0.0035077120\",\"7\":\"0.50604061\"},{\"1\":\"3.691377\",\"2\":\"79.97677\",\"3\":\"2.086619\",\"4\":\"0.02613525\",\"5\":\"2.819879\",\"6\":\"0.0044695281\",\"7\":\"0.57714091\"},{\"1\":\"4.538578\",\"2\":\"79.41129\",\"3\":\"2.190012\",\"4\":\"0.02561660\",\"5\":\"2.818577\",\"6\":\"0.0093730405\",\"7\":\"0.84442186\"},{\"1\":\"5.688351\",\"2\":\"74.24310\",\"3\":\"3.134978\",\"4\":\"0.02114202\",\"5\":\"2.818146\",\"6\":\"0.0090604283\",\"7\":\"0.91595888\"},{\"1\":\"5.264750\",\"2\":\"74.24310\",\"3\":\"3.134978\",\"4\":\"0.02114202\",\"5\":\"2.819021\",\"6\":\"0.0063035699\",\"7\":\"0.76400271\"},{\"1\":\"4.054463\",\"2\":\"67.86567\",\"3\":\"4.301046\",\"4\":\"0.01628058\",\"5\":\"2.820993\",\"6\":\"0.0000644269\",\"7\":\"-0.08823672\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n2. Augment `mdl_price_vs_dist`, then arrange observations by descending influence (`.cooksd`), and get the head of the results.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmdl_price_vs_dist %>% \n  # Augment the model\n  augment() %>% \n  # Arrange rows by descending Cook's distance\n  arrange(desc(.cooksd)) %>% \n  # Get the head of the dataset\n  head()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"price_twd_msq\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sqrt(dist_to_mrt_m)\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".fitted\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".hat\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".sigma\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".cooksd\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".std.resid\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"35.552194\",\"2\":\"15.89283\",\"3\":\"13.803908\",\"4\":\"0.003849038\",\"5\":\"2.608234\",\"6\":\"0.11554872\",\"7\":\"7.733642\"},{\"1\":\"13.645991\",\"2\":\"61.48650\",\"3\":\"5.467431\",\"4\":\"0.012147330\",\"5\":\"2.791667\",\"6\":\"0.05244008\",\"7\":\"2.920467\"},{\"1\":\"14.099849\",\"2\":\"56.31455\",\"3\":\"6.413085\",\"4\":\"0.009331845\",\"5\":\"2.795181\",\"6\":\"0.03538436\",\"7\":\"2.740949\"},{\"1\":\"23.691377\",\"2\":\"13.65687\",\"3\":\"14.212738\",\"4\":\"0.004400819\",\"5\":\"2.781831\",\"6\":\"0.02512289\",\"7\":\"3.371517\"},{\"1\":\"2.299546\",\"2\":\"19.83080\",\"3\":\"13.083879\",\"4\":\"0.003095203\",\"5\":\"2.770253\",\"6\":\"0.02281295\",\"7\":\"-3.833434\"},{\"1\":\"23.600605\",\"2\":\"17.84739\",\"3\":\"13.446532\",\"4\":\"0.003440129\",\"5\":\"2.776044\",\"6\":\"0.02249375\",\"7\":\"3.610025\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n3. Plot the three outlier diagnostic plots (numbered `4` to `6`) for `mdl_price_vs_dist`. Use a layout of three rows and one column.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Plot the three outlier diagnostics for mdl_price_vs_conv\nautoplot(mdl_price_vs_dist, which = 4:6, nrow = 3, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-42-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nDelightful outlier diagnosing! Leverage and influence are important concepts for determining your model is overly affected by some unusual data points.\n\n# 4. Simple logistic regression\n\nLearn to fit logistic regression models. Using real-world data, you’ll predict the likelihood of a customer closing their bank account as probabilities of success and odds ratios, and quantify model performance using confusion matrices.\n\n## Why you need logistic regression\n\nTheory. Coming soon ...\n\n\n**1. Why you need logistic regression**\n\nThe datasets you've seen so far all had a numeric response variable. Now we'll explore the case of a binary response variable.\n\n**2. Bank churn dataset**\n\nConsider this dataset on churn at a European financial services company in 2006. There are 400 rows, each representing a customer. If the customer closed all accounts during the time period, they were considered to have churned, and that column is marked with a one. If they still had an open account at the end of the time period, has_churned is marked with a zero. Using one and zero for the response instead of a logical variable makes the plotting code easier.The two explanatory variables are the time since the customer first bought a service, and the time since they last bought a service. Respectively, they measure the length of relationship with the customer, and the recency of the customer's activity.The time columns contain negative values because they have been standardized for confidentiality reasons.\n\n**3. Churn vs. recency: a linear model**\n\nLet's run a linear model of churn versus recency and see what happens.We can use the coefficients function to pull out the intercept and slope. The intercept is about point-five and the slope is slightly positive at zero-point-zero-six.\n\n**4. Visualizing the linear model**\n\nHere's a plot of the data points with the linear trend. I used geom_abline rather than geom_smooth so the line isn't limited to the extent of the data.All the churn values are zero or one, but the model predictions are fractional. You can think of the predictions as being probabilities that the customer will churn.\n\n**5. Zooming out**\n\nZooming out by setting axis limits with xlim and ylim shows the problem with using a linear model. In the bottom-left of the plot, the model predicts negative probabilities. In the top-right, the model predicts probabilities greater than one.Both situations are impossible.\n\n**6. What is logistic regression?**\n\nThe solution is to use logistic regression models, which are a type of generalized linear model, used when the response variable is logical.Whereas linear models result in predictions that follow a straight line, logistic models result in predictions that follow a logistic curve, which is S-shaped.\n\n**7. Linear regression using glm()**\n\nBefore we run a logistic regression, it's worth noting that you can run a linear regression using the glm function, for generalized linear models. Replace lm with glm and set the family argument to gaussian. family specifies the family of distributions used for the residuals. You can pass it with or without quotes.Here, the coefficients are the same as before.\n\n**8. Logistic regression: glm() with binomial family**\n\nTo run a logistic regression, you also call glm. This time, set the family argument to binomial to specify residuals from the binomial distribution.As before, you get two coefficients, an intercept and one for the numerical explanatory variable. The interpretation is a little different; we'll come to that later.\n\n**9. Visualizing the logistic model**\n\nLet's add the glm predictions to the plot. ggplot will draw a logistic regression trend line with geom_smooth, shown in blue here. Notice that the prediction line is slightly curved.Look closely at the differences from our previous use of geom_smooth. In the method argument, use \"glm\" not \"lm\". You also need to add a method-dot-args argument, containing a list of the other arguments passed to glm. In this case, you need to set family equals binomial inside the list.\n\n**10. Zooming out**\n\nNow zooming out shows that the logistic regression curve never goes below zero or above one.To interpret this curve, when the standardized time since last purchase is very small, the probability of churning is close to zero. When the time since last purchase is very high, the probability is close to one. That is, customers who recently bought things are less likely to churn.\n\n**11. Let's practice!**\n\nLet's get logistic on this dataset.\n\n## Exploring the explanatory variables\n\n<!--\nLO: Visualize data for a simple logistic regression using a faceted histogram.\n-->\nWhen the response variable is logical, all the points lie on the y equals zero and y equals one lines, making it difficult to see what is happening. In the video, until you saw the trend line, it wasn't clear how the explanatory variable was distributed on each line. This can be solved with a histogram of the explanatory variable, faceted on the response.\n\nYou will use these histograms to get to know the financial services churn dataset seen in the video.\n\n**Steps**\n\n1. Using `churn`, plot `time_since_last_purchase` as a histogram with binwidth `0.25` faceted in a grid with `has_churned` on each row.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load data\nchurn <- read_fst(\"data/churn.fst\")\n\n# Using churn, plot time_since_last_purchase\nggplot(churn, aes(time_since_last_purchase)) +\n  # as a histogram with binwidth 0.25\n  geom_histogram(binwidth = 0.25) +\n  # faceted in a grid with has_churned on each row\n  facet_grid(rows = vars(has_churned))\n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-43-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n2. Redraw the plot with `time_since_first_purchase`. That is, using `churn`, plot `time_since_first_purchase` as a histogram with binwidth `0.25` faceted in a grid with `has_churned` on each row.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Redraw the plot with time_since_first_purchase\nggplot(churn, aes(time_since_first_purchase)) +\n  geom_histogram(binwidth = 0.25) +\n  facet_grid(rows = vars(has_churned))\n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-44-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nHigh five for the histograms! In the `time_since_last_purchase` plot, the distribution of churned customers was further right than the distribution of churned customers (churners typically has longer since their last purchase). For `time_since_first_purchase` the opposite is true: churners have a shorter length of relationship.\n\n## Visualizing linear and logistic models\n\n<!--\nLO: Can visualize linear and logistic regression model predictions using geom_smooth().\n-->\nAs with linear regressions, ggplot2 will draw model predictions for a logistic regression without you having to worry about the modeling code yourself. To see how the predictions differ for linear and logistic regressions, try drawing both trend lines side by side. Spoiler: you should see a linear (straight line) trend from the linear model, and a logistic (S-shaped) trend from the logistic model.\n\n**Steps**\n\n1. Using `churn` plot `has_churned` vs. `time_since_first_purchase` as a scatter plot, adding a red linear regression trend line (without a standard error ribbon).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Using churn plot has_churned vs. time_since_first_purchase\nggplot(churn, aes(time_since_first_purchase, has_churned)) +\n  # Make it a scatter plot\n  geom_point() +\n  # Add an lm trend line, no std error ribbon, colored red\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-45-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n2. Update the plot by adding a second trend line from logistic regression. (No standard error ribbon again).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(churn, aes(time_since_first_purchase, has_churned)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\") +\n  # Add a glm trend line, no std error ribbon, binomial family\n  geom_smooth(\n    method = \"glm\", \n    se = FALSE, \n    method.args = list(family = binomial)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-46-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nMagnificent model comparison plotting! The two models give similar predictions in some places, but notice the slight curve in the logistic model trend.\n\n## Logistic regression with glm()\n\n<!--\nLO: Can fit a logistic regression model with glm().\n-->\nLinear regression and logistic regression are special cases of a broader type of models called *generalized linear models* (\"GLMs\"). A linear regression makes the assumption that the residuals follow a Gaussian (normal) distribution. By contrast, a logistic regression assumes that residuals follow a binomial distribution.\n\nHere, you'll model how the length of relationship with a customer affects churn.\n\n**Steps**\n\n1. Fit a logistic regression of `has_churned` versus `time_since_first_purchase` using the `churn` dataset. Assign to `mdl_churn_vs_relationship`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Fit a logistic regression of churn vs. \n# length of relationship using the churn dataset\nmdl_churn_vs_relationship <- glm(\n  has_churned ~ time_since_first_purchase, \n  data = churn, \n  family = binomial\n)\n\n# See the result\nmdl_churn_vs_relationship\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:  glm(formula = has_churned ~ time_since_first_purchase, family = binomial, \n#>     data = churn)\n#> \n#> Coefficients:\n#>               (Intercept)  time_since_first_purchase  \n#>                  -0.01518                   -0.35479  \n#> \n#> Degrees of Freedom: 399 Total (i.e. Null);  398 Residual\n#> Null Deviance:\t    554.5 \n#> Residual Deviance: 543.7 \tAIC: 547.7\n```\n:::\n:::\n\n\nLovely logistic modeling! The code to run a logistic regression is a simple change from the code to run a linear regression. Now we need to make some predictions with the model.\n\n## Predictions and odds ratios\n\nTheory. Coming soon ...\n\n\n**1. Predictions and odds ratios**\n\nLet's see how to make predictions with your logistic regression model.\n\n**2. The ggplot predictions**\n\nYou've already seen how ggplot2 will give you a glm prediction line.\n\n**3. Making predictions**\n\nTo make a prediction with a logistic model, you use the same technique as for linear models.Create a data frame or tibble of explanatory variable values.Then add a response column calculated using predict. There is one change here. As well as passing the model object and the explanatory data to predict, you also need to set the type argument to \"response\" to get the probabilities of churning.\n\n**4. Adding point predictions**\n\nAs with the linear case, we can add those predictions onto the plot by setting the data argument of geom_point to the prediction data frame. As expected, these points follow the trend line.\n\n**5. Getting the most likely outcome**\n\nOne simpler prediction you can make, rather than calculating probabilities of a response, is to calculate the most likely response. That is, if the probability of churning is less than 0-point-5, the most likely outcome is that they won't churn. If their probability is greater then 0-point-5, it's more likely that they will churn.To calculate this, simply round the predicted probabilities.\n\n**6. Visualizing most likely outcome**\n\nWe can plot the most likely outcome by using the prediction data and overriding the y aesthetic to use the numbers we just calculated. For recently active customers, the most likely outcome is that they don't churn. Otherwise, the most likely outcome is that they churn.\n\n**7. Odds ratios**\n\nThere is another way to talk about binary responses, commonly used in gambling. The odds ratio is the probability that something happens, divided by the probability that it doesn't. For example, a probability of zero-point-two-five is the same as the odds of \"three to one against\", because the probability of the event not happening is zero-point-seven-five, which is three times as much.The plot shows the relationship between the two terms.\n\n**8. Calculating odds ratio**\n\nWe can calculate the odds ratio by dividing the predicted response probability by one minus that number.\n\n**9. Visualizing odds ratio**\n\nIt doesn't make sense to visualize odds with the original data points, so we need a new plot.Here, the dotted line where the odds ratio is one indicates where churning is just as likely as not churning. In the bottom-left, the predictions are below one, so the chance of churning is less than the chance of not churning. In the top-right, the chance of churning is about five times more than the chance of not churning.\n\n**10. Visualizing log odds ratio**\n\nOne nice property of logistic regression odds ratios is that on a log-scale, they change linearly with the explanatory variable. This plot adds scale_y_log10.\n\n**11. Calculating log odds ratio**\n\nThis nice property of the logarithm of odds ratios means log-odds ratio is another common way of describing logistic regression predictions. In fact, predict will return the log odds ratio if you don't specify the type argument.Compare the two different ways that the log odds ratio is calculated here, and make sure you understand the code.\n\n**12. All predictions together**\n\nHere are all the values calculated in the prediction dataset. Some column names are abbreviated for better printing. Notice that the log odds ratio is the same in both cases.\n\n**13. Comparing scales**\n\nEach way of describing responses has different benefits.Most likely outcome is easiest to understand because the answer is always yes or no, but this lacks precision.Probabilities and odds ratios are still fairly easy to understand for a data literate audience. However, the non-linear predictions make it hard to reason about how changes in the explanatory variable will change the response.Log odds ratio is difficult to interpret for individual values, but the linear relationship with the explanatory variables makes it easy to reason about changes.\n\n**14. Let's practice!**\n\nLet's make some predictions.\n\n## Probabilities\n\n<!-- \nLO: Can calculate logistic regression model predictions as probabilities of success.\n-->\nThere are four main ways of expressing the prediction from a logistic regression model &ndash; we'll look at each of them over the next four exercises. Firstly, since the response variable is either \"yes\" or \"no\", you can make a prediction of the probability of a \"yes\". Here, you'll calculate and visualize these probabilities.\n\nThree variables are available:\n\n* `mdl_churn_vs_relationship` is the logistic regression model of `has_churned` versus `time_since_first_purchase`.\n* `explanatory_data` is a data frame of explanatory values.\n* `plt_churn_vs_relationship` is a scatter plot of `has_churned` versus `time_since_first_purchase` with a smooth glm line.\n\n**Steps**\n\n1. Use the model, `mdl_churn_vs_relationship`, and the explanatory data, `explanatory_data`, to predict the probability of churning. Assign the predictions to the `has_churned` column of a data frame, `prediction_data`. *Remember to set the prediction* `type`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Create data\nexplanatory_data <- tibble(time_since_first_purchase = seq(-1.5, 4, 0.25))\n\n\n# Make a data frame of predicted probabilities\nprediction_data <- explanatory_data %>% \n  mutate(   \n    has_churned = predict(\n      mdl_churn_vs_relationship, \n      explanatory_data, \n      type = \"response\"\n    )\n  )\n\n# See the result\nprediction_data\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"time_since_first_purchase\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"has_churned\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"-1.50\",\"2\":\"0.6264479\"},{\"1\":\"-1.25\",\"2\":\"0.6054699\"},{\"1\":\"-1.00\",\"2\":\"0.5840959\"},{\"1\":\"-0.75\",\"2\":\"0.5624009\"},{\"1\":\"-0.50\",\"2\":\"0.5404646\"},{\"1\":\"-0.25\",\"2\":\"0.5183703\"},{\"1\":\"0.00\",\"2\":\"0.4962039\"},{\"1\":\"0.25\",\"2\":\"0.4740525\"},{\"1\":\"0.50\",\"2\":\"0.4520027\"},{\"1\":\"0.75\",\"2\":\"0.4301398\"},{\"1\":\"1.00\",\"2\":\"0.4085460\"},{\"1\":\"1.25\",\"2\":\"0.3872994\"},{\"1\":\"1.50\",\"2\":\"0.3664732\"},{\"1\":\"1.75\",\"2\":\"0.3461342\"},{\"1\":\"2.00\",\"2\":\"0.3263425\"},{\"1\":\"2.25\",\"2\":\"0.3071509\"},{\"1\":\"2.50\",\"2\":\"0.2886044\"},{\"1\":\"2.75\",\"2\":\"0.2707401\"},{\"1\":\"3.00\",\"2\":\"0.2535875\"},{\"1\":\"3.25\",\"2\":\"0.2371681\"},{\"1\":\"3.50\",\"2\":\"0.2214964\"},{\"1\":\"3.75\",\"2\":\"0.2065799\"},{\"1\":\"4.00\",\"2\":\"0.1924196\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n2. Update the `plt_churn_vs_relationship` plot to add points from `prediction_data`, colored yellow.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplt_churn_vs_relationship <- ggplot(churn, aes(time_since_first_purchase, has_churned)) +\n  geom_point() +\n  geom_smooth(\n    method = \"glm\", \n    se = FALSE, \n    method.args = list(family = binomial)\n  )\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# From previous step\nprediction_data <- explanatory_data %>% \n  mutate(   \n    has_churned = predict(mdl_churn_vs_relationship, explanatory_data, type = \"response\")\n  )\n\n# Update the plot\nplt_churn_vs_relationship +\n  # Add points from prediction_data, colored yellow, size 2\n  geom_point(data = prediction_data, color = \"yellow\", size = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-50-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nProbably perfect probability plotting! The probability of a positive response is a natural way of thinking about predictions.\n\n## Most likely outcome\n\n<!-- \nLO: Can calculate logistic regression model predictions as most likely outcome.\n-->\nWhen explaining your results to a non-technical audience, you may wish to side-step talking about probabilities and simply explain the most likely outcome. That is, rather than saying there is a 60% chance of a customer churning, you say that the most likely outcome is that the customer will churn. The tradeoff here is easier interpretation at the cost of nuance.\n\n**Steps**\n\n1. Update `prediction_data` to add a column of the most likely churn outcome, `most_likely_outcome`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Update the data frame\nprediction_data <- explanatory_data %>% \n  mutate(   \n    has_churned = predict(mdl_churn_vs_relationship, explanatory_data, type = \"response\"),\n    # Add the most likely churn outcome\n    most_likely_outcome = round(has_churned)\n  )\n\n# See the result\nprediction_data\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"time_since_first_purchase\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"has_churned\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"most_likely_outcome\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"-1.50\",\"2\":\"0.6264479\",\"3\":\"1\"},{\"1\":\"-1.25\",\"2\":\"0.6054699\",\"3\":\"1\"},{\"1\":\"-1.00\",\"2\":\"0.5840959\",\"3\":\"1\"},{\"1\":\"-0.75\",\"2\":\"0.5624009\",\"3\":\"1\"},{\"1\":\"-0.50\",\"2\":\"0.5404646\",\"3\":\"1\"},{\"1\":\"-0.25\",\"2\":\"0.5183703\",\"3\":\"1\"},{\"1\":\"0.00\",\"2\":\"0.4962039\",\"3\":\"0\"},{\"1\":\"0.25\",\"2\":\"0.4740525\",\"3\":\"0\"},{\"1\":\"0.50\",\"2\":\"0.4520027\",\"3\":\"0\"},{\"1\":\"0.75\",\"2\":\"0.4301398\",\"3\":\"0\"},{\"1\":\"1.00\",\"2\":\"0.4085460\",\"3\":\"0\"},{\"1\":\"1.25\",\"2\":\"0.3872994\",\"3\":\"0\"},{\"1\":\"1.50\",\"2\":\"0.3664732\",\"3\":\"0\"},{\"1\":\"1.75\",\"2\":\"0.3461342\",\"3\":\"0\"},{\"1\":\"2.00\",\"2\":\"0.3263425\",\"3\":\"0\"},{\"1\":\"2.25\",\"2\":\"0.3071509\",\"3\":\"0\"},{\"1\":\"2.50\",\"2\":\"0.2886044\",\"3\":\"0\"},{\"1\":\"2.75\",\"2\":\"0.2707401\",\"3\":\"0\"},{\"1\":\"3.00\",\"2\":\"0.2535875\",\"3\":\"0\"},{\"1\":\"3.25\",\"2\":\"0.2371681\",\"3\":\"0\"},{\"1\":\"3.50\",\"2\":\"0.2214964\",\"3\":\"0\"},{\"1\":\"3.75\",\"2\":\"0.2065799\",\"3\":\"0\"},{\"1\":\"4.00\",\"2\":\"0.1924196\",\"3\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n2. Update `plt_churn_vs_relationship`, adding yellow points of size 2 with `most_likely_outcome` as the y aesthetic, using `prediction_data`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# From previous step\nprediction_data <- explanatory_data %>% \n  mutate(   \n    has_churned = predict(mdl_churn_vs_relationship, explanatory_data, type = \"response\"),\n    most_likely_outcome = round(has_churned)\n  )\n\n# Update the plot\nplt_churn_vs_relationship +\n  # Add most likely outcome points from prediction_data, \n  # colored yellow, size 2\n  geom_point(\n    aes(y = most_likely_outcome), \n    data = prediction_data, \n    color = \"yellow\",\n    size = 2\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-52-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nThe most likely outcome is that you will master logistic regression! Providing the most likely response is a great way to share the model results with a non-technical audience.\n\n## Odds ratio\n\n<!-- \nLO: Can calculate logistic regression model predictions as odds ratios.\n-->\nOdds ratios compare the probability of something happening with the probability of it not happening. This is sometimes easier to reason about than probabilities, particularly when you want to make decisions about choices. For example, if a customer has a 20% chance of churning, it maybe more intuitive to say \"the chance of them not churning is four times higher than the chance of them churning\". \n\n**Steps**\n\n1. Update `prediction_data` to add a column, `odds_ratio`, of the odds ratios.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Update the data frame\nprediction_data <- explanatory_data %>% \n  mutate(   \n    has_churned = predict(\n      mdl_churn_vs_relationship, explanatory_data, \n      type = \"response\"\n    ),\n    # Add the odds ratio\n    odds_ratio = has_churned / (1 - has_churned)\n  )\n\n# See the result\nprediction_data\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"time_since_first_purchase\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"has_churned\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"odds_ratio\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"-1.50\",\"2\":\"0.6264479\",\"3\":\"1.6770025\"},{\"1\":\"-1.25\",\"2\":\"0.6054699\",\"3\":\"1.5346606\"},{\"1\":\"-1.00\",\"2\":\"0.5840959\",\"3\":\"1.4044004\"},{\"1\":\"-0.75\",\"2\":\"0.5624009\",\"3\":\"1.2851966\"},{\"1\":\"-0.50\",\"2\":\"0.5404646\",\"3\":\"1.1761107\"},{\"1\":\"-0.25\",\"2\":\"0.5183703\",\"3\":\"1.0762839\"},{\"1\":\"0.00\",\"2\":\"0.4962039\",\"3\":\"0.9849302\"},{\"1\":\"0.25\",\"2\":\"0.4740525\",\"3\":\"0.9013305\"},{\"1\":\"0.50\",\"2\":\"0.4520027\",\"3\":\"0.8248267\"},{\"1\":\"0.75\",\"2\":\"0.4301398\",\"3\":\"0.7548164\"},{\"1\":\"1.00\",\"2\":\"0.4085460\",\"3\":\"0.6907485\"},{\"1\":\"1.25\",\"2\":\"0.3872994\",\"3\":\"0.6321186\"},{\"1\":\"1.50\",\"2\":\"0.3664732\",\"3\":\"0.5784651\"},{\"1\":\"1.75\",\"2\":\"0.3461342\",\"3\":\"0.5293657\"},{\"1\":\"2.00\",\"2\":\"0.3263425\",\"3\":\"0.4844338\"},{\"1\":\"2.25\",\"2\":\"0.3071509\",\"3\":\"0.4433156\"},{\"1\":\"2.50\",\"2\":\"0.2886044\",\"3\":\"0.4056875\"},{\"1\":\"2.75\",\"2\":\"0.2707401\",\"3\":\"0.3712533\"},{\"1\":\"3.00\",\"2\":\"0.2535875\",\"3\":\"0.3397417\"},{\"1\":\"3.25\",\"2\":\"0.2371681\",\"3\":\"0.3109049\"},{\"1\":\"3.50\",\"2\":\"0.2214964\",\"3\":\"0.2845157\"},{\"1\":\"3.75\",\"2\":\"0.2065799\",\"3\":\"0.2603663\"},{\"1\":\"4.00\",\"2\":\"0.1924196\",\"3\":\"0.2382667\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n2. Using `prediction_data`, draw a line plot of `odds_ratio` versus `time_since_first_purchase`. Add a dotted horizontal line at `odds_ratio` equal to `1`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# From previous step\nprediction_data <- explanatory_data %>% \n  mutate(   \n    has_churned = predict(mdl_churn_vs_relationship, explanatory_data, type = \"response\"),\n    odds_ratio = has_churned / (1 - has_churned)\n  )\n\n# Using prediction_data, plot odds_ratio vs. time_since_first_purchase\nggplot(prediction_data, aes(time_since_first_purchase, odds_ratio)) +\n  # Make it a line plot\n  geom_line() +\n  # Add a dotted horizontal line at y = 1\n  geom_hline(yintercept = 1, linetype = \"dotted\")\n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-54-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nYou beat the odds! Odds ratios provide an alternative to probabilities that make it easier to compare positive and negative responses.\n\n## Log odds ratio\n\n<!-- \nLO: Can calculate logistic regression model predictions as log-odds ratios.\n-->\nOne downside to probabilities and odds ratios for logistic regression predictions is that the prediction lines for each are curved. This makes it harder to reason about what happens to the prediction when you make a change to the explanatory variable. The logarithm of the odds ratio (the \"log odds ratio\") does have a linear relationship between predicted response and explanatory variable. That means that as the explanatory variable changes, you don't see dramatic changes in the response metric - only linear changes.\n\nSince the actual values of log odds ratio are less intuitive than (linear) odds ratio, for visualization purposes it's usually better to plot the odds ratio and apply a log transformation to the y-axis scale.\n\n**Steps**\n\n1. Update `prediction_data` to add the log odds ratio calculated two ways. Calculate it from the `odds_ratio`, then directly using `predict()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Update the data frame\nprediction_data <- explanatory_data %>% \n  mutate(   \n    has_churned = predict(mdl_churn_vs_relationship, explanatory_data, type = \"response\"),\n    odds_ratio = has_churned / (1 - has_churned),\n    # Add the log odds ratio from odds_ratio\n    log_odds_ratio = log(odds_ratio),\n    # Add the log odds ratio using predict()\n    log_odds_ratio2 = predict(mdl_churn_vs_relationship, explanatory_data)\n  )\n\n# See the result\nprediction_data\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"time_since_first_purchase\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"has_churned\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"odds_ratio\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"log_odds_ratio\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"log_odds_ratio2\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"-1.50\",\"2\":\"0.6264479\",\"3\":\"1.6770025\",\"4\":\"0.51700798\",\"5\":\"0.51700798\"},{\"1\":\"-1.25\",\"2\":\"0.6054699\",\"3\":\"1.5346606\",\"4\":\"0.42830923\",\"5\":\"0.42830923\"},{\"1\":\"-1.00\",\"2\":\"0.5840959\",\"3\":\"1.4044004\",\"4\":\"0.33961048\",\"5\":\"0.33961048\"},{\"1\":\"-0.75\",\"2\":\"0.5624009\",\"3\":\"1.2851966\",\"4\":\"0.25091173\",\"5\":\"0.25091173\"},{\"1\":\"-0.50\",\"2\":\"0.5404646\",\"3\":\"1.1761107\",\"4\":\"0.16221298\",\"5\":\"0.16221298\"},{\"1\":\"-0.25\",\"2\":\"0.5183703\",\"3\":\"1.0762839\",\"4\":\"0.07351423\",\"5\":\"0.07351423\"},{\"1\":\"0.00\",\"2\":\"0.4962039\",\"3\":\"0.9849302\",\"4\":\"-0.01518451\",\"5\":\"-0.01518451\"},{\"1\":\"0.25\",\"2\":\"0.4740525\",\"3\":\"0.9013305\",\"4\":\"-0.10388326\",\"5\":\"-0.10388326\"},{\"1\":\"0.50\",\"2\":\"0.4520027\",\"3\":\"0.8248267\",\"4\":\"-0.19258201\",\"5\":\"-0.19258201\"},{\"1\":\"0.75\",\"2\":\"0.4301398\",\"3\":\"0.7548164\",\"4\":\"-0.28128076\",\"5\":\"-0.28128076\"},{\"1\":\"1.00\",\"2\":\"0.4085460\",\"3\":\"0.6907485\",\"4\":\"-0.36997951\",\"5\":\"-0.36997951\"},{\"1\":\"1.25\",\"2\":\"0.3872994\",\"3\":\"0.6321186\",\"4\":\"-0.45867826\",\"5\":\"-0.45867826\"},{\"1\":\"1.50\",\"2\":\"0.3664732\",\"3\":\"0.5784651\",\"4\":\"-0.54737701\",\"5\":\"-0.54737701\"},{\"1\":\"1.75\",\"2\":\"0.3461342\",\"3\":\"0.5293657\",\"4\":\"-0.63607576\",\"5\":\"-0.63607576\"},{\"1\":\"2.00\",\"2\":\"0.3263425\",\"3\":\"0.4844338\",\"4\":\"-0.72477451\",\"5\":\"-0.72477451\"},{\"1\":\"2.25\",\"2\":\"0.3071509\",\"3\":\"0.4433156\",\"4\":\"-0.81347326\",\"5\":\"-0.81347326\"},{\"1\":\"2.50\",\"2\":\"0.2886044\",\"3\":\"0.4056875\",\"4\":\"-0.90217201\",\"5\":\"-0.90217201\"},{\"1\":\"2.75\",\"2\":\"0.2707401\",\"3\":\"0.3712533\",\"4\":\"-0.99087076\",\"5\":\"-0.99087076\"},{\"1\":\"3.00\",\"2\":\"0.2535875\",\"3\":\"0.3397417\",\"4\":\"-1.07956951\",\"5\":\"-1.07956951\"},{\"1\":\"3.25\",\"2\":\"0.2371681\",\"3\":\"0.3109049\",\"4\":\"-1.16826826\",\"5\":\"-1.16826826\"},{\"1\":\"3.50\",\"2\":\"0.2214964\",\"3\":\"0.2845157\",\"4\":\"-1.25696701\",\"5\":\"-1.25696701\"},{\"1\":\"3.75\",\"2\":\"0.2065799\",\"3\":\"0.2603663\",\"4\":\"-1.34566576\",\"5\":\"-1.34566576\"},{\"1\":\"4.00\",\"2\":\"0.1924196\",\"3\":\"0.2382667\",\"4\":\"-1.43436451\",\"5\":\"-1.43436451\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n2. Update the plot to use a logarithmic y-scale.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# From previous step\nprediction_data <- explanatory_data %>% \n  mutate(   \n    has_churned = predict(mdl_churn_vs_relationship, explanatory_data, type = \"response\"),\n    odds_ratio = has_churned / (1 - has_churned),\n    log_odds_ratio = log(odds_ratio)\n  )\n\n# Update the plot\nggplot(prediction_data, aes(time_since_first_purchase, odds_ratio)) +\n  geom_line() +\n  geom_hline(yintercept = 1, linetype = \"dotted\") +\n  # Use a logarithmic y-scale\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-56-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nLaudable log odds ratio work! The linear relationship between predicted log odds ratio and the explanatory variable makes changes easier to reason about.\n\n## Quantifying logistic regression fit\n\nTheory. Coming soon ...\n\n\n**1. Quantifying logistic regression fit**\n\nNow we'll assess the performance of the logistic regression models. The diagnostic plots we drew for linear models are less useful in the logistic case. Instead, we'll look at confusion matrices.\n\n**2. The four outcomes**\n\nA logical response variable leads to four possible outcomes. If the customer didn't churn and we predicted they wouldn't, or if they did churn and we predicted that, the model did well.There are two bad cases. Predicting the customer churned when they didn't is called a false positive. Predicting the customer didn't churn when they did is called a false negative.The counts of each outcome are called a confusion matrix.\n\n**3. Confusion matrix: counts of outcomes**\n\nRecall the model of churn versus recency. Getting the counts of model outcomes is a rare task that is nicer to do in base R code rather than tidyverse code.First, we get the actual responses from the has_churned column of the dataset.Next we get the predicted responses from the model. fitted works on logistic models in the same way as linear models, returning the predicted values of each observation in the dataset. These fitted values are probabilities. To get the most likely outcome, we need to round the values to zero or one.Finally, we use table to get the counts of each combination of values. This is the confusion matrix mentioned earlier.We correctly predicted that one hundred and forty one customers didn't churn and eighty nine customers did churn. There were fifty nine false positives and one hundred and eleven false negatives.\n\n**4. Visualizing the confusion matrix: mosaic plot**\n\nThe yardstick package lets you easily plot the confusion matrix and calculate performance metrics.We convert the table into a yardstick confusion matrix object using conf_mat. Then, just as with linear model objects, we can simply call autoplot.autoplot draws a mosaic plot of the confusion matrix. To interpret this, start by looking at the column widths. The width of each column is proportional to the fraction of observations in each category of actual values. Here, there are two hundred actual churns and two hundred actual not churns, so each column has the same width.Then each column displays the fraction of predicted observations with each value. Here, just over a quarter of the actual not churns were predicted to be churns, so the block in the bottom left is just over a quarter of the height of the first column.\n\n**5. Performance metrics**\n\nCalling summary on the confusion matrix returns lots of model performance metrics. Since we used zero and one for the response values instead of a factor, the second column contains the positive response, so we set event_level to \"second\".We'll explore three metrics.\n\n**6. Accuracy**\n\nThe first metric is the model accuracy. This is the proportion of correct predictions. That is, the number of true negatives plus the true positives, divided by the total number of observations. Higher accuracy is better.The total number of correct observations is one hundred and forty one plus eighty nine. We divide this total by the total number of observations, which is the sum of all four numbers.\n\n**7. Sensitivity**\n\nThe second metric in the summary is sensitivity. This is the proportion of observations where the actual response was true where the model also predicted that they were true. That is, the number of true positives divided by the sum of the false negatives and true positives. Higher sensitivity is better.Here, eighty nine of the two hundred customers who churned were correctly predicted to churn.\n\n**8. Specificity**\n\nThe third metric in the summary is specificity. This is the proportion of observations where the actual response was false where the model also predicted that they were false. That is, the number of true negatives divided by the sum of the true negatives and false positives. Again, higher specificity is better, though there is often a tradeoff where improving specificity will decrease sensitivity, or increasing sensitivity will decrease specificity.Here, one hundred and forty one of the two hundred customers who didn't churn were correctly predicted to not churn.\n\n**9. Let's practice!**\n\nLet's calculate some metrics.\n\n## Calculating the confusion matrix\n\n<!-- \nLO: Can calculate a confusion matrix form a logistic regression model.\n-->\nA *confusion matrix* (occasionally called a *confusion table*) is the basis of all performance metrics for models with a categorical response (such as a logistic regression). It contains the counts of each actual response-predicted response pair. In this case, where there are two possible responses (churn or not churn), there are four overall outcomes.\n\n1. The customer churned and the model predicted that.\n2. The customer churned but the model didn't predict that.\n3. The customer didn't churn but the model predicted they did.\n4. The customer didn't churn and the model predicted that.\n\n**Steps**\n\n1. Get the actual responses from the `has_churned` column of the dataset. Assign to `actual_response`.\n2. Get the \"most likely\" predicted responses from the model. Assign to `predicted_response`.\n3. Create a table of counts from the actual and predicted response vectors. Assign to `outcomes`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get the actual responses from the dataset\nactual_response <- churn$has_churned\n\n# Get the \"most likely\" predicted responses from the model\npredicted_response <- round(fitted(mdl_churn_vs_relationship))\n\n# Create a table of counts\noutcomes <- table(predicted_response, actual_response)\n\n# See the result\noutcomes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                   actual_response\n#> predicted_response   0   1\n#>                  0 112  76\n#>                  1  88 124\n```\n:::\n:::\n\n\nCourageous confusion creation! The name 'confusion matrix' sounds scary, but it's just a table of counts. Simple!\n\n## Measuring logistic model performance\n\n<!-- \nLO: Can visualize a confusion matrix as a mosaic plot.\n-->\nHaving the confusion matrix as a table object is OK, but a little hard to program with. By converting this to a `yardstick` confusion matrix object, you get methods for plotting and extracting performance metrics.\n\nThe `yardstick.event_first` option is set to `FALSE`. (The global option, yardstick.event_first, has been deprecated in favor of the new explicit argument, `event_level`.)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noptions(yardstick.event_first = TRUE)  -> event_level = \"first\" # (the default)\noptions(yardstick.event_first = FALSE) -> event_level = \"second\"\n```\n:::\n\n\n**Steps**\n\n1. Convert `outcomes` to a yardstick confusion matrix. Assign to `confusion`.\n2. Automatically plot `confusion`. \n3. Get performance metrics from `confusion`, remembering that the positive response is in the second column.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load package\nlibrary(yardstick)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> For binary classification, the first factor level is assumed to be the event.\n#> Use the argument `event_level = \"second\"` to alter this as needed.\n```\n:::\n\n```{.r .cell-code}\n# Convert outcomes to a yardstick confusion matrix\nconfusion <- conf_mat(outcomes, event_level = \"second\")\n\n# Plot the confusion matrix\nautoplot(confusion, type = \"mosaic\")\n```\n\n::: {.cell-output-display}\n![](03_regression_beginner_files/figure-html/unnamed-chunk-59-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n# Get performance metrics for the confusion matrix\nsummary(confusion, event_level = \"second\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"accuracy\",\"2\":\"binary\",\"3\":\"0.5900000\"},{\"1\":\"kap\",\"2\":\"binary\",\"3\":\"0.1800000\"},{\"1\":\"sens\",\"2\":\"binary\",\"3\":\"0.6200000\"},{\"1\":\"spec\",\"2\":\"binary\",\"3\":\"0.5600000\"},{\"1\":\"ppv\",\"2\":\"binary\",\"3\":\"0.5849057\"},{\"1\":\"npv\",\"2\":\"binary\",\"3\":\"0.5957447\"},{\"1\":\"mcc\",\"2\":\"binary\",\"3\":\"0.1803249\"},{\"1\":\"j_index\",\"2\":\"binary\",\"3\":\"0.1800000\"},{\"1\":\"bal_accuracy\",\"2\":\"binary\",\"3\":\"0.5900000\"},{\"1\":\"detection_prevalence\",\"2\":\"binary\",\"3\":\"0.5300000\"},{\"1\":\"precision\",\"2\":\"binary\",\"3\":\"0.5849057\"},{\"1\":\"recall\",\"2\":\"binary\",\"3\":\"0.6200000\"},{\"1\":\"f_meas\",\"2\":\"binary\",\"3\":\"0.6019417\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nMagnificent model performance measuring! By converting from a standard table object to a yardstick confusion matrix object, plotting and getting performance metrics is easy.\n\n## Accuracy, sensitivity, specificity\n\n`yardstick` can compute lots of performance metrics from a confusion matrix. For logistic regression, three of them in particular are important: accuracy, sensitivity, and specificity. Can you identify what each of those terms mean in the context of the churn model?\n\nMatch the definition of the churn model performance metric to the name of that metric.\n\n| Accuracy | Sensitivity | Specifity |\n| --- | --- | --- |\n| The proportion of customers where the model correctly predicted whether or not they churned. | The proportion of customers who churned where the model correctly predicted that they churned. | The proportion of customers who didn't churn where the model correctly predicted that they didn't churn. |\n\nInsightful metric identification! Accuracy, sensitivity, and specificity are the most important performance metrics for logistic regression models.\n\n## Congratulations\n\nTheory. Coming soon ...\n\n\n**1. Congratulations**\n\nWell done! You made it through the course!\n\n**2. You learned things**\n\nIn Chapter 1 you saw how to fit a simple linear regression with both a numeric and a categorical explanatory variable, and how to interpret the model coefficients.In Chapter 2 you saw how to make predictions with a linear regression model, how to work with model objects, what regression to the mean means, and how to transform model variables.In Chapter 3 you saw how to quantify and visualize model fit, and learned about outliers, leverage, and influence of observations.In Chapter 4 you fitted a simple logistic regression model, calculated its predictions in several different ways, and calculated performance metrics using a confusion matrix.\n\n**3. Multiple explanatory variables**\n\nThe next step in your journey is to learn how to run regressions with more than one explanatory variable.\n\n**4. Unlocking advanced skills**\n\nOnce you've done that, it will unlock a lot more DataCamp content covering advanced modeling and machine learning skills.\n\n**5. Regression is important everywhere**\n\nRegression is such an important modeling technique because it is used in so many different fields. Naturally, DataCamp has courses that specialize in these applications.\n\n**6. Let's practice!**\n\nI hope you enjoyed the course. Happy learning!\n\n",
    "supporting": [
      "03_regression_beginner_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}